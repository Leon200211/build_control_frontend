{"version":3,"file":"webix.js","sources":["../sources/thirdparty/promiz.js","../sources/load/drivers/xml.js","../sources/load/ajax.js","../sources/webix/html.js","../sources/webix/env.js","../sources/load/drivers/excel.js","../sources/webix/template.js","../sources/webix/htmlevents.js","../sources/ui/core.js","../sources/webix/message.js","../sources/core/uimanager.js","../sources/core/collectionbind.js","../sources/views/view.js","../sources/core/canvas.js","../sources/css/skins/mini/config.js","../sources/core/touch.js","../sources/core/dragcontrol.js","../sources/views/window.js","../sources/webix/clipbuffer.js","../sources/core/customprint.js","../sources/core/customscroll.js","../sources/core/validatedata.js","../sources/load/dataprocessor.js","../sources/core/datastore.js","../sources/core/dataloader.js","../sources/core/dragitem.js","../sources/core/undo.js","../sources/webix/editors.js","../sources/core/editability.js","../sources/core/groupmethods.js","../sources/core/htmloptions.js","../sources/core/idspace.js","../sources/core/mapcollection.js","../sources/core/progressbar.js","../sources/core/scrollable.js","../sources/webix/color.js","../sources/core/sparklines/line.js","../sources/core/sparklines/pie.js","../sources/core/sparklines/radar.js","../sources/core/treeapi.js","../sources/core/treerenderstack.js","../sources/core/treestore.js","../sources/core/uploaddriver.js","../sources/core/virtualrenderstack.js","../sources/core/vrenderstack.js","../sources/webix/export/common.js","../sources/webix/export/topdf.js","../sources/webix/export/toexcel.js","../sources/i18n/en.js","../sources/core/date.js","../sources/webix/storage.js","../sources/load/remote.js","../sources/ui/datafilter.js","../sources/views/baselayout.js","../sources/views/layout.js","../sources/views/daterange.js","../sources/ui/datafilter_pro.js","../sources/ui/detect.js","../sources/i18n/de.js","../sources/i18n/fr.js","../sources/i18n/it.js","../sources/i18n/pt.js","../sources/i18n/ru.js","../sources/i18n/be.js","../sources/views/iframe.js","../sources/views/accordionitem.js","../sources/views/resizer.js","../sources/views/align.js","../sources/views/tabview.js","../sources/views/abslayout.js","../sources/views/gridlayout.js","../sources/views/flexlayout.js","../sources/views/form.js","../sources/views/htmlform.js","../sources/views/property.js","../sources/views/calendar.js","../sources/views/colorboard.js","../sources/views/colorselect.js","../sources/views/button.js","../sources/views/text.js","../sources/core/textpattern.js","../sources/views/checkbox.js","../sources/views/radio.js","../sources/views/datepicker.js","../sources/views/combo.js","../sources/views/segmented.js","../sources/views/multitext.js","../sources/views/multicombo.js","../sources/views/slider.js","../sources/views/rangeslider.js","../sources/views/tabbar.js","../sources/views/richtext.js","../sources/webix/print.js","../sources/webix/consts.js","../sources/webix/helpers.js","../sources/webix/customevents.js","../sources/webix/export/topng.js","../sources/webix/export/tocsv.js","../sources/webix/api.js","../sources/load/send.js"],"sourcesContent":["var global = window;\n\nvar queueId = 1;\nvar queue = {};\nvar isRunningTask = false;\n\nif (!global.setImmediate && global.addEventListener)\n\tglobal.addEventListener(\"message\", function (e) {\n\t\tif (e.source == global){\n\t\t\tif (isRunningTask)\n\t\t\t\tnextTick(queue[e.data]);\n\t\t\telse {\n\t\t\t\tisRunningTask = true;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof queue[e.data] === \"function\")\n\t\t\t\t\t\tqueue[e.data]();\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// eslint-disable-line\n\t\t\t\t}\n\n\t\t\t\tdelete queue[e.data];\n\t\t\t\tisRunningTask = false;\n\t\t\t}\n\t\t}\n\t});\n\nfunction nextTick(fn) {\n\tif (global.setImmediate) global.setImmediate(fn);\n\t// if inside of web worker\n\telse if (global.importScripts || !global.addEventListener) setTimeout(fn);\n\telse {\n\t\tqueueId++;\n\t\tqueue[queueId] = fn;\n\t\tglobal.postMessage(queueId, \"*\");\n\t}\n}\n\nDeferred.resolve = function (value) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (value instanceof Deferred)\n\t\treturn value;\n\n\treturn new Deferred(function (resolve) {\n\t\tresolve(value);\n\t});\n};\n\nDeferred.reject = function (value) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\treturn new Deferred(function (resolve, reject) {\n\t\treject(value);\n\t});\n};\n\nDeferred.all = function (arr) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (!(arr instanceof Array))\n\t\treturn Deferred.reject(TypeError());\n\n\tvar d = new Deferred();\n\n\tfunction done(e, v) {\n\t\tif (v)\n\t\t\treturn d.resolve(v);\n\n\t\tif (e)\n\t\t\treturn d.reject(e);\n\n\t\tvar unresolved = arr.reduce(function (cnt, v) {\n\t\t\tif (v && v.then)\n\t\t\t\treturn cnt + 1;\n\t\t\treturn cnt;\n\t\t}, 0);\n\n\t\tif(unresolved == 0)\n\t\t\td.resolve(arr);\n\n\n\t\tarr.map(function (v, i) {\n\t\t\tif (v && v.then)\n\t\t\t\tv.then(function (r) {\n\t\t\t\t\tarr[i] = r;\n\t\t\t\t\tdone();\n\t\t\t\t\treturn r;\n\t\t\t\t}, done);\n\t\t});\n\t}\n\n\tdone();\n\n\treturn d;\n};\n\nDeferred.race = function (arr) {\n\tif (!(this._d == 1))\n\t\tthrow TypeError();\n\n\tif (!(arr instanceof Array))\n\t\treturn Deferred.reject(TypeError());\n\n\tif (arr.length == 0)\n\t\treturn new Deferred();\n\n\tvar d = new Deferred();\n\n\tfunction done(e, v) {\n\t\tif (v)\n\t\t\treturn d.resolve(v);\n\n\t\tif (e)\n\t\t\treturn d.reject(e);\n\n\t\tvar unresolved = arr.reduce(function (cnt, v) {\n\t\t\tif (v && v.then)\n\t\t\t\treturn cnt + 1;\n\t\t\treturn cnt;\n\t\t}, 0);\n\n\t\tif(unresolved == 0)\n\t\t\td.resolve(arr);\n\n\t\tarr.map(function (v) {\n\t\t\tif (v && v.then)\n\t\t\t\tv.then(function (r) {\n\t\t\t\t\tdone(null, r);\n\t\t\t\t}, done);\n\t\t});\n\t}\n\n\tdone();\n\n\treturn d;\n};\n\nDeferred._d = 1;\n\n\n/**\n * @constructor\n */\nfunction Deferred(resolver) {\n\t\"use strict\";\n\tif (typeof resolver != \"function\" && resolver != undefined)\n\t\tthrow TypeError();\n\t\t\n\tif (typeof this != \"object\" || (this && this.then))\n\t\tthrow TypeError();\n\n\t// states\n\t// 0: pending\n\t// 1: resolving\n\t// 2: rejecting\n\t// 3: resolved\n\t// 4: rejected\n\tvar self = this,\n\t\tstate = 0,\n\t\tval = 0,\n\t\tnext = [],\n\t\tfn, er;\n\n\tself[\"promise\"] = self;\n\n\tself[\"resolve\"] = function (v) {\n\t\tfn = self.fn;\n\t\ter = self.er;\n\t\tif (!state) {\n\t\t\tval = v;\n\t\t\tstate = 1;\n\n\t\t\tnextTick(fire);\n\t\t}\n\t\treturn self;\n\t};\n\n\tself[\"reject\"] = function (v) {\n\t\tfn = self.fn;\n\t\ter = self.er;\n\t\tif (!state) {\n\t\t\tval = v;\n\t\t\tstate = 2;\n\n\t\t\tnextTick(fire);\n\n\t\t}\n\t\treturn self;\n\t};\n\n\tself[\"_d\"] = 1;\n\n\tself[\"then\"] = function (_fn, _er) {\n\t\tif (!(this._d == 1))\n\t\t\tthrow TypeError();\n\n\t\tvar d = new Deferred();\n\n\t\td.fn = _fn;\n\t\td.er = _er;\n\t\tif (state == 3) {\n\t\t\td.resolve(val);\n\t\t}\n\t\telse if (state == 4) {\n\t\t\td.reject(val);\n\t\t}\n\t\telse {\n\t\t\tnext.push(d);\n\t\t}\n\n\t\treturn d;\n\t};\n\n\tself[\"finally\"] = function(_handler){\n\t\tvar _value;\n\t\tconst handler = function(value){\n\t\t\t_value = value;\n\t\t\treturn _handler();\n\t\t};\n\t\t\n\t\tconst value = function(){\n\t\t\tconst d = new Deferred();\n\t\t\tif(state == 4)\n\t\t\t\treturn d.reject(_value);\n\t\t\telse\n\t\t\t\treturn d.resolve(_value);\n\t\t};\n\n\t\treturn self.then(handler, handler).then(value, value);\n\t};\n\n\tself[\"catch\"] = function (_er) {\n\t\treturn self[\"then\"](null, _er);\n\t};\n\n\t//compatibility with old version of promiz lib\n\tself[\"fail\"] = function (_er) {\n\t\treturn self[\"then\"](null, _er);\n\t};\n\n\tvar finish = function (type) {\n\t\tstate = type || 4;\n\t\tfor (var i=0; i<next.length; i++){\n\t\t\tvar p = next[i];\n\t\t\tstate == 3 && p.resolve(val) || p.reject(val);\n\t\t}\n\t};\n\n\ttry {\n\t\tif (typeof resolver == \"function\")\n\t\t\tresolver(self[\"resolve\"], self[\"reject\"]);\n\t} catch (e) {\n\t\tself[\"reject\"](e);\n\t}\n\n\treturn self;\n\n\t// ref : reference to 'then' function\n\t// cb, ec, cn : successCallback, failureCallback, notThennableCallback\n\tfunction thennable (ref, cb, ec, cn) {\n\t\t// Promises can be rejected with other promises, which should pass through\n\t\tif (state == 2) {\n\t\t\treturn cn();\n\t\t}\n\t\tif ((typeof val == \"object\" || typeof val == \"function\") && typeof ref == \"function\") {\n\t\t\ttry {\n\n\t\t\t\t// cnt protects against abuse calls from spec checker\n\t\t\t\tvar cnt = 0;\n\t\t\t\tref.call(val, function (v) {\n\t\t\t\t\tif (cnt++) return;\n\t\t\t\t\tval = v;\n\t\t\t\t\tcb();\n\t\t\t\t}, function (v) {\n\t\t\t\t\tif (cnt++) return;\n\t\t\t\t\tval = v;\n\t\t\t\t\tec();\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tval = e;\n\t\t\t\tec();\n\t\t\t}\n\t\t} else {\n\t\t\tcn();\n\t\t}\n\t}\n\n\tfunction fire() {\n\t\t// check if it's a thenable\n\t\tvar ref;\n\t\ttry {\n\t\t\tref = val && val.then;\n\t\t} catch (e) {\n\t\t\tval = e;\n\t\t\tstate = 2;\n\t\t\treturn fire();\n\t\t}\n\n\t\tthennable(ref, function () {\n\t\t\tstate = 1;\n\t\t\tfire();\n\t\t}, function () {\n\t\t\tstate = 2;\n\t\t\tfire();\n\t\t}, function () {\n\t\t\ttry {\n\t\t\t\tif (state == 1 && typeof fn == \"function\") {\n\t\t\t\t\tval = fn(val);\n\t\t\t\t}\n\n\t\t\t\telse if (state == 2 && typeof er == \"function\") {\n\t\t\t\t\tval = er(val);\n\t\t\t\t\tstate = 1;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tval = e;\n\t\t\t\treturn finish();\n\t\t\t}\n\n\t\t\tif (val == self) {\n\t\t\t\tval = TypeError();\n\t\t\t\tfinish();\n\t\t\t} else thennable(ref, function () {\n\t\t\t\tfinish(3);\n\t\t\t}, finish, function () {\n\t\t\t\tfinish(state == 1 && 3);\n\t\t\t});\n\n\t\t});\n\t}\n\n\n}\n\n// promise factory\nDeferred.defer = function () {\n\treturn new Deferred(null);\n};\n\nexport default Deferred;","import { assert } from \"../../webix/debug\";\n\nconst xml={\n\t_isValidXML:function(data){\n\t\tif (!data || !data.documentElement)\n\t\t\treturn null;\n\t\tif (data.getElementsByTagName(\"parsererror\").length)\n\t\t\treturn null;\n\t\treturn data;\n\t},\n\t//convert xml string to xml object if necessary\n\ttoObject:function(text, response){\n\t\tvar data = response ? (response.rawxml ? response.rawxml() : response) :null;\n\t\tif (this._isValidXML(data))\n\t\t\treturn data;\n\t\tif (typeof text == \"string\")\n\t\t\tdata = this.fromString(text.replace(/^[\\s]+/,\"\"));\n\t\telse\n\t\t\tdata = text;\n\n\t\tif (this._isValidXML(data))\n\t\t\treturn data;\n\t\treturn null;\n\t},\n\t//get array of records\n\tgetRecords:function(data){\n\t\treturn this.xpath(data,this.records);\n\t},\n\trecords:\"/*/item\",\n\tchild:\"item\",\n\tconfig:\"/*/config\",\n\t//get hash of properties for single record\n\tgetDetails:function(data){\n\t\treturn this.tagToObject(data,{});\n\t},\n\tgetOptions:function(){ \n\t\treturn false;\n\t},\n\t//get count of data and position at which new data_loading need to be inserted\n\tgetInfo:function(data){\n\t\t\n\t\tvar config = this.xpath(data, this.config);\n\t\tif (config.length)\n\t\t\tconfig = this.assignTypes(this.tagToObject(config[0],{}));\n\t\telse \n\t\t\tconfig = null;\n\n\t\treturn {\n\t\t\tsize:(data.documentElement.getAttribute(\"total_count\")||0),\n\t\t\tfrom:data.documentElement.getAttribute(\"pos\"),\n\t\t\tparent:(data.documentElement.getAttribute(\"parent\")||0),\n\t\t\tconfig:config\n\t\t};\n\t},\n\t//xpath helper\n\txpath:function(xml,path){\n\t\tif (window.XPathResult){\t//FF, KHTML, Opera\n\t\t\tvar node=xml;\n\t\t\tif(xml.nodeName.indexOf(\"document\")==-1)\n\t\t\t\txml=xml.ownerDocument;\n\n\t\t\tvar res = [];\n\t\t\tvar col = xml.evaluate(path, node, null, XPathResult.ANY_TYPE, null);\n\t\t\tvar temp = col.iterateNext();\n\t\t\twhile (temp){ \n\t\t\t\tres.push(temp);\n\t\t\t\ttemp = col.iterateNext();\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\t\telse {\n\t\t\tvar test = true;\n\t\t\ttry {\n\t\t\t\tif (typeof(xml.selectNodes)==\"undefined\")\n\t\t\t\t\ttest = false;\n\t\t\t} catch(e){ /*IE7 and below can't operate with xml object*/ }\n\t\t\t//IE\n\t\t\tif (test)\n\t\t\t\treturn xml.selectNodes(path);\n\t\t\telse {\n\t\t\t\t//there is no interface to do XPath\n\t\t\t\t//use naive approach\n\t\t\t\tvar name = path.split(\"/\").pop();\n\n\t\t\t\treturn xml.getElementsByTagName(name);\n\t\t\t}\n\t\t}\n\t},\n\tassignTypes:function(obj){\n\t\tfor (var k in obj){\n\t\t\tvar test = obj[k];\n\t\t\tif (typeof test == \"object\")\n\t\t\t\tthis.assignTypes(test);\n\t\t\telse if (typeof test == \"string\"){\n\t\t\t\tif (test === \"\") \n\t\t\t\t\tcontinue;\n\t\t\t\tif (test == \"true\")\n\t\t\t\t\tobj[k] = true;\n\t\t\t\telse if (test == \"false\")\n\t\t\t\t\tobj[k] = false;\n\t\t\t\telse if (test == test*1)\n\t\t\t\t\tobj[k] = obj[k]*1;\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t},\n\t//convert xml tag to js object, all subtags and attributes are mapped to the properties of result object\n\ttagToObject:function(tag,z){\n\t\tvar isArray = tag.nodeType == 1 && tag.getAttribute(\"stack\");\n\t\tvar hasSubTags = 0;\n\n\t\tif (!isArray){\n\t\t\tz=z||{};\n\t\t\t\n\n\t\t\t//map attributes\n\t\t\tlet a=tag.attributes;\n\t\t\tif(a && a.length)\n\t\t\t\tfor (let i=0; i<a.length; i++){\n\t\t\t\t\tz[a[i].name]=a[i].value;\n\t\t\t\t\thasSubTags = 1;\n\t\t\t\t}\n\n\t\t\t//map subtags\n\t\t\tlet b=tag.childNodes;\n\t\t\tfor (let i=0; i<b.length; i++)\n\t\t\t\tif (b[i].nodeType==1){\n\t\t\t\t\tconst name = b[i].tagName;\n\t\t\t\t\tif (z[name]){\n\t\t\t\t\t\tif (typeof z[name].push != \"function\")\n\t\t\t\t\t\t\tz[name] = [z[name]];\n\t\t\t\t\t\tz[name].push(this.tagToObject(b[i],{}));\n\t\t\t\t\t} else\n\t\t\t\t\t\tz[name]=this.tagToObject(b[i],{});\t//sub-object for complex subtags\n\t\t\t\t\thasSubTags = 2;\n\t\t\t\t}\n\n\t\t\tif (!hasSubTags)\n\t\t\t\treturn this.nodeValue(tag);\n\t\t\t//each object will have its text content as \"value\" property\n\t\t\t//only if has not sub tags\n\t\t\tif (hasSubTags < 2)\n\t\t\t\tz.value = z.value||this.nodeValue(tag);\n\n\t\t} else {\n\t\t\tz = [];\n\t\t\tlet b=tag.childNodes;\n\t\t\tfor (let i=0; i<b.length; i++)\n\t\t\t\tif (b[i].nodeType==1)\n\t\t\t\t\tz.push(this.tagToObject(b[i],{}));\n\t\t}\n\n\t\treturn z;\n\t},\n\t//get value of xml node \n\tnodeValue:function(node){\n\t\tif (node.firstChild){\n\t\t\treturn node.firstChild.wholeText || node.firstChild.data;\n\t\t}\n\t\treturn \"\";\n\t},\n\t//convert XML string to XML object\n\tfromString:function(xmlString){\n\t\ttry{\n\t\t\tif (window.DOMParser)\t\t// FF, KHTML, Opera\n\t\t\t\treturn (new DOMParser()).parseFromString(xmlString,\"text/xml\");\n\t\t\t/* global ActiveXObject */\n\t\t\tif (window.ActiveXObject){\t// IE, utf-8 only \n\t\t\t\tvar temp=new ActiveXObject(\"Microsoft.xmlDOM\");\n\t\t\t\ttemp.loadXML(xmlString);\n\t\t\t\treturn temp;\n\t\t\t}\n\t\t} catch(e){\n\t\t\tassert(0, e);\n\t\t\treturn null;\n\t\t}\n\t\tassert(0, \"Load from xml string is not supported\");\n\t}\n};\n\nexport default xml;","import { log, assert } from \"../webix/debug\";\nimport { isArray, extend } from \"../webix/helpers\";\nimport { stringify } from \"../webix/stringify\";\nimport { callEvent } from \"../webix/customevents\";\nimport promise from \"../thirdparty/promiz\";\n\nimport xml from \"./drivers/xml\";\nimport json from \"./drivers/json\";\n\nexport function ajax(url,params,call){\n\t//if parameters was provided - made fast call\n\tif (arguments.length!==0){\n\t\treturn (new ajax()).get(url,params,call);\n\t}\n\n\tif (!this || !this.getXHR) return new ajax(); //allow to create new instance without direct new declaration\n\n\treturn this;\n}\n\najax.count = 0;\najax.prototype={\n\tmaster:null,\n\t//creates xmlHTTP object\n\tgetXHR:function(){\n\t\treturn new XMLHttpRequest();\n\t},\n\tstringify:function(obj){\n\t\treturn stringify(obj);\n\t},\n\t/*\n\t\tsend data to the server\n\t\tparams - hash of properties which will be added to the url\n\t\tcall - callback, can be an object with success and error functions\n\t*/\n\t_send:function(url, params, call, mode){\n\t\tvar master;\n\t\t//webix.ajax(url, callback) - can be called only by user\n\t\tif (params && (isArray(params) || (typeof (params.success || params.error || params) == \"function\"))){\n\t\t\tmaster = call;\n\t\t\tcall = params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tvar defer = promise.defer();\n\t\tvar x=this.getXHR();\n\t\tvar headers = this._header || {};\n\n\t\tif (!callEvent(\"onBeforeAjax\", [mode, url, params, x, headers, null, defer])){\n\t\t\treturn defer.reject(x);\n\t\t}\n\n\t\t//add content-type to POST|PUT|DELETE\n\t\tvar json_mode = false;\n\t\tif (mode !== \"GET\"){\n\t\t\tvar found = false;\n\t\t\tfor (let key in headers)\n\t\t\t\tif (key.toString().toLowerCase() == \"content-type\"){\n\t\t\t\t\tfound = true;\n\t\t\t\t\tif (headers[key] == \"application/json\")\n\t\t\t\t\t\tjson_mode = true;\n\t\t\t\t}\n\t\t\tif (!found && !(window.FormData && (params instanceof window.FormData)))\n\t\t\t\theaders[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n\t\t}\n\n\t\t//add extra params to the url\n\t\tif (typeof params == \"object\" && !(window.FormData && (params instanceof window.FormData))){\n\t\t\tif (json_mode)\n\t\t\t\tparams = this.stringify(params);\n\t\t\telse {\n\t\t\t\tvar t=[];\n\t\t\t\tfor (var a in params){\n\t\t\t\t\tvar value = params[a];\n\t\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t\t\tvalue = \"\";\n\t\t\t\t\tif(typeof value===\"object\")\n\t\t\t\t\t\tvalue = this.stringify(value);\n\t\t\t\t\tt.push(encodeURIComponent(a)+\"=\"+encodeURIComponent(value)); // utf-8 escaping\n\t\t\t\t}\n\t\t\t\tparams=t.join(\"&\");\n\t\t\t}\n\t\t}\n\n\t\tif (params && mode===\"GET\"){\n\t\t\turl=url+(url.indexOf(\"?\")!=-1 ? \"&\" : \"?\")+params;\n\t\t\tparams = null;\n\t\t}\n\n\t\tx.open(mode, url, !this._sync);\n\n\t\tvar type = this._response;\n\t\tif (type) x.responseType = type;\n\n\t\t//if header was provided - use it\n\t\tfor (let key in headers)\n\t\t\tx.setRequestHeader(key, headers[key]);\n\t\t\n\t\t//async mode, define loading callback\n\t\tvar self=this;\n\t\tthis.master = this.master || master;\n\t\tx.onreadystatechange = function(){\n\t\t\tif (!x.readyState || x.readyState == 4){\n\t\t\t\tajax.count++;\n\n\t\t\t\tvar is_error = x.status >= 400 || x.status === 0;\n\t\t\t\tvar text, data;\n\t\t\t\tif (x.responseType == \"blob\" || x.responseType == \"arraybuffer\"){\n\t\t\t\t\ttext = \"\";\n\t\t\t\t\tdata = x.response;\n\t\t\t\t} else {\n\t\t\t\t\ttext = x.responseText||\"\";\n\t\t\t\t\tdata = self._data(x);\n\t\t\t\t}\n\t\t\t\tif (is_error){\n\t\t\t\t\tcallEvent(\"onAjaxError\", [x]);\n\t\t\t\t\tdefer.reject(x);\n\t\t\t\t\tif(call)\n\t\t\t\t\t\tajax.$callback((self.master || window), call, text, data, x, is_error);\n\t\t\t\t} else {\n\t\t\t\t\tdefer.resolve(data);\n\t\t\t\t\tif(call)\n\t\t\t\t\t\tajax.$callback((self.master || window), call, text, data, x, is_error);\n\t\t\t\t}\t\n\t\t\t}\n\t\t};\n\n\t\tif (this._timeout)\n\t\t\tx.timeout = this._timeout;\n\n\t\t//IE can use sync mode sometimes, fix it\n\t\tif (!this._sync)\n\t\t\tsetTimeout(function(){\n\t\t\t\tx.send(params||null);\n\t\t\t}, 0);\n\t\telse\n\t\t\tx.send(params||null);\n\t\t\n\t\tif (this.master && !this._sync){\n\t\t\tdefer.then(function(data){\n\t\t\t\t//anti-leak\n\t\t\t\tself.master=null;\n\t\t\t\tcall=self=master=null;\t\n\t\t\t\treturn data;\n\t\t\t});\n\t\t}\n\n\t\treturn this._sync?x:defer; //return XHR, which can be used in case of sync. mode\n\t},\n\t_data:function(x){\n\t\treturn {\n\t\t\txml:function(){ \n\t\t\t\ttry{\n\t\t\t\t\treturn xml.tagToObject(xml.toObject(x.responseText, this));\n\t\t\t\t}\n\t\t\t\tcatch(e){\n\t\t\t\t\tlog(x.responseText);\n\t\t\t\t\tlog(e.toString()); assert(0, \"Invalid xml data for parsing\"); \n\t\t\t\t}\n\t\t\t},\n\t\t\trawxml:function(){ \n\t\t\t\tif (!window.XPathResult)\n\t\t\t\t\treturn xml.fromString(x.responseText);\n\t\t\t\treturn x.responseXML;\n\t\t\t},\n\t\t\ttext:function(){ return x.responseText; },\n\t\t\tjson:function(){\n\t\t\t\treturn json.toObject(x.responseText, false);\n\t\t\t}\n\t\t};\n\t},\n\t//GET request\n\tget:function(url,params,call){\n\t\treturn this._send(url,params,call,\"GET\");\n\t},\n\t//POST request\n\tpost:function(url,params,call){\n\t\treturn this._send(url,params,call,\"POST\");\n\t},\n\t//PUT request\n\tput:function(url,params,call){\n\t\treturn this._send(url,params,call,\"PUT\");\n\t},\n\t//DELETE request\n\tdel:function(url,params,call){\n\t\treturn this._send(url,params,call,\"DELETE\");\n\t},\n\t//PATCH request\n\tpatch:function(url,params,call){\n\t\treturn this._send(url,params,call,\"PATCH\");\n\t},\n\n\tsync:function(){\n\t\tthis._sync = true;\n\t\treturn this;\n\t},\n\ttimeout:function(num){\n\t\tthis._timeout = num;\n\t\treturn this;\n\t},\n\tresponse:function(value){\n\t\tthis._response = value;\n\t\treturn this;\n\t},\n\theaders:function(header){\n\t\tthis._header = extend(this._header||{},header);\n\t\treturn this;\n\t},\n\tbind:function(master){\n\t\tthis.master = master;\n\t\treturn this;\n\t}\n};\najax.$callback = function(owner, call, text, data, x, is_error){\n\tif (owner.$destructed) return;\n\n\tif (is_error)\n\t\tcallEvent(\"onAjaxError\", [x]);\n\t\n\tif (call){\n\t\tvar method = call.success || call;\n\t\tif (is_error)\n\t\t\tmethod = call.error;\n\t\tif (method && method.call)\n\t\t\tmethod.call(owner,text,data,x);\n\t}\n};","import {delay, uid, toNode, extend, isUndefined} from \"./helpers.js\";\n\nlet _native_on_selectstart = 0;\nconst _style_element = {};\nconst _style_cache = {};\n\nexport function denySelect(){\n\tif (!_native_on_selectstart)\n\t\t_native_on_selectstart = document.onselectstart;\n\tdocument.onselectstart = stopEvent;\n}\n\nexport function allowSelect(){\n\tif (_native_on_selectstart !== 0){\n\t\tdocument.onselectstart = _native_on_selectstart||null;\n\t}\n\t_native_on_selectstart = 0;\n\n}\n\nexport function index(node){\n\tvar k=0;\n\t//must be =, it is not a comparation!\n\twhile ((node = node.previousSibling)) k++;\n\treturn k;\n}\n\nexport function createCss(rule, sufix){\n\tvar text = \"\";\n\tsufix = sufix || \"\";\n\n\tfor (var key in rule)\n\t\ttext+= key+\":\"+rule[key]+\";\";\n\n\tvar name = _style_cache[text+sufix];\n\tif (!name){\n\t\tname = \"s\"+uid();\n\t\taddStyle(\".\"+name+(sufix||\"\")+\"{\"+text+\"}\");\n\t\t_style_cache[text+sufix] = name;\n\t}\n\treturn name;\n}\n\nexport function addStyle(rule, group){\n\tvar style = group ? _style_element[group] :_style_element[\"default\"];\n\tif(!style){\n\t\tstyle = document.createElement(\"style\");\n\t\tstyle.setAttribute(\"type\", \"text/css\");\n\t\tstyle.setAttribute(\"media\", \"screen,print\");\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(style);\n\n\t\tif (group)\n\t\t\t_style_element[group] = style;\n\t\telse\n\t\t\t_style_element[\"default\"] = style;\n\t}\n\n\tstyle.appendChild(document.createTextNode(rule));\n}\n\nexport function removeStyle(group){\n\tvar box = _style_element[group||\"default\"];\n\tif (box)\n\t\tbox.innerHTML = \"\";\n}\n\nexport function create(name,attrs,html){\n\tattrs = attrs || {};\n\tvar node = document.createElement(name);\n\tfor (var attr_name in attrs)\n\t\tnode.setAttribute(attr_name, attrs[attr_name]);\n\tif (attrs.style)\n\t\tnode.style.cssText = attrs.style;\n\tif (attrs[\"class\"])\n\t\tnode.className = attrs[\"class\"];\n\tif (html)\n\t\tnode.innerHTML = html;\n\treturn node;\n}\n\n//return node value, different logic for different html elements\nexport function getValue(node){\n\tnode = toNode(node);\n\tif (!node) return \"\";\n\treturn isUndefined(node.value) ? node.innerHTML : node.value;\n}\n\n//remove html node, can process an array of nodes at once\nexport function remove(node){\n\tif (node instanceof Array)\n\t\tfor (var i=0; i < node.length; i++)\n\t\t\tremove(node[i]);\n\telse if (node && node.parentNode)\n\t\tnode.parentNode.removeChild(node);\n}\n\n//insert new node before sibling, or at the end if sibling doesn't exist\nexport function insertBefore(node,before,rescue){\n\tif (!node) return;\n\tif (before && before.parentNode)\n\t\tbefore.parentNode.insertBefore(node, before);\n\telse\n\t\trescue.appendChild(node);\n}\n\n//return custom ID from html element \n//will check all parents starting from event's target\nexport function locate(e,id){\n\tvar trg;\n\tif (e.tagName)\n\t\ttrg = e;\n\telse {\n\t\ttrg = e.target;\n\t}\n    \n\twhile (trg){\n\t\tif (trg.getAttribute){\t//text nodes has not getAttribute\n\t\t\tvar test = trg.getAttribute(id);\n\t\t\tif (test) return test;\n\t\t}\n\t\ttrg=trg.parentNode;\n\t}\t\n\treturn null;\n}\n\n//returns position of html element on the page\nexport function offset(elem) {\n\tconst box = elem.getBoundingClientRect();\n\tconst body = document.body;\n\tconst docElem = document.documentElement;\n\tconst scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n\tconst scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\tconst clientTop = docElem.clientTop || body.clientTop || 0;\n\tconst clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\tconst top  = box.top +  scrollTop -  clientTop;\n\tconst left = box.left + scrollLeft - clientLeft;\n\treturn { y:Math.round(top), x:Math.round(left), width:elem.offsetWidth, height:elem.offsetHeight };\n}\n\n//returns relative position of event\nexport function posRelative(ev){\n\treturn { x:ev.offsetX, y:ev.offsetY };\n}\n\n//returns position of event\nexport function pos(ev){\n\tif (!ev.type)\t// webix touch event\n\t\treturn {x:ev.x, y:ev.y};\n\n\tif (ev.touches && ev.touches[0])\n\t\tev = ev.touches[0];\n\n\treturn {x:ev.pageX, y:ev.pageY};\n}\n\n//prevent event action\nexport function preventEvent(e){\n\te.preventDefault();\n\treturn stopEvent(e);\n}\n\n//stop event bubbling\nexport function stopEvent(e){\n\te.stopPropagation();\n\treturn false;\n}\n\nexport function triggerEvent(node, type, name, details){\n\tlet event;\n\tif (typeof(window[type]) === \"function\") {\n\t\tdetails = extend(details||{}, { bubbles:true, cancelable:true });\n\t\tevent = new window[type](name, details);\n\t} else {\t\t//IE 11 support\n\t\tevent = document.createEvent(type);\n\t\tevent.initEvent(name, true, true);\n\t}\n\tnode.dispatchEvent(event);\n}\n\n//add css class to the node\nexport function addCss(node,name,check){\n\tif (!check || node.className.indexOf(name) === -1)\n\t\tnode.className += \" \"+name;\n}\n\n//remove css class from the node\nexport function removeCss(node,name){\n\tnode.className = node.className.replace(RegExp(\" \"+name,\"g\"),\"\");\n}\n\nexport function getTextSize(text, css, basewidth){\n\tconst d = create(\"DIV\",{\"class\":\"webix_view webix_measure_size \"+(css||\"\")},\"\");\n\td.style.cssText = \"height:auto;visibility:hidden; position:absolute; top:0px; left:0px; overflow:hidden;\"+(basewidth?(\"width:\"+basewidth+\"px;\"):\"width:auto;white-space:nowrap;\");\n\tdocument.body.appendChild(d);\n\n\tconst all = (typeof text !==  \"object\") ? [text] : text;\n\tlet width = 0, height = 0;\n\n\tfor (let i=0; i<all.length; i++) {\n\t\td.innerHTML = all[i];\n\n\t\tconst rect = d.getBoundingClientRect();\n\t\twidth = Math.max(width, Math.ceil(rect.width));\n\t\theight = Math.max(height, Math.ceil(rect.height));\n\t}\n\n\tremove(d);\n\treturn { width, height };\n}\n\nexport function download(data, filename){\n\tvar objUrl = false;\n\n\tif(typeof data == \"object\"){//blob\n\t\tif(window.navigator.msSaveBlob)\n\t\t\treturn window.navigator.msSaveBlob(data, filename);\n\t\telse {\n\t\t\tdata = window.URL.createObjectURL(data);\n\t\t\tobjUrl = true;\n\t\t}\n\t}\n\t//data url or blob url\n\tvar link = document.createElement(\"a\");\n\tlink.href = data;\n\tlink.download = filename;\n\tdocument.body.appendChild(link);\n\tlink.click(); \n\n\tdelay(function(){\n\t\tif(objUrl) window.URL.revokeObjectURL(data);\n\t\tdocument.body.removeChild(link);\n\t\tlink.remove();\n\t});\n}\n\nexport function _getClassName(node){\n\tif(!node) return \"\";\n\n\tvar className = node.className || \"\";\n\tif(className.baseVal)//'className' exist but not a string - IE svg element in DOM\n\t\tclassName = className.baseVal;\n\n\tif(!className.indexOf)\n\t\tclassName = \"\";\n\n\treturn className;\n}\n\nexport function setSelectionRange(node, start, end){\n\tnode.focus();\n\n\tif(node.setSelectionRange){\n\t\tstart = start || 0;\n\t\tend = end || start;\n\n\t\tnode.setSelectionRange(start, end);\n\t}\n}\n\nexport function getSelectionRange(node){\n\treturn {start:node.selectionStart || 0, end:node.selectionEnd || 0};\n}\n\nexport function addMeta(name, value){\n\tdocument.getElementsByTagName(\"head\").item(0).appendChild(create(\"meta\",{\n\t\tname:name,\n\t\tcontent:value\n\t}));\t\n}\n\n","const env = {};\n\nenv.cdn = \"//cdn.webix.com\";\nenv.codebase = \"\";\nenv.zIndexBase = 100;\nenv.scrollSize = 17;\nenv.strict = !!window.webix_strict;\nenv.https = document.location.protocol === \"https:\";\n\nconst agent = navigator.userAgentData;\nconst deprecatedAgent = agent && agent.platform && agent.brands.length ? null : navigator.userAgent;\n\nconst browsers = {\n\tChromium: \"Chrom\", //in userAgent - Chrome, in userAgentData.brands - Chromium\n\tIE: \"Trident\",\n\tEdge: \"Edg\", // in userAgent - Edg, in userAgentData.brands - Microsoft Edge\n\tFF: \"Firefox\",\n\tSafari: \"Safari\"\n};\n\nfor(let browser in browsers){\n\tconst checkBrowser = deprecatedAgent ?\n\t\tdeprecatedAgent.indexOf(browsers[browser]) != -1 :\n\t\tagent.brands.find(v => v.brand.indexOf(browsers[browser]) != -1);\n\n\tif(checkBrowser){\n\t\tenv[\"is\"+browser] = true;\n\t\t//Edge is a chromium-based browser (so we set isChromium:true and isEdge:true)\n\t\tif(browser != \"Chromium\")\n\t\t\tbreak;\n\t}\n}\n\nconst platform = deprecatedAgent || agent.platform;\nenv.isMac = platform.toLowerCase().indexOf(\"mac\") != -1;\nif (/iPad|iPhone|iPod/.test(platform)) env.isIOS = true;\nif (platform.indexOf(\"Android\") != -1) env.isAndroid = true;\n\nif(deprecatedAgent){\n\tif(env.isIOS || env.isAndroid || deprecatedAgent.indexOf(\"Mobile\") != -1 || deprecatedAgent.indexOf(\"Windows Phone\") != -1)\n\t\tenv.mobile = true;\n} else\n\tenv.mobile = agent.mobile;\n\nif (env.mobile || navigator.maxTouchPoints > 1)\n\tenv.touch = true;\n\nenv.fastClick = !env.touch;\n\n//maximum height/width for HTML elements in pixels (rough), bigger values will be ignored by browser\nif (env.isIE || env.isEdge || env.isFF)\n\tenv.maxHTMLElementSize = 10000000;\nif (env.isSafari)\n\tenv.maxHTMLElementSize = 100000000;\n\nenv.transform = \"transform\";\nenv.transition = \"transition\";\nenv.transitionDuration = \"transitionDuration\";\nenv.translate = \"translate3d\";\nenv.transitionEnd =  \"transitionend\";\n\n//touch events that can be prevented\nenv.passiveEventListeners = false;\ntry {\n\tconst opts = Object.defineProperty({}, \"passive\", {\n\t\tget: function() { // eslint-disable-line\n\t\t\tenv.passiveEventListeners = true;\n\t\t}\n\t});\n\twindow.addEventListener(\"testPassive\", null, opts);\n\twindow.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {} // eslint-disable-line\n\nenv.svg = (function(){\n\treturn document.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\", \"1.1\");\n})();\n\nenv.svganimation = (function(){\n\treturn document.implementation.hasFeature(\"https://www.w3.org/TR/SVG11/feature#SVG-animation\", \"1.1\");\n})();\n\nexport default env;","import {extend, bind, isDate, isUndefined} from \"../../webix/helpers\";\nimport env from \"../../webix/env\";\n\nimport Promise from \"../../thirdparty/promiz\";\nimport i18n from \"../../webix/i18n\";\n\nimport require from \"../require\";\nimport jsarray from \"./jsarray\";\n\n\nconst excel = extend({\n\ttoObject:function(data){\n\t\tif(!data.excel){\n\t\t\tvar opts = data.options || {};\n\t\t\tif (opts.dataurl) \n\t\t\t\textend(opts, this._urlToOptions(opts.dataurl));\n\n\t\t\tdata = data.data || data;\n\t\t\tvar promise = Promise.defer();\n\n\t\t\tif(data.name){ //file\n\t\t\t\topts.ext = data.name.split(\".\").pop();\n\t\t\t\tvar reader = new FileReader();\n\n\t\t\t\treader.onload = bind(function (e) {\n\t\t\t\t\tpromise.resolve(this.parseData(e.target.result, opts));\n\t\t\t\t}, this);\n\t\t\t\treader.readAsArrayBuffer(data);\n\t\t\t}\n\t\t\telse //arraybuffer\n\t\t\t\tpromise.resolve(this.parseData(data, opts));\n\n\t\t\treturn promise;\n\t\t}\n\t\t//plain jsarray or hash\n\t\treturn data;\n\t},\n\tparseData:function(data, options){\n\t\tdata = new Uint8Array(data);\n\t\tconst arr = [];\n\t\tfor(let i = 0; i != data.length; ++i)\n\t\t\tarr[i] = String.fromCharCode(data[i]);\n\n\t\tlet ext = (options.ext || options).toLowerCase();\n\t\tif (ext != \"xls\") ext = \"xlsx\";\n\t\treturn require(env.cdn + \"/extras/xlsx.core.styles.min.js\").then(bind(function(){\n\t\t\t/* global XLS, XLSX */\n\t\t\tconst wb = (ext == \"xls\" ? XLS : XLSX).read(arr.join(\"\"), {\n\t\t\t\ttype: \"binary\",\n\t\t\t\tcellStyles: true,\n\t\t\t\tcellDates: isUndefined(options.cellDates) ? true : options.cellDates,\n\t\t\t\tsheetStubs: options.sheetStubs\n\t\t\t});\n\n\t\t\tconst res = {\n\t\t\t\tsheets: wb.Sheets,\n\t\t\t\tnames: wb.SheetNames,\n\t\t\t\toptions:options,\n\t\t\t\tranges:wb.Workbook?(wb.Workbook.Names ||[]):[],\n\t\t\t\tstates: wb.Workbook.Sheets.map(s => [\"visible\", \"hidden\", \"veryHidden\"][s.Hidden])\n\t\t\t};\n\t\t\treturn extend(this.getSheet(res, options), res);\n\t\t}, this));\n\t},\n\tgetSheet:function(data, options){\n\t\tvar name = options.name || data.names[0];\n\t\tdata = this.sheetToArray(data.sheets[name], options);\n\t\tif(options.rows && options.rows.length)\n\t\t\tdata.data = data.data.splice(options.rows[0], Math.min(options.rows[1], data.data.length)-options.rows[0]);\n\t\treturn data;\n\t},\n\tsheetToArray:function(sheet, options){\n\t\tconst all = [];\n\t\tconst spans = [];\n\t\tconst styles = [];\n\t\tconst sizes = [];\n\t\tconst types = [];\n\t\tconst hidden = [];\n\n\t\tconst cellTypes = { n:\"number\", d:\"date\", s:\"string\", b:\"boolean\"};\n\n\t\tif(sheet && sheet[\"!ref\"]){\n\t\t\tvar range = XLS.utils.decode_range(sheet[\"!ref\"]), \n\t\t\t\trow, col, cellCoord, cell,\n\t\t\t\txCorrection = range.s.c,\n\t\t\t\tyCorrection = range.s.r+(options.rows?options.rows[0]:0);\n\n\t\t\tfor (row = range.s.r; row <= range.e.r; row++) {\n\t\t\t\tvar nrow = [];\n\t\t\t\tfor (col = range.s.c; col <= range.e.c; col++) {\n\t\t\t\t\tcellCoord = XLS.utils.encode_cell({ r: row, c: col });\n\t\t\t\t\tcell = sheet[cellCoord];\n\t\t\t\t\tif(!cell)\n\t\t\t\t\t\tnrow.push(\"\");\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar ncell = \"\";\n\t\t\t\t\t\tif(options.math&&cell.f) // get formula\n\t\t\t\t\t\t\tncell = cell.f.charAt(0)==\"=\" ? cell.f : \"=\"+cell.f;\n\t\t\t\t\t\telse if (cell.t ==\"d\" && isDate(cell.v))\n\t\t\t\t\t\t\tncell  = i18n.dateFormatStr(cell.v);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tncell = cell.v;\n\t\t\t\t\t\tnrow.push(ncell);\n\n\t\t\t\t\t\tif (cell.s)\n\t\t\t\t\t\t\tstyles.push([row-yCorrection, col-xCorrection, cell.s]);\n\t\t\t\t\t\tif (cell.t)\n\t\t\t\t\t\t\ttypes.push([row-yCorrection, col-xCorrection, cellTypes[cell.t]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tall.push(nrow);\n\t\t\t}\n\n\t\t\tif(sheet[\"!merges\"]){\n\t\t\t\tvar merges = sheet[\"!merges\"];\n\t\t\t\tfor(let i = 0; i<merges.length; i++){\n\t\t\t\t\tvar s = merges[i].s;\n\t\t\t\t\tvar e = merges[i].e;\n\t\t\t\t\tif(!options.rows || (s.r-yCorrection>=0 && e.r-yCorrection<=options.rows[1]))\n\t\t\t\t\t\tspans.push([s.r-yCorrection, s.c-xCorrection, e.c-s.c+1, e.r-s.r+1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!cols\"]){\n\t\t\t\tvar widths = sheet[\"!cols\"];\n\t\t\t\tfor(let i = 0; i<widths.length; i++){\n\t\t\t\t\tconst item = widths[i];\n\t\t\t\t\tif(item){\n\t\t\t\t\t\tconst index = i-xCorrection;\n\t\t\t\t\t\tsizes.push([\"column\", index, Math.round(item.wch/(8.43/70))]); //mode, colind, value\n\t\t\t\t\t\tif(item.hidden)\n\t\t\t\t\t\t\thidden.push([\"column\", index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(sheet[\"!rows\"]){\n\t\t\t\tvar heights = sheet[\"!rows\"];\n\t\t\t\tfor(let i = 0; i<heights.length; i++){\n\t\t\t\t\tconst item = heights[i];\n\t\t\t\t\tif(item){\n\t\t\t\t\t\tconst index = i-yCorrection;\n\t\t\t\t\t\tsizes.push([\"row\", index, item.hpx]); //mode (\"row\", \"column\"), rowind, value\n\t\t\t\t\t\tif(item.hidden)\n\t\t\t\t\t\t\thidden.push([\"row\", index]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { data:all, spans, styles, sizes, types, hidden, excel: true };\n\t},\n\t_urlToOptions:function(details){\n\t\tvar parts = details.split(\"[\");\n\t\tvar options = {};\n\t\toptions.name = parts[0];\n\t\tif(parts[1]){\n\t\t\tvar rows = parts[1].split(/[^0-9]+/g);\n\t\t\trows[0] = rows[0]*1 || 0;\n\t\t\trows[1] = rows[1]*1 || 9999999;\n\t\t\toptions.rows = rows;\n\t\t}\n\t\treturn options;\n\t}\n}, jsarray);\n\nexport default excel;","/*\n\tTemplate - handles html templates\n*/\n\nimport {uid} from \"./helpers\";\nimport {getValue} from \"./html\";\nimport env from \"./env\";\nimport {ajax} from \"../load/ajax\";\nimport {assert} from \"./debug\";\n\nimport CodeParser from \"../core/codeparser\";\n\nvar _cache = {};\nvar _csp_cache = {};\nvar newlines = new RegExp(\"(\\\\r\\\\n|\\\\n)\",\"g\");\nvar quotes   = new RegExp(\"(\\\\\\\")\",\"g\");\nvar slashes  = new RegExp(\"(\\\\\\\\)\",\"g\");\nvar escape = {\n\t\"&\": \"&amp;\",\n\t\"<\": \"&lt;\",\n\t\">\": \"&gt;\",\n\t\"\\\"\": \"&quot;\",\n\t\"'\": \"&#x27;\",\n\t\"`\": \"&#x60;\"\n};\nvar badChars = /[&<>\"'`]/g;\nvar escapeChar = function(chr) {\n\treturn escape[chr] || \"&amp;\";\n};\n\n\nfunction template(str){\n\tif (typeof str == \"function\") return str;\n\tif (_cache[str])\n\t\treturn _cache[str];\n\t\t\n\tstr=(str||\"\").toString();\t\t\t\n\tif (str.indexOf(\"->\")!=-1){\n\t\tvar teststr = str.split(\"->\");\n\t\tswitch(teststr[0]){\n\t\t\tcase \"html\": \t//load from some container on the page\n\t\t\t\tstr = getValue(teststr[1]);\n\t\t\t\tbreak;\n\t\t\tcase \"http\": \t//load from external file\n\t\t\t\tstr = new ajax().sync().get(teststr[1],{uid:uid()}).responseText;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t//do nothing, will use template as is\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\t\n\t//supported idioms\n\t// {obj.attr} => named attribute or value of sub-tag in case of xml\n\tstr=(str||\"\").toString();\t\t\n\n\t// Content Security Policy enabled\n\tif(env.strict){\n\t\tif (!_csp_cache[str]){\n\t\t\t_csp_cache[str] = [];\n\n\t\t\t// get an array of objects (not sorted by position)\n\t\t\tvar temp_res = [];\n\t\t\tstr.replace(/\\{obj\\.([^}?]+)\\?([^:]*):([^}]*)\\}/g,function(search,s1,s2,s3,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\treturn obj[s1]?s2:s3;\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(/\\{common\\.([^}(]*)\\}/g,function(search,s,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(_,common){\n\t\t\t\t\treturn common[s]||\"\";\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(/\\{common\\.([^}(]*)\\(\\)\\}/g,function(search,s,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj,common){\n\t\t\t\t\treturn (common[s]?common[s].apply(this, arguments):\"\");\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(/\\{obj\\.([^:}]*)\\}/g,function(search,s,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\treturn obj[s];\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(\"{obj}\",function(search,pos){\n\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\treturn obj;\n\t\t\t\t}});\n\t\t\t});\n\t\t\tstr.replace(/#([^#'\";, ]+)#/gi,function(search,s,pos){\n\t\t\t\tif(s.charAt(0)==\"!\"){\n\t\t\t\t\ts = s.substr(1);\n\t\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\t\tif(s.indexOf(\".\")!= -1)\n\t\t\t\t\t\t\tobj = CodeParser.collapseNames(obj); // apply complex properties\n\t\t\t\t\t\treturn template.escape(obj[s]);\n\t\t\t\t\t}});\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\ttemp_res.push({pos: pos, str: search, fn: function(obj){\n\t\t\t\t\t\tif(s.indexOf(\".\")!= -1)\n\t\t\t\t\t\t\tobj = CodeParser.collapseNames(obj); // apply complex properties\n\t\t\t\t\t\treturn obj[s];\n\t\t\t\t\t}});\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// sort template parts by position\n\t\t\ttemp_res.sort(function(a,b){\n\t\t\t\treturn (a.pos > b.pos)?1:-1;\n\t\t\t});\n\n\t\t\t// create an array of functions that return parts of html string\n\t\t\tif(temp_res.length){\n\t\t\t\tvar lastPos = 0;\n\t\t\t\tvar addStr = function(str,n0,n1){\n\t\t\t\t\t_csp_cache[str].push(function(){\n\t\t\t\t\t\treturn str.slice(n0,n1);\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tfor(var i = 0; i< temp_res.length; i++){\n\t\t\t\t\tvar pos = temp_res[i].pos;\n\t\t\t\t\taddStr(str,lastPos,pos);\n\t\t\t\t\t_csp_cache[str].push(temp_res[i].fn);\n\t\t\t\t\tlastPos = pos + temp_res[i].str.length;\n\t\t\t\t}\n\t\t\t\taddStr(str,lastPos,str.length);\n\t\t\t}\n\t\t\telse\n\t\t\t\t_csp_cache[str].push(function(){return str;});\n\t\t}\n\t\treturn function(){\n\t\t\tvar s = \"\";\n\t\t\tfor(var i=0; i < _csp_cache[str].length;i++){\n\t\t\t\ts += _csp_cache[str][i].apply(this,arguments);\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\t}\n\n\tlet helpers = false;\n\tstr=str.replace(slashes,\"\\\\\\\\\");\n\tstr=str.replace(newlines,\"\\\\n\");\n\tstr=str.replace(quotes,\"\\\\\\\"\");\n\n\tstr=str.replace(/\\{obj\\.([^}?]+)\\?([^:]*):([^}]*)\\}/g,\"\\\"+(obj.$1?\\\"$2\\\":\\\"$3\\\")+\\\"\");\n\tstr=str.replace(/\\{common\\.([^}(]*)\\}/g,\"\\\"+(common.$1||'')+\\\"\");\n\tstr=str.replace(/\\{common\\.([^}(]*)\\(\\)\\}/g,\"\\\"+(common.$1?common.$1.apply(this, arguments):\\\"\\\")+\\\"\");\n\tstr=str.replace(/\\{obj\\.([^}]*)\\}/g,\"\\\"+(obj.$1)+\\\"\");\n\tstr=str.replace(\"{obj}\",\"\\\"+obj+\\\"\");\n\tstr=str.replace(/#([^#'\";, ]+)#/gi,function(str, key){\n\t\tif (key.charAt(0)==\"!\"){\n\t\t\thelpers = true;\n\t\t\treturn \"\\\"+template.escape(obj.\"+key.substr(1)+\")+\\\"\";\n\t\t} else\n\t\t\treturn \"\\\"+(obj.\"+key+\")+\\\"\";\n\t});\n\n\ttry {\n\t\tif (helpers){\n\t\t\tconst temp = Function(\"obj\",\"common\",\"marks\", \"value\", \"template\", \"return \\\"\"+str+\"\\\";\");\n\t\t\t_cache[str] = function(a,b,c,d){ \n\t\t\t\treturn temp(a,b,c,d,template);\n\t\t\t};\n\t\t} else {\n\t\t\t_cache[str] = Function(\"obj\",\"common\",\"return \\\"\"+str+\"\\\";\");\n\t\t}\n\t} catch(e){\n\t\tassert(0, \"Invalid template:\"+str);\n\t}\n\n\treturn _cache[str];\n}\n\n\n\ntemplate.escape  = function(str){\n\tif (str === undefined || str === null) return \"\";\n\treturn (str.toString() || \"\" ).replace(badChars, escapeChar);\n};\ntemplate.empty=function(){\treturn \"\";\t};\n\nexport default template;","import { assert } from \"./debug\";\nimport { toNode, uid, bind, isUndefined } from \"./helpers\";\nimport env from \"./env\";\n\n//hash of attached events\nconst _events = {};\n\nexport function _events_final_destructor(){\n\t//detach all known DOM events\n\tfor (var a in _events)\n\t\teventRemove(a);\n}\n\n//private version of API, do not register ID for event detaching\nexport function _event(a,b,c,d){\n\td = d || {};\n\td.inner = true;\n\tevent(a,b,c,d);\n}\n\n//attach event to the DOM element\nexport function event(node,event,handler,context){\n\tcontext = context || {};\n\tnode = toNode(node);\n\tassert(node, \"Invalid node as target for webix.event\");\n\t\n\tvar id = context.id || uid();\n\n\tif (context.bind)\n\t\thandler = bind(handler,context.bind);\n\n\tvar info = [node,event,handler,context.capture];\n\tif (!context.inner)\n\t\t_events[id] = info;\t//store event info, for detaching\n\n\tvar capture = !!context.capture;\n\tif (!isUndefined(context.passive) && env.passiveEventListeners)//blockable touch events\n\t\tcapture = { passive:context.passive, capture:capture };\n\t\t\n\tnode.addEventListener(event, handler, capture);\n\n\treturn id;\t//return id of newly created event, can be used in eventRemove\n}\n\n//remove previously attached event\nexport function eventRemove(id){\n\tif (!id) return;\n\tassert(_events[id],\"Removing non-existing event\");\n\n\tconst ev = _events[id];\n\tev[0].removeEventListener(ev[1], ev[2], !!ev[3]);\n\n\tdelete _events[id];\t//delete all traces\n}\n","import {assert} from \"../webix/debug\";\n\nimport {uid, isArray, toNode, isUndefined, toFunctor} from \"../webix/helpers\";\nimport {attachEvent} from \"../webix/customevents\";\nimport {locate} from \"../webix/html\";\nimport {use} from \"../services\";\n\nimport type from \"../webix/type\";\nimport state from \"../core/state\";\n\n//global click events for UI\nimport \"./click\";\n\nconst views = {};\n\nfunction ui(config, parent, id){\n\tvar res;\n\tstate._ui_creation++;\n\t// save old value of global scope\n\tconst temp_scope = state._global_scope;\n\t// save old value of global collection\n\tconst temp_collection = state._global_collection;\n\t// set global scope to the scope of new UI or to previous value\n\t// as result inner webix.ui calls will have access the scope of master view\n\t// mainly necessary for suggests\n\tstate._global_scope = config.$scope || temp_scope;\n\ttry {\n\t\tres = _ui_creator(config, parent, id);\n\t} finally {\n\t\tstate._ui_creation--;\n\t\t// restore global scope\n\t\tstate._global_scope = temp_scope;\n\t\t// restore global collection\n\t\t// if an error occurred while creating the isolated layout\n\t\tstate._global_collection = temp_collection;\n\t}\n\treturn res;\n}\nui.views = views;\n\n\nfunction _ui_creator(config, parent, id){\n\tvar multiset = isArray(config);\n\tvar node = toNode((config.container||parent)||document.body);\n\n\t// solve problem with non-unique ids\n\tif(node._settings)\n\t\tid = _correctId(node, multiset, id);\n\n\tvar top_node;\n\tvar moving = false;\n\tvar body_child = (node == document.body);\n\tif (config._settings || (node && multiset)){\n\t\ttop_node = config;\n\t\tmoving = true;\n\t} else {\n\t\tif (node && body_child)\n\t\t\tconfig.$topView = true;\n\t\tif (!config._inner)\n\t\t\tconfig._inner = {};\n\n\t\tif (parent && parent.getParentView){\n\t\t\tstate._parent_cell = (!id && id!==0) ? parent.getParentView() : parent;\n\t\t}\n\n\t\ttop_node = _view(config);\n\t}\n\n\tif (body_child && !top_node.setPosition && !top_node.$apiOnly)\n\t\tuse(\"fixHeight\")();\n\n\tif (top_node._settings && top_node._settings._hidden && !node.$view){\n\t\ttop_node._settings._container = node;\n\t} else if (!top_node.$apiOnly){\n\t\tif (node.appendChild)\n\t\t\t_appendDom(node, top_node, config);\n\t\telse if (node.destructor){\n\t\t\tvar target = node;\n\n\t\t\t//addView or view moving with target id\n\t\t\tif (!id && id!==0 && !isArray(top_node)){\n\t\t\t\tid = node;\n\t\t\t\tnode = node.getParentView();\n\t\t\t}\n\n\t\t\t//if target supports view adding\n\t\t\tif (node && node._replace){\n\t\t\t\tif (moving && top_node.getParentView){\n\t\t\t\t\t//if source supports view removing\n\t\t\t\t\tlet parent = top_node.getParentView();\n\t\t\t\t\tif (parent  && parent._remove){\n\t\t\t\t\t\tparent._remove(top_node);\n\t\t\t\t\t}\n\t\t\t\t\t//adjust parent link and scope\n\t\t\t\t\ttop_node._parent_cell = node;\n\t\t\t\t\ttop_node.$scope = node.$scope;\n\t\t\t\t}\n\n\t\t\t\tnode._replace(top_node, id);\n\t\t\t} else {\n\t\t\t\tlet parent = target.$view.parentNode;\n\t\t\t\ttarget.destructor();\n\t\t\t\t_appendDom(parent, top_node, config);\n\t\t\t}\n\t\t} else\n\t\t\tassert(0, \"Not existing parent:\"+config.container);\n\t}\n\n\treturn top_node;\n}\n\nfunction _appendDom(node, top_node, config){\n\tnode.appendChild(top_node._viewobj);\n\tif (top_node.getParentView()) return;\n\n\t//resize window with position center or top\n\t//do not resize other windows and elements\n\t// which are attached to custom html containers\n\tif (((!top_node.setPosition || top_node._settings.fullscreen) && node == document.body) || top_node._settings.position )\n\t\tstate.top_views.push(top_node._destructor_handler);\n\tif (!config.skipResize)\n\t\ttop_node.adjust();\n}\n\nfunction _correctId(target, multiset, id){\n\t//replace view\n\tvar views = [target];\n\t//replace content of layout\n\tif (multiset)\n\t\tviews = target.getChildViews();\n\t//replace content of window\n\telse if (target._body_cell)\n\t\tviews = [target._body_cell];\n\t//add cell in layout by number\n\telse if (typeof id == \"number\"){\n\t\treturn id;\n\t//replace cell in layout by id\n\t} else if (id){\n\t\tviews = [$$(id)];\n\t\t_deleteIds(views);\n\t\treturn views[0].config.id;\n\t}\n\n\t_deleteIds(views);\n\treturn id;\n}\n\nfunction _deleteIds(uis){\n\tfor (var i = uis.length - 1; i >= 0; i--){\n\t\tlet current = uis[i];\n\t\t//remove original id\n\t\tdelete views[current.config.id];\n\t\t//create temp id\n\t\tcurrent.config.id = \"x\"+uid();\n\t\tviews[current.config.id] = current;\n\t\t//process childs\n\t\tif (current.getChildViews)\n\t\t\t_deleteIds(current.getChildViews());\n\t\t//process related UI\n\t\tif (current._destroy_with_me)\n\t\t\t_deleteIds(current._destroy_with_me);\n\t}\n}\n\n\nfunction _view(config){\n\n\tif (DEBUG){\n\t\t// check for trailing comma\n\t\tvar coll = config.cells || config.rows || config.elements || config.cols;\n\t\tif (coll)\n\t\t\tfor (let i=0; i<coll.length; i++)\n\t\t\t\tif (coll[i] === null || typeof coll[i] === \"undefined\")\n\t\t\t\t\tassert(0, \"You have trailing comma or Null element in collection's configuration\");\n\t}\n\n\tif (config.view){\n\t\tvar view = config.view;\n\t\tassert(ui[view], \"unknown view:\"+view);\n\t\treturn new ui[view](config);\n\t} else if (config.rows || config.cols){\n\t\tvar cells = config.rows||config.cols;\n\t\tvar accordion = false;\n\t\tfor (let i=0; i<cells.length; i++){\n\t\t\tif (cells[i].body && !cells[i].view && !cells[i].align)\n\t\t\t\taccordion = true;\n\t\t}\n\t\tif (accordion){\n\t\t\treturn new ui.headerlayout(config);\n\t\t} else\n\t\t\treturn new ui.layout(config);\n\t}\n\telse if (config.cells)\n\t\treturn new ui.multiview(config);\n\telse if (config.template || config.content)\n\t\treturn new ui.template(config);\t\n\telse if (config.align && config.body){\n\t\treturn new ui.align(config);\n\t} else return new ui.spacer(config);\n}\n//FIXME\nui._view = _view;\n\nfunction $$(id){\n\tif (!id) return null;\n\t\n\tif (views[id]) return views[id];\n\n\tvar name = id;\n\tif (typeof id == \"object\"){\n\t\tif (id._settings)\n\t\t\treturn id;\n\t\tname = id.target||id;\n\t}\n\treturn views[locate({ target:toNode(name)},/*@attr*/\"view_id\")];\n}\nif (typeof window.$$ === \"undefined\") window.$$ = $$;\n\t\n\t\n\nlet protoUI = function(){\n\tvar origins = arguments;\n\tvar selfname = origins[0].name;\n\t\n\tvar t = function(data){\n\t\tif (!t)\n\t\t\treturn ui[selfname].prototype;\n\n\t\tvar origins = t.$protoWait;\n\t\tif (origins){\n\t\t\tvar params = [origins[0]];\n\t\t\t\n\t\t\tfor (let i=1; i < origins.length; i++){\n\t\t\t\tparams[i] = origins[i];\n\n\t\t\t\tif (params[i].$protoWait)\n\t\t\t\t\tparams[i] = params[i].call(-1, params[i].name);\n\n\t\t\t\tif (params[i].prototype && params[i].prototype.name)\n\t\t\t\t\tui[params[i].prototype.name] = params[i];\n\t\t\t}\n\t\t\tui[selfname] = proto.apply(-1, params);\n\n\t\t\tif (t._webix_type_wait)\t\n\t\t\t\tfor (let i=0; i < t._webix_type_wait.length; i++)\n\t\t\t\t\ttype(ui[selfname], t._webix_type_wait[i]);\n\t\t\t\t\n\t\t\tt = origins = null;\t\n\t\t}\n\t\t\t\n\t\tif (this != -1)\n\t\t\treturn new ui[selfname](data);\n\t\telse \n\t\t\treturn ui[selfname];\n\t};\n\tt.$protoWait = Array.prototype.slice.call(arguments, 0);\n\treturn (ui[selfname]=t);\n};\n\nlet proto = function(){\n\tvar origins = arguments;\n\tvar compilation = origins[0];\n\tvar has_constructor = !!compilation.$init;\n\tvar construct = [];\n\t\n\tassert(compilation,\"Invalid mixing target\");\n\t\t\n\tfor (var i=origins.length-1; i>0; i--) {\n\t\tassert(origins[i],\"Invalid mixing source\");\n\t\tif (typeof origins[i]== \"function\")\n\t\t\torigins[i]=origins[i].prototype;\n\t\tif (origins[i].$init) \n\t\t\tconstruct.push(origins[i].$init);\n\t\tif (origins[i].defaults){ \n\t\t\tvar defaults = origins[i].defaults;\n\t\t\tif (!compilation.defaults)\n\t\t\t\tcompilation.defaults = {};\n\t\t\tfor (let def in defaults)\n\t\t\t\tif (isUndefined(compilation.defaults[def]))\n\t\t\t\t\tcompilation.defaults[def] = defaults[def];\n\t\t}\n\t\tif (origins[i].type && compilation.type){\n\t\t\tfor (let def in origins[i].type)\n\t\t\t\tif (!compilation.type[def])\n\t\t\t\t\tcompilation.type[def] = origins[i].type[def];\n\t\t}\n\t\t\t\n\t\tfor (var key in origins[i]){\n\t\t\tif (!compilation[key] && compilation[key] !== false)\n\t\t\t\tcompilation[key] = origins[i][key];\n\t\t}\n\t}\n\t\n\tif (has_constructor)\n\t\tconstruct.push(compilation.$init);\n\t\n\t\n\tcompilation.$init = function(){\n\t\tfor (var i=0; i<construct.length; i++)\n\t\t\tconstruct[i].apply(this, arguments);\n\t};\n\tif (compilation.$skin)\n\t\tcompilation.$skin();\n\n\tvar result = function(config){\n\t\tthis.$ready=[];\n\t\tassert(this.$init,\"object without init method\");\n\t\tthis.$init(config);\n\t\tif (this._parseSettings)\n\t\t\tthis._parseSettings(config, this.defaults);\n\t\tfor (var i=0; i < this.$ready.length; i++)\n\t\t\tthis.$ready[i].call(this);\n\t};\n\tresult.prototype = compilation;\n\t\n\tcompilation = origins = null;\n\treturn result;\n};\n\nattachEvent(\"onClick\", function(e){\n\tvar element = $$(e);\n\tif (element && element.touchable){\n\t\tuse(\"UIManager\").applyChanges(element);\n\n\t\t//for inline elements - restore pointer to the master element\n\t\telement.getNode(e);\n\t\t//reaction on custom css elements in buttons\n\t\tvar trg=e.target;\n\t\tif (element.config.disabled)\n\t\t\treturn;\n\n\t\tvar css = \"\";\n\t\tif (trg.className && trg.className.toString().indexOf(\"webix_view\")===0) return;\n\n\t\tif (element)\n\t\t\tuse(\"UIManager\")._focus_action(element);\n\n\t\t//loop through all parents\n\t\twhile (trg && trg.parentNode){\n\t\t\tif (trg.getAttribute){\n\t\t\t\tif (trg.getAttribute(/*@attr*/\"view_id\"))\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcss=trg.className;\n\t\t\t\tif (css){\n\t\t\t\t\tcss = css.toString().split(\" \");\n\t\t\t\t\tfor (var i =0; i<css.length; i++){\n\t\t\t\t\t\tif (element.on_click[css[i]]){\n\t\t\t\t\t\t\tvar res =  element.on_click[css[i]].call(element,e,element._settings.id,trg);\n\t\t\t\t\t\t\tif (res===false)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttrg=trg.parentNode;\n\t\t}\n\n\n\t\tif (element._settings.click){\n\t\t\tvar code = toFunctor(element._settings.click, element.$scope);\n\t\t\tif (code && code.call) code.call(element, element._settings.id, e);\n\t\t}\n\n\t\tlet popup = element._settings.popup;\n\t\tif (popup && !element._settings.readonly && !e.longtouch_drag){\n\t\t\tif (typeof popup == \"object\" && !popup.name){\n\t\t\t\tpopup = element._settings.popup = ui(popup)._settings.id;\n\t\t\t\telement._destroy_with_me.push($$(popup));\n\t\t\t}\n\n\t\t\tpopup = $$(popup);\n\t\t\tassert(popup, \"Unknown popup\");\n\n\t\t\tif (!popup.isVisible()){\n\t\t\t\tpopup._settings.master = element._settings.id;\n\t\t\t\tpopup.show((element.getInputNode()||element.getNode()),null,true);\n\t\t\t}\n\t\t}\n\n\t\telement.callEvent(\"onItemClick\", [element._settings.id, e]);\n\t}\n});\n\n\n//hook for documentation generator\nif (DEBUG){\n\tif (window.webix_on_core_ready){\n\t\tvar mod = window.webix_on_core_ready({ proto, protoUI});\n\t\tproto = mod.proto;\n\t\tprotoUI = mod.protoUI;\n\t}\n}\n\nexport { ui, proto, protoUI, $$ };","import i18n from \"../webix/i18n\";\nimport rules from \"../webix/rules\";\nimport template from \"../webix/template\";\n\nimport {toNode, isUndefined} from \"../webix/helpers\";\nimport { event } from \"../webix/htmlevents\";\nimport {define} from \"../services\";\nimport Promise from \"../thirdparty/promiz\";\nimport {_uid} from \"../ui/helpers\";\nimport {create, addCss, removeCss, preventEvent} from \"../webix/html\";\n\nfunction callback(config, result){\n\t// prompt\n\tif (config.type.indexOf(\"prompt\") != -1){\n\t\tif (result === false){\n\t\t\tconfig._promise.reject();\n\t\t} else {\n\t\t\tconst inputBox = config._box.querySelector(\".webix_popup_input\");\n\t\t\tconst input = inputBox.querySelector(\"input\");\n\t\t\tif (config.input.required && !input.value){\n\t\t\t\tconfig.input.invalid = true;\n\t\t\t\taddCss(inputBox, \"webix_popup_invalid\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tresult = input.value || \"\";\n\t\t\t\tconfig._promise.resolve(result);\n\t\t\t}\n\t\t}\t\n\t}\n\n\t(config.type.indexOf(\"confirm\") != -1 && result === false) ? config._promise.reject() : config._promise.resolve(result);\n\n\tconst usercall = config.callback;\n\tif (usercall)\n\t\tusercall(result, config.details);\n\n\tmodalbox.hide(config.id);\n}\nfunction modal_key(e){\n\tconst order = modalbox.order;\n\tconst count = order.length;\n\tconst source = e.target;\n\n\tif (count > 0 && message.keyboard){\n\t\tconst code = e.which || e.keyCode;\n\t\tif(code != 13 && code != 32 && code != 27)\n\t\t\treturn;\n\n\t\tlet activeBox;\n\n\t\tfor(let i = count - 1; i >= 0; i--){\n\t\t\tconst box = modalbox.pull[ order[i] ];\n\n\t\t\tif(box._box != source && box._box.contains(source) && code == 32) // ignore space inside input\n\t\t\t\treturn;\n\n\t\t\tif(box.container && box.container.contains(source)){\n\t\t\t\tactiveBox = box;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(!activeBox)\n\t\t\tactiveBox = modalbox.pull[ order[order.length-1] ];\n\n\t\tif (code == 13 || code == 32)\n\t\t\tcallback(activeBox, true);\n\t\telse if (code == 27)\n\t\t\tcallback(activeBox, false);\n\n\t\tpreventEvent(e);\n\t\treturn !(e.cancelBubble = true);\n\t}\n}\n\nevent(document, \"keydown\", modal_key, { capture: true });\n\t\nfunction modality(mode, container){\n\tvar node = container || document.body;\n\tvar cover;\n\tif(isUndefined(node.modality)){\n\t\tcover = create(\"DIV\", {\n\t\t\t\"class\":\"webix_modal_cover\",\n\t\t\tstyle:\"position:\"+(container ? \"absolute\" : \"fixed\")+\";\"\n\t\t});\n\t\tcover.onkeydown = modal_key;\n\n\t\tif(container){\n\t\t\tvar position = window.getComputedStyle(container).position;\n\t\t\tif(position != \"fixed\" && position != \"absolute\" && position != \"sticky\" && position != \"relative\")\n\t\t\t\tnode.style.position = \"relative\";\n\t\t}\n\t\tnode.appendChild(cover);\n\t\tnode.modality = 1;\n\t}\n\telse\n\t\tmode ? node.modality ++ : node.modality --;\n\n\t//trigger visibility only if necessary\n\tif((mode && node.modality === 1) || node.modality === 0){\n\t\tcover = cover || Array.prototype.slice.call(node.querySelectorAll(\".webix_modal_cover\")).filter(el => el.parentNode == node)[0];\n\n\t\tif(cover){\n\t\t\tif(!node.modality){\n\t\t\t\tcover.style.display = \"none\";\n\t\t\t\tremoveCss(node, \"webix_modalbox_inside\");\n\t\t\t}\n\t\t\telse if(node.modality == 1){\n\t\t\t\tcover.style.display = \"inline-block\";\n\t\t\t\taddCss(node, \"webix_modalbox_inside\");\n\t\t\t}\n\t\t}\n\t}\n\treturn cover;\n}\n\nfunction button(text, result, className){\n\treturn \"<div role='button' tabindex='0' aria-label='\"+text+\"' class='webix_popup_button\"+(className?(\" \"+className):\"\")+\"' result='\"+result+\"' ><div>\"+text+\"</div></div>\";\n}\n\nfunction input(config){\n\treturn \"<div tabindex='0' class='webix_popup_input webix_el_text\"+(config.required?\" webix_required\":\"\")+\"'><input value='\"+template.escape(config.value || \"\")+\"' placeholder='\"+template.escape(config.placeholder || \"\")+\"'></input></div>\";\n}\n\nfunction info(text){\n\tif (!t.area){\n\t\tt.area = document.createElement(\"DIV\");\n\t\tt.area.className = \"webix_message_area\";\n\t\tt.area.style[t.position]=\"5px\";\n\t\t\n\t\tdocument.body.appendChild(t.area);\n\t}\n\tt.area.setAttribute(\"role\", \"alert\");\n\tt.area.setAttribute(\"aria-atomic\", true);\n\tt.hide(text.id);\n\tvar message = document.createElement(\"DIV\");\n\tmessage.innerHTML = \"<div>\"+text.text+\"</div>\";\n\tmessage.className = \"webix_message webix_\" + text.type;\n\tmessage.onclick = function(){\n\t\tif (text) t.hide(text.id);\n\t\ttext = null;\n\t};\n\n\tif (t.position == \"bottom\" && t.area.firstChild)\n\t\tt.area.insertBefore(message,t.area.firstChild);\n\telse\n\t\tt.area.appendChild(message);\n\t\n\tif (text.expire > 0)\n\t\tt.timers[text.id]=window.setTimeout(function(){\n\t\t\tt.hide(text.id);\n\t\t}, text.expire);\n\n\t//styling for animation\n\tmessage.style.height = message.offsetHeight-2+\"px\";\n\n\tt.pull[text.id] = message;\n\tmessage = null;\n\n\treturn text.id;\n}\nfunction _boxStructure(config, ok, cancel, hasInput){\n\tvar box = document.createElement(\"DIV\");\n\tvar css = config.css ? \" \"+config.css : \"\";\n\tbox.className = \"webix_modal_box webix_\"+config.type+css;\n\tbox.setAttribute(\"webixbox\", 1);\n\tbox.setAttribute(\"role\", \"alertdialog\");\n\tbox.setAttribute(\"aria-label\", config.title || \"\");\n\tbox.setAttribute(\"tabindex\", \"0\");\n\n\tvar inner = \"\";\n\tif (config.width)\n\t\tbox.style.width = config.width+(rules.isNumber(config.width)?\"px\":\"\");\n\tif (config.height)\n\t\tbox.style.height = config.height+(rules.isNumber(config.height)?\"px\":\"\");\n\tif (config.title)\n\t\tinner += \"<div class=\\\"webix_popup_title\\\">\"+config.title+\"</div>\";\n\tinner += \"<div class=\\\"webix_popup_text\"+(hasInput?\" webix_popup_label\":\"\")+\"\\\"><span>\"+(config.content?\"\":(config.text || \"\"))+\"</span></div>\";\n\tinner += \"<div  class=\\\"webix_popup_controls\\\">\";\n\tif (hasInput)\n\t\tinner += input(config.input);\n\tif (cancel)\n\t\tinner += button(config.cancel || i18n.message.cancel, false);\n\tif (ok)\n\t\tinner += button(config.ok || i18n.message.ok, true,\"confirm\");\n\tif (config.buttons && !ok && !cancel){\n\t\tfor (var i=0; i<config.buttons.length; i++)\n\t\t\tinner += button(config.buttons[i],i);\n\t}\n\tinner += \"</div>\";\n\tbox.innerHTML = inner;\n\n\tif (config.content){\n\t\tvar node = config.content;\n\t\tif (typeof node == \"string\") \n\t\t\tnode = document.getElementById(node);\n\t\tif (node.style.display == \"none\")\n\t\t\tnode.style.display = \"\";\n\t\tbox.childNodes[config.title?1:0].appendChild(node);\n\t}\n\n\tif (config.type.indexOf(\"prompt\") != -1){\n\t\tconst inputBox = box.querySelector(\".webix_popup_input\");\n\t\tconst input = inputBox.querySelector(\"input\");\n\t\tinput.oninput = function(){\n\t\t\tif (config.input.invalid){\n\t\t\t\tremoveCss(inputBox, \"webix_popup_invalid\");\n\t\t\t\tconfig.input.invalid = false;\n\t\t\t}\n\t\t};\n\t}\n\n\tbox.onclick = function(e){\n\t\tvar source = e.target;\n\t\tif (!source.className) source = source.parentNode;\n\t\tif (source.className.indexOf(\"webix_popup_button\")!=-1){\n\t\t\tlet result = source.getAttribute(\"result\");\n\t\t\tresult = (result == \"true\")||(result == \"false\"?false:result);\n\t\t\tcallback(config, result);\n\t\t}\n\t\te.cancelBubble = true;\n\t};\n\tconfig._box = box;\n\treturn box;\n}\n\nmodalbox.pull = {};\nmodalbox.order = [];\n\nfunction _createBox(config, ok, cancel, hasInput){\n\tconst box = config.tagName ? config : _boxStructure(config, ok, cancel, hasInput);\n\tconst container = config.container;\n\n\tconst containerWidth = container ? container.offsetWidth : (window.innerWidth||document.documentElement.offsetWidth);\n\tconst containerHeight = container ? container.offsetHeight : (window.innerHeight||document.documentElement.offsetHeight);\n\tconst containerLeft = container ? container.scrollLeft : 0;\n\tconst containerTop = container ? container.scrollTop : 0;\n\n\tif(config.container)\n\t\tbox.style.position = \"absolute\";\n\n\ttoNode((config.container || document.body).appendChild(box));\n\tconst cover = modality(true, config.container);\n\n\tconst x = config.left||Math.abs(containerLeft+Math.floor((containerWidth - box.offsetWidth)/2));\n\tconst y = config.top||Math.abs(containerTop+Math.floor((containerHeight - box.offsetHeight)/2));\n\tif (config.position == \"top\")\n\t\tbox.style.top = \"-3px\";\n\telse{\n\t\tbox.style.top = y+\"px\";\n\t\tif(cover){\n\t\t\tcover.style.top = containerTop+\"px\";\n\t\t\tcover.style.left = containerLeft+\"px\";\n\t\t}\n\t}\n\tbox.style.left = x+\"px\";\n\t//necessary for IE only\n\tbox.onkeydown = modal_key;\n\n\tif(hasInput)\n\t\tbox.querySelector(\".webix_popup_input input\").focus();\n\telse\n\t\tbox.focus();\n\n\tif (!config.id)\n\t\tconfig.id = _uid(\"modalbox\");\n\telse if(modalbox.pull[config.id]){\n\t\tmodalbox.hide(config.id);\n\t}\n\n\tmodalbox.order.push(config.id);\n\tmodalbox.pull[config.id] = config;\n\n\tconfig._promise = Promise.defer();\n\treturn config._promise;\n}\n\nfunction alertPopup(config){\n\treturn _createBox(config, true);\n}\nfunction confirmPopup(config){\n\treturn _createBox(config, true, true);\n}\nfunction boxPopup(config){\n\treturn _createBox(config);\n}\nfunction promptPopup(config){\n\treturn _createBox(config, true, true, true);\n}\nfunction box_params(text, type, callback){\n\tif (typeof text != \"object\"){\n\t\tif (typeof type == \"function\"){\n\t\t\tcallback = type;\n\t\t\ttype = \"\";\n\t\t}\n\t\ttext = {text:text, type:type, callback:callback };\n\t}\n\treturn text;\n}\nfunction params(text, type, expire, id){\n\tif (typeof text != \"object\")\n\t\ttext = {text:text, type:type, expire:expire, id:id};\n\ttext.id = text.id||_uid(\"message\");\n\ttext.expire = text.expire||t.expire;\n\treturn text;\n}\nexport function alert(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"alert\";\n\treturn alertPopup(text);\n}\nexport function confirm(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"confirm\";\n\treturn confirmPopup(text);\n}\n\nexport function modalbox(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"alert\";\n\treturn boxPopup(text);\n}\n\nexport function prompt(){\n\tvar text = box_params.apply(this, arguments);\n\ttext.type = text.type || \"prompt\";\n\ttext.input = text.input || {};\n\treturn promptPopup(text);\n}\n\nmodalbox.hide = function(id){\n\tif(id && modalbox.pull[id]){\n\t\tvar node = modalbox.pull[id]._box;\n\t\tif(node){\n\t\t\tnode.parentNode.removeChild(node);\n\t\t\tmodalbox.order.splice(modalbox.order.indexOf(id), 1);\n\t\t\tmodality(false, modalbox.pull[id].container);\n\t\t\tdelete modalbox.pull[id];\n\t\t}\n\t}\n};\n\nmodalbox.hideAll = function(){\n\tfor (var id in modalbox.pull){\n\t\tthis.hide(id);\n\t}\n};\n\nexport function message(text, type, expire, id){ //eslint-disable-line\n\ttext = params.apply(this, arguments);\n\ttext.type = text.type||\"info\";\n\n\tvar subtype = text.type.split(\"-\")[0];\n\tswitch (subtype){\n\t\tcase \"alert\":\n\t\t\treturn alertPopup(text);\n\t\tcase \"confirm\":\n\t\t\treturn confirmPopup(text);\n\t\tcase \"modalbox\":\n\t\t\treturn boxPopup(text);\n\t\tcase \"prompt\":\n\t\t\treturn promptPopup(text);\n\t\tdefault:\n\t\t\treturn info(text);\n\t}\n}\n\nvar t = message;\nt.expire = 4000;\nt.keyboard = true;\nt.position = \"top\";\nt.pull = {};\nt.timers = {};\n\nt.hideAll = function(){\n\tfor (var key in t.pull)\n\t\tt.hide(key);\n};\nt.hide = function(id){\n\tvar obj = t.pull[id];\n\tif (obj && obj.parentNode){\n\t\twindow.setTimeout(function(){\n\t\t\tobj.parentNode.removeChild(obj);\n\t\t\tobj = null;\n\t\t},2000);\n\t\t//styling for animation\n\t\tobj.style.height = 0;\n\t\tobj.className+=\" hidden\";\n\t\tt.area.removeAttribute(\"role\");\n\t\t\n\t\tif(t.timers[id])\n\t\t\twindow.clearTimeout(t.timers[id]);\n\t\tdelete t.pull[id];\n\t}\n};\n\n//override circualr dependencies\ndefine(\"message\", message);\nexport default modalbox;","import ready from \"../webix/ready\";\n\nimport {assert} from \"../webix/debug\";\nimport {event} from \"../webix/htmlevents\";\nimport {delay,uid,_power_array,isUndefined,isArray} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\nimport {locate,preventEvent} from \"../webix/html\";\nimport {modalbox} from \"../webix/message\";\nimport fullscreen from \"../webix/fullscreen\";\n\nimport {$$} from \"../ui/core\";\nimport state from \"../core/state\";\n\nimport {define} from \"../services\";\n\n\nconst UIManager = {\n\t_view: null,\n\t_hotkeys: {},\n\t_focus_time:0,\n\t_controls: {\n\t\t\"esc\": \"escape\",\n\t\t\"up\": \"arrowup\",\n\t\t\"down\": \"arrowdown\",\n\t\t\"left\": \"arrowleft\",\n\t\t\"right\": \"arrowright\",\n\t\t\"pgdown\": \"pagedown\",\n\t\t\"pgup\": \"pageup\",\n\t\t\"space\": \" \",\n\t\t\"multiply\": \"*\",\n\t\t\"add\": \"+\",\n\t\t\"subtract\": \"-\",\n\t\t\"decimal\": \".\",\n\t\t\"divide\": \"/\",\n\t\t\"pausebreak\":\"pause\",\n\t\t\"5numlocked\":\"clear\"\n\t},\n\t_inputs:{\n\t\t\"input\": 1,\n\t\t\"button\":1,\n\t\t\"textarea\":1,\n\t\t\"select\":1\n\t},\n\t_enable: function() {\n\t\t// attaching events here\n\t\tevent(document, \"keydown\", this._keypress, { bind:this });\n\t\tevent(document, \"compositionstart\", ()=> this._startComposition());\n\t\tevent(document, \"compositionend\", ()=> this._endComposition());\n\t\tevent(document.body, \"click\", this._focus_click, { capture:true, bind:this });\n\t\tevent(document.body, \"focus\", this._focus_tab, { capture:true, bind:this });\n\n\t\tstate.destructors.push({obj:this});\n\t},\n\t_startComposition: function(){\n\t\tclearTimeout(this._composition);\n\t\tthis._composition = true;\n\t},\n\t_endComposition: function(){\n\t\t//in some browsers compositionEnd fires before the keyDown event\n\t\tthis._composition = delay(() => delete this._composition);\n\t},\n\tdestructor: function(){\n\t\tUIManager._view = null;\n\t},\n\tgetFocus: function() {\n\t\treturn this._view;\n\t},\n\t_focus_action:function(view){\n\t\tthis._focus_was_there = this._focus_was_there || view._settings.id;\n\t},\n\tsetFocus: function(view, only_api, tab){\n\t\t//view can be empty\n\t\tview = $$(view);\n\t\t//unfocus if view is hidden\n\t\tif (view && !view.$view) view = null;\n\n\t\t//store last click time, it is necessary to prevent refocusing\n\t\t//for example when user moves focus from onclick handler somewher\n\t\t//and we want to prevent autofocusing, when event will reach document.body\n\t\tthis._focus_time = state._focus_time = new Date();\n\n\t\tif (this._view === view) return true;\n\t\tif (this._view && this._view.callEvent)\n\t\t\tthis._view.callEvent(\"onBlur\", [this._view]);\n\n\t\tif (view && view.callEvent){\n\t\t\tview.callEvent(\"onFocus\", [view, this._view]);\n\t\t\tif(tab) view.callEvent(\"onTabFocus\", [view, this._view]);\n\t\t}\n\t\tcallEvent(\"onFocusChange\", [view, this._view]);\n\n\t\tif (this._view && this._view.blur && !only_api) this._view.blur();\n\t\tthis._view = view;\n\t\tif (view && view.focus && !only_api) view.focus();\n\t\treturn true;\n\t},\n\tapplyChanges: function(element){\n\t\tvar view = this.getFocus();\n\t\tif (view && view != element && view._applyChanges)\n\t\t\tview._applyChanges(element);\n\t},\n\thasFocus: function(view) {\n\t\treturn (view === this._view) ? true : false;\n\t},\n\t_focus: function(e){\n\t\tfor(let i = 0; i < modalbox.order.length; i++){\n\t\t\tif(modalbox.pull[ modalbox.order[i] ]._box.contains(e.target))\n\t\t\t\treturn;\n\t\t}\n\n\t\tvar view = locate(e, /*@attr*/\"view_id\") || this._focus_was_there;\n\n\t\t//if html was repainted we can miss the view, so checking last processed one\n\t\tview = $$(view);\n\t\tthis._focus_was_there = null;\n\n\t\t//set timer, to fix issue with Android input focusin\n\t\tstate._focus_time = new Date();\n\n\t\tif (view == this._view) return true;\n\n\t\tif (view){\n\t\t\tif (this.canFocus(view)){\n\t\t\t\t// keep form focus\n\t\t\t\tif (this._view && this._view.getFormView() == view && this._view.focus)\n\t\t\t\t\tthis._view.focus();\n\t\t\t\telse{\n\t\t\t\t\t//radio view with scroll: focus changes onClick event target into radiogroup, so we need call onClick before it happens\n\t\t\t\t\tif(e.target.type == \"radio\" || e.target.getAttribute(\"role\") == \"radio\")\n\t\t\t\t\t\tcallEvent(\"onClick\", [e]);\n\n\t\t\t\t\tthis.setFocus(view);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//remove focus from an unreachable view\n\t\t\telse if (view.$view.contains(e.target))\n\t\t\t\te.target.blur();\n\t\t}\n\t\telse this.setFocus(null);\n\n\t\treturn true;\n\t},\n\t_focus_click:function(e){\n\t\t// if it was onfocus/onclick less then 100ms behore then we ignore it\n\t\tif ((new Date())-this._focus_time < 100) {\n\t\t\tthis._focus_was_there = null;\n\t\t\treturn false;\n\t\t}\n\t\treturn this._focus(e);\n\t},\n\t_focus_tab: function(e){\n\t\tif(!this._inputs[e.target.nodeName.toLowerCase()])\n\t\t\treturn false;\n\t\treturn this._focus(e);\n\t},\n\t_top_modal: function(view){\n\t\tconst modality = state._modality;\n\t\tif (!modality.length) return true;\n\n\t\tconst top = this._getTop(view);\n\t\treturn (top.$view.style.zIndex||0) >= Math.max(...modality);\n\t},\n\t_getTop: function(view){\n\t\tlet top = view.queryView(view => !view.getParentView(), \"parent\") || view;\n\n\t\tconst insideContainer = $$(top.$view.parentNode); //container inside view (like filter in query view list)\n\t\tif(insideContainer)\n\t\t\ttop = this._getTop(insideContainer);\n\n\t\treturn top;\n\t},\n\tcanFocus:function(view){\n\t\tif(document.body.modality || view.$view.modality || view.queryView(view => view.$view.modality, \"parent\")) //modalbox\n\t\t\treturn false;\n\t\treturn view.isVisible() && view.isEnabled() && !view.config.disabled && this._top_modal(view) && !view.queryView({disabled:true}, \"parent\");\n\t},\n\n\t_moveChildFocus: function(check_view){\n\t\tvar focus = this.getFocus();\n\t\t//we have not focus inside of closing item\n\t\tif (check_view && !this._is_child_of(check_view, focus))\n\t\t\treturn false;\n\n\t\tif (!this._focus_logic(\"getPrev\", check_view))\n\t\t\tthis._view = null;\n\t},\n\t_is_child_of: function(parent, child) {\n\t\tif (!parent) return false;\n\t\tif (!child) return false;\n\t\twhile (child) {\n\t\t\tif (child === parent) return true;\n\t\t\tchild = child.getParentView();\n\t\t}\n\t\treturn false;\n\t},\n\t_keypress_timed:function(){\n\t\tif (this && this.callEvent)\n\t\t\tthis.callEvent(\"onTimedKeyPress\",[]);\n\t},\n\t_keypress: function(e) {\n\t\tlet code = e.which || e.keyCode;\n\n\t\t// processing or not found\n\t\tif (code == 229 || code == 0) return;\n\n\t\t// numpad keys\n\t\tif (code > 95 && code < 106) code -= 48;\n\n\t\tconst view = this.getFocus();\n\t\tif (view && view.callEvent) {\n\t\t\tif (view.callEvent(\"onKeyPress\", [code, e]) === false)\n\t\t\t\tpreventEvent(e);\n\t\t\tif (view.hasEvent(\"onTimedKeyPress\")){\n\t\t\t\tclearTimeout(view._key_press_timeout);\n\t\t\t\tview._key_press_timeout = delay(this._keypress_timed, view, [], (view._settings.keyPressTimeout||250));\n\t\t\t}\n\t\t}\n\n\t\tif (this._check_keycode(e) === false) {\n\t\t\tpreventEvent(e);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t// dir - getNext or getPrev\n\t_focus_logic: function(dir, focus) {\n\t\tvar next = focus||this.getFocus();\n\t\tif(next){\n\t\t\tdir = dir || \"getNext\";\n\t\t\tvar start = next;\n\t\t\tvar marker = uid();\n\n\t\t\twhile (true) { // eslint-disable-line\n\t\t\t\tnext = this[dir](next);\n\t\t\t\t// view with focus ability\n\t\t\t\tif (next && this.canFocus(next))\n\t\t\t\t\treturn this.setFocus(next);\n\n\t\t\t\t// elements with focus ability not found\n\t\t\t\tif (next === start || next.$fmarker == marker){\n\t\t\t\t\tif(focus)\n\t\t\t\t\t\tdocument.activeElement.blur();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t//prevents infinity loop\n\t\t\t\tnext.$fmarker = marker;\n\t\t\t}\n\t\t}\n\t},\n\t_tab_logic:function(view, e){\n\t\tvar mode = !e.shiftKey;\n\t\tif (view && view._custom_tab_handler && !view._custom_tab_handler(mode, e))\n\t\t\treturn false;\n\n\t\tif (view && view._in_edit_mode){\n\t\t\tif (view.editNext)\n\t\t\t\treturn view.editNext(mode);\n\t\t\telse if (view.editStop){\n\t\t\t\tview.editStop();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else\n\t\t\tdelay(function(){\n\t\t\t\tview = $$(document.activeElement);\n\t\t\t\tif(view && !UIManager.canFocus(view))\n\t\t\t\t\treturn UIManager._focus_logic(mode ? \"getNext\" : \"getPrev\", view);\n\t\t\t\tUIManager.setFocus(view, true, true);\n\t\t\t});\n\t},\n\tgetTop: function(id) {\n\t\tvar next, view = $$(id);\n\n\t\twhile (view && (next = view.getParentView()))\n\t\t\tview = next;\n\t\treturn view;\n\t},\n\n\tgetNext: function(view, _inner_call) {\n\t\tvar cells = view.getChildViews();\n\t\t//tab to first children\n\t\tif (cells.length && !_inner_call)\n\t\t\tfor (var i = 0; i < cells.length; i++)\n\t\t\t\tif(this.canFocus(cells[i]))\n\t\t\t\t\treturn cells[i];\n\n\t\t//unique case - single view without child and parent\n\t\tvar parent = view.getParentView();\n\t\tif (!parent)\n\t\t\treturn view;\n\n\t\tvar p_cells = parent.getChildViews();\n\t\tif (p_cells.length){\n\t\t\tvar index = _power_array.find.call(p_cells, view)+1;\n\t\t\twhile (index < p_cells.length) {\n\t\t\t\t//next visible child\n\t\t\t\tif (this.canFocus(p_cells[index])) \n\t\t\t\t\treturn p_cells[index];\n\n\t\t\t\tindex++;\n\t\t\t}\n\t\t} \n\n\t\t//sibling of parent\n\t\treturn this.getNext(parent, true);\n\t},\n\n\tgetPrev: function(view, _inner_call) {\n\t\tvar cells = view.getChildViews();\n\t\t//last child of last child\n\t\tif (cells.length && _inner_call)\n\t\t\tfor (var i = cells.length - 1; i >= 0; i--)\n\t\t\t\tif(this.canFocus(cells[i]))\n\t\t\t\t\treturn this.getPrev(cells[i], true);\n\n\t\tif (_inner_call && this.canFocus(view)) return view;\n\n\t\t//fallback from top to bottom\n\t\tvar parent = view.getParentView();\n\t\tif (!parent)\n\t\t\treturn this.canFocus(view) ? this.getPrev(view, true) : view;\n\n\t\tvar p_cells = parent.getChildViews();\n\t\tif (p_cells) {\n\t\t\tvar index = _power_array.find.call(p_cells, view)-1;\n\t\t\twhile (index >= 0) {\n\t\t\t\tif (this.canFocus(p_cells[index]))\n\t\t\t\t\treturn this.getPrev(p_cells[index], true);\n\t\t\t\tindex--;\n\t\t\t}\n\t\t}\n\n\t\treturn this.getPrev(parent, true);\n\t},\n\taddHotKey: function(keys, handler, view) {\n\t\tassert(handler, \"Hot key handler is not defined\");\n\t\tconst code = this._parse_keys(keys);\n\n\t\tif (!view) view = null;\n\t\tif (!this._hotkeys[code]) this._hotkeys[code] = [];\n\t\tthis._hotkeys[code].push({ handler, view });\n\n\t\treturn keys;\n\t},\n\tremoveHotKey: function(keys, func, view){\n\t\tconst code = this._parse_keys(keys);\n\t\tif (!func && !view)\n\t\t\tdelete this._hotkeys[code];\n\t\telse {\n\t\t\tvar t = this._hotkeys[code];\n\t\t\tif (t){\n\t\t\t\tfor (var i = t.length - 1; i >= 0; i--) {\n\t\t\t\t\tif (view && t[i].view !== view) continue;\n\t\t\t\t\tif (func && t[i].handler !== func) continue;\n\t\t\t\t\tt.splice(i,1);\n\t\t\t\t}\n\t\t\t\tif (!t.length)\n\t\t\t\t\tdelete this._hotkeys[code];\n\t\t\t}\n\n\t\t}\n\t},\n\t_keycode: function(key, ctrl, shift, alt, meta) {\n\t\t//key can be undefined (browser autofill)\n\t\treturn (key||\"\").toLowerCase()+\"_\"+[\"\", (ctrl ? \"1\" : \"0\"), (shift ? \"1\" : \"0\"), (alt ? \"1\" : \"0\"), (meta ? \"1\" : \"0\")].join(\"\");\n\t},\n\t_check_keycode: function(e){\n\t\tconst keyCode = e.which || e.keyCode;\n\t\tconst is_any = !e.ctrlKey && !e.altKey && !e.metaKey && (keyCode!=9)&&(keyCode!=27)&&(keyCode!=13);\n\t\tconst code = this._keycode(e.key, e.ctrlKey, e.shiftKey, e.altKey, e.metaKey);\n\n\t\tvar focus = this.getFocus();\n\t\tif (this._hotkeys[code])\n\t\t\treturn  this._process_calls(this._hotkeys[code], focus, e);\n\t\telse if (is_any && this._hotkeys[\"any_0000\"])\n\t\t\treturn  this._process_calls(this._hotkeys[\"any_0000\"], focus, e);\n\n\t\treturn true;\n\t},\n\t_process_calls:function(calls, focus, e){\n\t\tfor (var i = 0; i < calls.length; i++) {\n\t\t\tvar key = calls[i];\n\t\t\tif ((key.view !== null) &&\t\t//common hot-key\n\t\t\t\t(focus !== key.view) &&\t\t//hot-key for current view\n\t\t\t\t//hotkey for current type of view\n\t\t\t\t(typeof(key.view) !== \"string\" || !focus || focus.name !== key.view)) continue;\n\n\t\t\tvar temp_result = key.handler(focus, e);\n\t\t\tif (!!temp_result === temp_result) return temp_result;\n\t\t}\n\t\treturn true;\n\t},\n\t_parse_keys: function(keys) {\n\t\tvar controls = this._controls;\n\t\tvar parts = keys.toLowerCase().split(/[ +\\-_]/);\n\t\tvar ctrl, shift, alt, meta;\n\t\tctrl = shift = alt = meta = 0;\n\t\tvar letter = \"\";\n\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\tif (parts[i] === \"ctrl\") ctrl = 1;\n\t\t\telse if (parts[i] === \"shift\") shift = 1;\n\t\t\telse if (parts[i] === \"alt\") alt = 1;\n\t\t\telse if (parts[i] === \"command\") meta = 1;\n\t\t\telse {\n\t\t\t\tletter = controls[parts[i]] || parts[i];\n\t\t\t}\n\t\t}\n\n\t\treturn this._keycode(letter, ctrl, shift, alt, meta);\n\t},\n\tgetState:function(node, children) {\n\t\tchildren = (children||false);\n\t\tnode = $$(node);\n\t\tvar state = {\n\t\t\tid: node.config.id,\n\t\t\twidth: node.config.width,\n\t\t\theight: node.config.height,\n\t\t\tgravity: node.config.gravity\n\t\t};\n\t\tif (!isUndefined(node.config.collapsed)) state.collapsed = node.config.collapsed;\n\t\tif (node.name === \"tabs\" || node.name === \"tabbar\") state.activeCell = node.getValue();\n\t\t\n\t\tif (children) {\n\t\t\tstate = [state];\n\t\t\tif (node._cells) {\n\t\t\t\tfor (var i = 0; i < node._cells.length; i++)\n\t\t\t\t\tstate = state.concat(this.getState(node._cells[i], children));\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t},\n\tsetState:function(states) {\n\t\tif (!isArray(states)) states = [states];\n\t\n\t\tfor (var i = 0; i < states.length; i++) {\n\t\t\tvar state = states[i];\n\t\t\tvar node = $$(state.id);\n\t\t\tif (!node) continue;\n\t\n\t\t\tif (!isUndefined(state.collapsed)) node.define(\"collapsed\", state.collapsed);\n\t\t\tif (!isUndefined(state.activeCell)) node.setValue(state.activeCell, \"auto\");\n\t\n\t\t\tnode.define(\"width\", state.width);\n\t\t\tnode.define(\"height\", state.height);\n\t\t\tnode.define(\"gravity\", state.gravity);\n\t\t}\n\t\tvar top = $$(states[0].id);\n\t\tif (top) top.resize();\n\t}\n};\n\nready(function() {\n\tUIManager._enable();\n\n\tUIManager.addHotKey(\"enter\", function(view, ev){\n\t\tif (UIManager._composition)\n\t\t\treturn false;\n\t\tif (view && view.callEvent)\n\t\t\tview.callEvent(\"onEnter\", [ev]);\n\t\tif (view && view.editStop && view._in_edit_mode){\n\t\t\tview.editStop();\n\t\t\treturn true;\n\t\t} else if (view && view.touchable){\n\t\t\tvar form = view.getFormView();\n\t\t\tif (form && !view._skipSubmit)\n\t\t\t\tform.callEvent(\"onSubmit\",[view,ev]);\n\t\t}\n\t});\n\tUIManager.addHotKey(\"esc\", function(view){\n\t\tif (view){\n\t\t\tif (view.editCancel && view._in_edit_mode){\n\t\t\t\tview.editCancel();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar top = view.getTopParentView();\n\t\t\tif (top && top.setPosition){\n\t\t\t\tif(fullscreen._fullscreen == top)\n\t\t\t\t\tfullscreen.exit();\n\t\t\t\tif(top._editorMaster ){\n\t\t\t\t\tconst master = $$(top._editorMaster);\n\t\t\t\t\tif (master.editCancel && master._in_edit_mode)\n\t\t\t\t\t\tmaster.editCancel();\n\t\t\t\t}\n\t\t\t\ttop._hide();\n\t\t\t}\n\t\t}\n\t});\n\tUIManager.addHotKey(\"shift+tab\", UIManager._tab_logic);\n\tUIManager.addHotKey(\"tab\", UIManager._tab_logic);\n});\n\ndefine(\"UIManager\", UIManager);\n\nexport default UIManager;","import {bind} from \"../webix/helpers\";\n\nconst CollectionBind={\n\t$init:function(){\n\t\tthis._cursor = null;\n\t\tthis.attachEvent(\"onSelectChange\", function(){\n\t\t\tvar sel = this.getSelectedId();\n\t\t\tthis.setCursor(sel?(sel.id||sel):null);\n\t\t});\n\t\tthis.attachEvent(\"onAfterCursorChange\", this._update_binds);\t\t\n\t\tthis.attachEvent(\"onAfterDelete\", function(id){\n\t\t\tif (id == this.getCursor())\n\t\t\t\tthis.setCursor(null);\n\t\t});\n\t\tthis.data.attachEvent(\"onStoreUpdated\", bind(function(id, data, mode){\n\t\t\t//paint - ignored\n\t\t\t//delete - handled by onAfterDelete above\n\t\t\tif (id && id == this.getCursor() && mode != \"paint\" && mode != \"delete\")\n\t\t\t\tthis._update_binds();\n\t\t\t\n\t\t},this));\n\t\tthis.data.attachEvent(\"onClearAll\", bind(function(){\n\t\t\tthis._cursor = null;\n\t\t},this));\n\t\tthis.data.attachEvent(\"onIdChange\", bind(function(oldid, newid){\n\t\t\tif (this._cursor == oldid){\n\t\t\t\tthis._cursor = newid;\n\t\t\t\tthis._update_binds();\n\t\t\t}\n\t\t},this));\n\t},\n\trefreshCursor:function(){\n\t\tif (this._cursor)\n\t\t\tthis.callEvent(\"onAfterCursorChange\",[this._cursor]);\n\t},\n\tsetCursor:function(id){\n\t\tif (id == this._cursor || (id !== null && !this.getItem(id))) return;\n\t\t\n\t\tthis.callEvent(\"onBeforeCursorChange\", [this._cursor]);\n\t\tthis._cursor = id;\n\t\tthis.callEvent(\"onAfterCursorChange\",[id]);\n\t},\n\tgetCursor:function(){\n\t\treturn this._cursor;\n\t},\n\t_bind_update:function(target, rule, format){\n\t\tif (rule == \"$level\" && this.data.getBranch)\n\t\t\treturn (target.data || target).importData(this.data.getBranch(this.getCursor()));\n\n\t\tvar data = this.getItem(this.getCursor())|| this._settings.defaultData || null;\n\t\tif (rule == \"$data\"){\n\t\t\tif (typeof format === \"function\")\n\t\t\t\tformat.call(target, data, this);\n\t\t\telse\n\t\t\t\ttarget.data.importData(data?data[format]:[]);\n\t\t\ttarget.callEvent(\"onBindApply\", [data,rule,this]);\n\t\t} else {\n\t\t\tif (format)\n\t\t\t\tdata = format(data);\n\t\t\tthis._bind_update_common(target, rule, data);\n\t\t}\n\t}\n};\n\nexport default CollectionBind;","import {isUndefined} from \"../webix/helpers\";\nimport {debug_size_box} from \"../webix/debug\";\nimport {protoUI} from \"../ui/core\";\n\nimport base from \"./baseview\";\n\nconst api = {\n\tname:\"view\",\n\t$init:function(config){\n\t\tthis._set_inner(config);\n\t},\n\n\t//deside, will component use borders or not\n\t_set_inner:function(config){\n\t\tvar border_not_set = isUndefined(config.borderless);\n\t\tif (border_not_set && !this.setPosition && config.$topView){\n\t\t\tconfig.borderless = true;\n\t\t\tborder_not_set = false;\n\t\t}\n\n\t\tif ((border_not_set && this.defaults.borderless) || config.borderless){\n\t\t\t//button and custom borderless\n\t\t\tconfig._inner = { top:true, left:true, bottom:true, right:true };\n\t\t} else {\n\t\t\t//default borders\n\t\t\tif (!config._inner)\n\t\t\t\tconfig._inner = {};\n\t\t\tthis._contentobj.style.borderWidth=\"1px\";\n\t\t}\n\t},\n\n\t$getSize:function(dx, dy){\n\n\t\tvar _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\t\t\n\t\tvar size = base.api.$getSize.call(this, dx, dy);\n\t\t\n\t\tif (DEBUG) debug_size_box(this, size, true);\n\t\treturn size;\n\t},\n\t$setSize:function(x,y){\n\t\tif (DEBUG) debug_size_box(this, [x,y]);\n\t\t\t\n\t\tvar _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tx -= (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\ty -= (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\t\t\t\n\t\treturn base.api.$setSize.call(this,x,y);\n\t}\n};\n\nconst view = protoUI(api, base.view);\nexport default { api, view };\n\n//not necessary anymore\n//preserving for backward compatibility\nview.call(-1);\n","import {create, remove} from \"../webix/html\";\nimport {isUndefined, toNode} from \"../webix/helpers\";\nimport {proto} from \"../ui/core\";\n\nconst Canvas = proto({\n\t$init:function(container){\n\t\tthis._canvas_labels = [];\n\t\tthis._canvas_series =  (!isUndefined(container.series)?container.series:container.name);\n\t\tthis._obj = toNode(container.container||container);\n\t\tvar width = container.width*(window.devicePixelRatio||1);\n\t\tvar height = container.height*(window.devicePixelRatio||1);\n\t\tvar style = container.style||\"\";\n\t\tstyle += \";width:\"+container.width+\"px;height:\"+container.height+\"px;\";\n\t\tthis._prepareCanvas(container.name, style ,width, height, container.title);\n\t},\n\t_prepareCanvas:function(name,style,x,y, title){\n\t\t//canvas has the same size as master object\n\t\tthis._canvas = create(\"canvas\",{ title:title, width:x, height:y, canvas_id:name, style:(style||\"\")});\n\t\tthis._obj.appendChild(this._canvas);\n\t\treturn this._canvas;\n\t}, \n\tgetCanvas:function(context){\n\t\tvar ctx = (this._canvas||this._prepareCanvas(this._contentobj)).getContext(context||\"2d\");\n\t\tif(!this._webixDevicePixelRatio){\n\t\t\tthis._webixDevicePixelRatio = true;\n\t\t\tctx.scale(window.devicePixelRatio||1, window.devicePixelRatio||1);\n\t\t}\n\t\treturn ctx;\n\t},\n\t_resizeCanvas:function(x, y){\n\t\tif (this._canvas){\n\t\t\tthis._canvas.setAttribute(\"width\", x*(window.devicePixelRatio||1));\n\t\t\tthis._canvas.setAttribute(\"height\", y*(window.devicePixelRatio||1));\n\t\t\tthis._canvas.style.width = x+\"px\";\n\t\t\tthis._canvas.style.height = y+\"px\";\n\t\t\tthis._webixDevicePixelRatio = false;\n\t\t}\n\t},\n\trenderText:function(x,y,text,css,w){\n\t\tif (!text) return; //ignore empty text\n\t\tif (w) w = Math.max(w,0);\n\t\tif (y) y = Math.max(y,0);\n\t\tvar t = create(\"DIV\",{\n\t\t\t\"class\":\"webix_canvas_text\"+(css?(\" \"+css):\"\"),\n\t\t\t\"style\":\"left:\"+x+\"px; top:\"+y+\"px;\",\n\t\t\t\"aria-hidden\":\"true\"\n\t\t},text);\n\t\tthis._obj.appendChild(t);\n\t\tthis._canvas_labels.push(t); //destructor?\n\t\tif (w)\n\t\t\tt.style.width = w+\"px\";\n\t\treturn t;\n\t},\n\trenderTextAt:function(valign,align, x,y,t,c,w){\n\t\tvar text=this.renderText.call(this,x,y,t,c,w);\n\t\tif (text){\n\t\t\tlet size;\n\t\t\tif(document.body.contains(text))\n\t\t\t\tsize = { width: text.offsetWidth, height: text.offsetHeight };\n\t\t\telse{\n\t\t\t\t// inside window\n\t\t\t\tconst d = create(\"DIV\",{class: \"webix_chart\", style: \"visibility:hidden; position:absolute; top:0px; left:0px;\"}, \"\");\n\t\t\t\tconst parentNode = text.parentNode;\n\t\t\t\tdocument.body.appendChild(d);\n\t\t\t\td.appendChild(text);\n\t\t\t\tsize = { width: text.offsetWidth, height: text.offsetHeight };\n\t\t\t\tparentNode.appendChild(text);\n\t\t\t\tremove(d);\n\t\t\t}\n\n\t\t\tif (valign){\n\t\t\t\tif(valign == \"middle\")\n\t\t\t\t\ttext.style.top = parseInt(y-size.height/2,10) + \"px\";\n\t\t\t\telse\n\t\t\t\t\ttext.style.top = y-size.height + \"px\";\n\t\t\t}\n\t\t\tif (align){\n\t\t\t\tif(align == \"left\")\n\t\t\t\t\ttext.style.left = x-size.width + \"px\";\n\t\t\t\telse\n\t\t\t\t\ttext.style.left = parseInt(x-size.width/2,10) + \"px\";\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t},\n\tclearCanvas:function(skipMap){\n\t\tvar areas=[];\n\n\t\tremove(this._canvas_labels);\n\t\tthis._canvas_labels = [];\n\n\t\tif (!skipMap&&this._obj._htmlmap){\n\n\t\t\t//areas that correspond this canvas layer\n\t\t\tareas = this._getMapAreas();\n\t\t\t//removes areas of this canvas\n\t\t\twhile(areas.length){\n\t\t\t\tareas[0].parentNode.removeChild(areas[0]);\n\t\t\t\tareas.splice(0,1);\n\t\t\t}\n\t\t\tareas = null;\n\n\t\t\t//removes _htmlmap object if all its child nodes are removed\n\t\t\tif(!this._obj._htmlmap.getElementsByTagName(\"AREA\").length){\n\t\t\t\tthis._obj._htmlmap.parentNode.removeChild(this._obj._htmlmap);\n\t\t\t\tthis._obj._htmlmap = null;\n\t\t\t}\n\t\t}\n\t\t//FF breaks, when we are using clear canvas and call clearRect without parameters\n\t\t//width|height are used insead of offsetWidth|offsetHeight for hidden canvas (series)\n\t\tthis.getCanvas().clearRect(0,0,\n\t\t\tthis._canvas.offsetWidth||Math.floor(this._canvas.width/(window.devicePixelRatio||1)), \n\t\t\tthis._canvas.offsetHeight||Math.floor(this._canvas.height/(window.devicePixelRatio||1))\n\t\t);\n\t},\n\ttoggleCanvas:function(){\n\t\tthis._toggleCanvas(this._canvas.style.display==\"none\");\n\t},\n\tshowCanvas:function(){\n\t\tthis._toggleCanvas(true);\n\t},\n\thideCanvas:function(){\n\t\tthis._toggleCanvas(false);\n\t},\n\t_toggleCanvas:function(show){\n\t\tvar areas, i;\n\n\t\tfor(i=0; i < this._canvas_labels.length;i++)\n\t\t\tthis._canvas_labels[i].style.display = (show?\"\":\"none\");\n\n\t\tif (this._obj._htmlmap){\n\t\t\tareas = this._getMapAreas();\n\t\t\tfor( i = 0; i < areas.length; i++){\n\t\t\t\tif(show)\n\t\t\t\t\tareas[i].removeAttribute(\"disabled\");\n\t\t\t\telse\n\t\t\t\t\tareas[i].setAttribute(\"disabled\",\"true\");\n\t\t\t}\n\t\t}\n\t\t//FF breaks, when we are using clear canvas and call clearRect without parameters\n\t\tthis._canvas.style.display = (show?\"\":\"none\");\n\t},\n\t_getMapAreas:function(){\n\t\tvar res = [], areas, i;\n\t\tareas = this._obj._htmlmap.getElementsByTagName(\"AREA\");\n\t\tfor(i = 0; i < areas.length; i++){\n\t\t\tif(areas[i].getAttribute(\"userdata\") == this._canvas_series){\n\t\t\t\tres.push(areas[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t}\n});\n\nexport default Canvas;","const skin = {\n\ttopLayout:\"space\",\n\t//bar in accordion\n\tbarHeight:36,\t\t\t//!!!Set the same in skin.less!!!\n\ttabbarHeight: 34,\n\tsidebarTitleHeight: 36,\n\trowHeight:28,\n\ttoolbarHeight:36,\n\tlistItemHeight:28,\t//list, grouplist, dataview, etc.\n\tinputHeight: 30,\n\tbuttonHeight: 30,\n\tinputPadding: 3,\n\tmenuHeight: 28,\n\tlabelTopHeight: 16,\n\tpropertyItemHeight: 24,\n\tunitHeaderHeight:28,\n\ttimelineItemHeight:50,\n\tfontSize: 12,\n\n\tinputSpacing: 4,\n\tborderWidth: 1,\n\n\tsliderHandleWidth: 12,\n\tsliderPadding: 10,\n\tsliderBorder: 1,\n\tvSliderPadding:13,\n\tvSliderHeight:100,\n\tswitchHeight:22,\n\tswitchWidth:40,\n\n\t//margin - distance between cells\n\tlayoutMargin:{ space:5, wide:5, clean:0, head:4, line:-1, toolbar:4, form:8, accordion: 2  },\n\t//padding - distance inside cell between cell border and cell content\n\tlayoutPadding:{ space:5, wide:0, clean:0, head:0, line:0, toolbar:2, form:12, accordion: 0  },\n\t//space between tabs in tabbar\n\ttabMargin: 0,\n\ttabOffset: 0,\n\ttabBottomOffset: 0,\n\ttabTopOffset:0,\n\ttabBorder: true,\n\n\tcustomCheckbox: true,\n\tcustomRadio: true,\n\tsidebarMarkAll: true,\n\tpopupNoPoint: true,\n\tborderlessPopup: true,\n\n\tpopupPadding: 0,\n\n\tdataPadding: 12,\n\n\tcalendarWeekHeaderHeight: 18,\n\tpadding:0,\n\taccordionType: \"accordion\",\n\n\toptionHeight: 24,\n\ttimelineColor:\"#1CA1C1\",\n\n\tbackColor:\"#FFFFFF\",\n\tdataBorderColor:\"#EDEFF0\",\n\n\t//colorboard\n\tcolorPadding: 4\n};\n\nexport default skin;\n","import env from \"../webix/env\";\nimport ready from \"../webix/ready\";\n\nimport {event} from \"../webix/htmlevents\";\nimport {callEvent} from \"../webix/customevents\";\nimport {preventEvent, removeCss, addCss, addStyle} from \"../webix/html\";\n\n//late binding\nimport {$$} from \"../ui/core\";\n\nconst Touch = {\n\tconfig:{\n\t\tlongTouchDelay:700,\n\t\tscrollDelay:150,\n\t\tgravity:500,\n\t\tdeltaStep:10,\n\t\tspeed:\"0ms\",\n\t\tfinish:1000,\n\t\telastic:true\n\t},\n\tlimit:function(value){\n\t\tTouch._limited = value !== false;\t\n\t},\n\tdisable:function(){\n\t\tTouch._disabled = true;\n\t},\n\tenable:function(){\n\t\tTouch._disabled = false;\n\t},\n\t$init:function(){\n\t\tTouch.$init = function(){};\n\n\t\tevent(document.body, env.touch.down,\tTouch._touchstart, {passive:false});\n\t\tevent(document.body, env.touch.move, \tTouch._touchmove, {passive:false});\n\t\tevent(document, env.touch.up, \tTouch._touchend);\n\n\t\tevent(document.body,\"dragstart\",function(e){\n\t\t\tif(Touch._disabled || Touch._limited) return;\n\t\t\treturn preventEvent(e);\n\t\t});\n\n\t\tTouch._clear_artefacts();\n\t\tTouch._scroll = [null, null];\n\t\tTouch.$active = true;\n\t},\n\t_clear_artefacts:function(){\n\t\tTouch._start_context = Touch._current_context = Touch._prev_context = Touch._scroll_context = null;\n\t\tTouch._scroll_mode = Touch._scroll_node = Touch._scroll_stat = Touch._long_touched = null;\n\t\tTouch._delta = \t{ _x_moment:0, _y_moment:0, _time:0 };\n\n\t\tif (Touch._css_button_remove){\n\t\t\tremoveCss(Touch._css_button_remove,\"webix_touch\");\n\t\t\tTouch._css_button_remove = null;\n\t\t}\n\t\t\n\t\twindow.clearTimeout(Touch._long_touch_timer);\n\t\tTouch._was_not_moved = true;\n\t\tTouch._axis_x = true;\n\t\tTouch._axis_y = true;\n\t\tif (!Touch._active_transion)\n\t\t\tTouch._scroll_end();\n\t},\n\t_touchend:function(e){\n\t\tif (Touch._start_context) {\n\t\t\tif (!Touch._scroll_mode) {\n\t\t\t\tif (!Touch._long_touched && !(Touch._axis_x * Touch._axis_y)) {\n\t\t\t\t\tconst delta = Touch._get_delta(e);\n\t\t\t\t\tif (!Touch._axis_x && delta._x/(delta._y||1) > 4) {\n\t\t\t\t\t\tTouch._translate_event(\"onSwipeX\");\n\t\t\t\t\t} else if (!Touch._axis_y && delta._y/(delta._x||1) > 4) {\n\t\t\t\t\t\tTouch._translate_event(\"onSwipeY\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet finish = Touch.config.finish;\n\t\t\t\tconst temp = Touch._get_matrix(Touch._scroll_node);\n\t\t\t\tconst x = temp.e;\n\t\t\t\tconst y = temp.f;\n\n\t\t\t\tconst delta = Touch._get_delta(e);\n\t\t\t\tconst view = $$(Touch._scroll_node);\n\n\t\t\t\tconst gravity = (view && view.$scroll) ? view.$scroll.gravity : Touch.config.gravity;\n\t\t\t\tif (delta._time) {\n\t\t\t\t\tconst nx = x + gravity * delta._x_moment / delta._time;\n\t\t\t\t\tconst ny = y + gravity * delta._y_moment / delta._time;\n\n\t\t\t\t\tconst cnx = Touch._scroll[0] ? Touch._correct_minmax(nx, false, false, Touch._scroll_stat.dx, Touch._scroll_stat.px) : x;\n\t\t\t\t\tconst cny = Touch._scroll[1] ? Touch._correct_minmax(ny, false, false, Touch._scroll_stat.dy, Touch._scroll_stat.py) : y;\n\n\t\t\t\t\tconst size = Math.max(Math.abs(cnx - x), Math.abs(cny - y));\n\t\t\t\t\tif (size < 150)\n\t\t\t\t\t\tfinish = finish * size / 150;\n\n\t\t\t\t\tif (cnx != x || cny != y)\n\t\t\t\t\t\tfinish = Math.round(finish * Math.max((cnx - x) / (nx - x), (cny - y) / (ny - y)));\n\n\t\t\t\t\tconst result = {e: cnx, f: cny};\n\t\t\t\t\tif (view && view.adjustScroll)\n\t\t\t\t\t\tview.adjustScroll(result);\n\n\t\t\t\t\tfinish = Math.min(Touch.config.finish, Math.max(100, finish));\n\t\t\t\t\tif (x != result.e || y != result.f) {\n\t\t\t\t\t\tTouch._set_matrix(Touch._scroll_node, result.e, result.f, finish + \"ms\");\n\t\t\t\t\t\tif (Touch._scroll_master)\n\t\t\t\t\t\t\tTouch._scroll_master._sync_scroll(result.e, result.f, finish + \"ms\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tTouch._scroll_end();\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tTouch._scroll_end();\n\t\t\t}\n\t\t\tTouch._translate_event(\"onTouchEnd\");\n\t\t\tTouch._clear_artefacts();\n\t\t}\n\t},\n\t_touchmove:function(e){\n\t\tif (!Touch._scroll_context || !Touch._start_context) return;\n\n\t\tvar\tdelta = Touch._get_delta(e);\n\t\tTouch._translate_event(\"onTouchMove\");\n\n\t\tif (Touch._scroll_mode){\n\t\t\tTouch._set_scroll_pos();\n\t\t} else {\n\t\t\tTouch._axis_x = Touch._axis_check(delta._x, \"x\", Touch._axis_x);\n\t\t\tTouch._axis_y = Touch._axis_check(delta._y, \"y\", Touch._axis_y);\n\t\t\tif (Touch._scroll_mode){\n\t\t\t\tvar view = Touch._get_event_view(\"onBeforeScroll\", true);\n\t\t\t\tif (view){\n\t\t\t\t\tvar data = {};\n\t\t\t\t\tview.callEvent(\"onBeforeScroll\",[data]);\n\t\t\t\t\tif (data.update){\n\t\t\t\t\t\tTouch.config.speed = data.speed;\n\t\t\t\t\t\tTouch.config.scale = data.scale;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tTouch._init_scroller(); //apply scrolling\n\t\t\t} else {\n\t\t\t\tconst state = Touch._is_scroll();\n\t\t\t\tconst view = $$(state && state[0]);\t\t// support subviews\n\t\t\t\tif (view && view.$hasYScroll && view.$hasYScroll() && e.cancelable){\n\t\t\t\t\treturn preventEvent(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Touch._scroll_mode && e.cancelable)\n\t\t\treturn preventEvent(e);\n\t},\n\t_set_scroll_pos:function(){\n\t\tif (!Touch._scroll_node) return;\n\t\tvar temp = Touch._get_matrix(Touch._scroll_node);\n\t\tvar prev = Touch._prev_context || Touch._start_context;\n\n\t\tvar view = $$(Touch._scroll_node);\n\t\tvar elastic = (view && view.$scroll) ? view.$scroll.elastic : Touch.config.elastic;\n\n\t\tif (Touch._scroll[0])\n\t\t\ttemp.e = Touch._correct_minmax( temp.e - prev.x + Touch._current_context.x , elastic, temp.e, Touch._scroll_stat.dx, Touch._scroll_stat.px);\n\t\tif (Touch._scroll[1])\n\t\t\ttemp.f = Touch._correct_minmax( temp.f - prev.y + Touch._current_context.y , elastic, temp.f, Touch._scroll_stat.dy, Touch._scroll_stat.py);\n\n\t\tTouch._set_matrix(Touch._scroll_node, temp.e, temp.f, \"0ms\");\n\t\tif (Touch._scroll_master)\n\t\t\tTouch._scroll_master._sync_scroll(temp.e, temp.f, \"0ms\");\n\t},\n\tscrollTo:function(node, x, y, speed){\n\t\tTouch._set_matrix(node,x,y,speed);\n\t},\n\t_set_matrix:function(node, xv, yv, speed){\n\t\tif (!speed){\n\t\t\tnode.style[env.transform] = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tTouch._active_transion = true;\n\t\tif (node){\n\t\t\tvar trans = Touch.config.translate || env.translate;\n\t\t\tnode.style[env.transform] = trans+\"(\"+Math.round(xv)+\"px, \"+Math.round(yv)+\"px\"+((trans==\"translate3d\")?\", 0\":\"\")+\")\";\n\t\t\tnode.style[env.transitionDuration] = speed;\n\t\t}\n\t},\n\t_get_matrix:function(node){\n\t\tvar matrix = window.getComputedStyle(node)[env.transform];\n\t\tvar tmatrix;\n\n\t\tif (matrix == \"none\")\n\t\t\ttmatrix = {e:0, f:0};\n\t\telse {\n\t\t\tif(window.WebKitCSSMatrix)\n\t\t\t\t/* global WebKitCSSMatrix */\n\t\t\t\ttmatrix = new WebKitCSSMatrix(matrix);\n\t\t\telse {\n\t\t\t\t// matrix(1, 0, 0, 1, 0, 0) --> 1, 0, 0, 1, 0, 0\n\t\t\t\tvar _tmatrix = matrix.replace(/(matrix\\()(.*)(\\))/gi, \"$2\");\n\t\t\t\t// 1, 0, 0, 1, 0, 0 --> 1,0,0,1,0,0\n\t\t\t\t_tmatrix = _tmatrix.replace(/\\s/gi, \"\");\n\t\t\t\t_tmatrix = _tmatrix.split(\",\");\n\n\t\t\t\ttmatrix = {};\n\t\t\t\tvar tkey = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n\t\t\t\tfor(var i=0; i<tkey.length; i++){\n\t\t\t\t\ttmatrix[tkey[i]] = parseInt(_tmatrix[i], 10);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Touch._scroll_master)\n\t\t\tTouch._scroll_master._sync_pos(tmatrix);\n\n\t\treturn tmatrix;\n\t},\t\n\t_correct_minmax:function(value, allow, current, dx, px){\n\t\tif (value === current) return value;\n\n\t\tif (px > dx) return 0;\n\n\t\tconst delta = Math.abs(value-current);\n\t\tconst sign = delta/(value-current);\n\t\tif (value > 0)\n\t\t\treturn allow ? (current + sign*Math.sqrt(delta)) : 0;\n\n\t\tconst max = dx - px;\n\t\tif (max + value < 0)\n\t\t\treturn allow ? (current + sign*Math.sqrt(delta)) : -max;\n\n\t\treturn value;\n\t},\t\n\t_init_scroll_node:function(node){\n\t\tif (!node.scroll_enabled){\n\t\t\tnode.scroll_enabled = true;\n\t\t\tnode.parentNode.style.position = \"relative\";\n\t\t\tnode.style.cssText += \"transition:transform; user-select:none; transform-style:flat;\";\n\t\t\tnode.addEventListener(env.transitionEnd,Touch._scroll_end,false);\n\t\t}\n\t},\n\t_init_scroller:function(){\n\t\tif (Touch._scroll_mode.indexOf(\"x\") !== -1) Touch._scroll[0] = true;\n\t\tif (Touch._scroll_mode.indexOf(\"y\") !== -1) Touch._scroll[1] = true;\n\n\t\tif (Touch._scroll[0] || Touch._scroll[1])\n\t\t\tTouch._scroll[2] = Touch._scroll_node;\n\n\t\tTouch._init_scroll_node(Touch._scroll_node);\n\t},\n\t_axis_check:function(value, mode, old){\n\t\tif (value > Touch.config.deltaStep){\n\t\t\tif (Touch._was_not_moved){\n\t\t\t\tTouch._long_move(mode);\n\t\t\t\tTouch._locate(mode);\n\t\t\t\tif ((Touch._scroll_mode||\"\").indexOf(mode) == -1) Touch._scroll_mode = \"\";\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn old;\n\t},\n\t_scroll_end:function(){\n\t\t//sending event to the owner of the scroll only\n\t\tvar result,state,view;\n\t\tview = $$(Touch._scroll_node||this);\n\t\tif (view){\n\t\t\tif (Touch._scroll_node)\n\t\t\t\tresult = Touch._get_matrix(Touch._scroll_node);\n\t\t\telse if(view.getScrollState){\n\t\t\t\tstate = view.getScrollState();\n\t\t\t\tresult = {e:-state.x, f:-state.y};\n\t\t\t}\n\t\t\tcallEvent(\"onAfterScroll\", [result]);\n\t\t\tif (view.callEvent)\n\t\t\t\tview.callEvent(\"onAfterScroll\",[result]);\n\t\t}\n\t\tif (!Touch._scroll_mode)\n\t\t\tTouch._scroll = [null, null];\n\t\tTouch._active_transion = false;\n\t},\n\t_long_move:function(){\n\t\twindow.clearTimeout(Touch._long_touch_timer);\n\t\tTouch._was_not_moved = false;\t\n\t},\t\n\t_stop_old_scroll:function(e){\n\t\tif (Touch._scroll[2]){\n\t\t\tTouch._stop_scroll(e, (Touch._scroll[0] ? \"x\" : \"y\"));\n\t\t} else\n\t\t\treturn true;\n\t},\n\t_touchstart :function(e){\n\t\tif (Touch._disabled) return;\n\n\t\tTouch._long_touched = null;\n\t\tTouch._scroll_context = Touch._start_context = env.touch.context(e);\n\n\t\tif (Touch._limited && !Touch._is_scroll())\n\t\t\tTouch._scroll_context = null;\n\n\t\tTouch._translate_event(\"onTouchStart\");\n\n\t\tif (Touch._stop_old_scroll(e))\n\t\t\tTouch._long_touch_timer = window.setTimeout(Touch._long_touch, Touch.config.longTouchDelay);\n\n\t\tconst element = $$(e);\n\t\tif (element && element.touchable && (!e.target.className || e.target.className.indexOf(\"webix_view\") !== 0)){\n\t\t\tTouch._css_button_remove = element.getNode(e);\n\t\t\taddCss(Touch._css_button_remove,\"webix_touch\");\n\t\t}\n\t},\n\t_long_touch:function(){\n\t\tif(Touch._start_context){\n\t\t\tTouch._long_touched = true;\n\t\t\tTouch._translate_event(\"onLongTouch\");\n\t\t\tcallEvent(\"onClick\", [Touch._start_context]);\n\t\t}\n\t},\n\t_stop_scroll:function(e, stop_mode){\n\t\tTouch._locate(stop_mode);\n\t\tif (Touch._scroll[2]){\n\t\t\tvar view = Touch._get_event_view(\"onBeforeScroll\", true);\n\t\t\tif (view)\n\t\t\t\tview.callEvent(\"onBeforeScroll\", [Touch._start_context,Touch._current_context]);\n\n\t\t\tif (!Touch._scroll_node || Touch._scroll_node.parentNode !== Touch._scroll[2].parentNode){\n\t\t\t\tTouch._clear_artefacts();\n\t\t\t\tTouch._scroll_end();\n\t\t\t\tTouch._start_context = env.touch.context(e);\n\t\t\t}\n\t\t}\n\t\tTouch._touchmove(e);\n\t},\t\n\t_get_delta:function(e){\n\t\tTouch._prev_context = Touch._current_context;\n\t\tTouch._current_context = env.touch.context(e);\n\n\t\tTouch._delta._x = Math.abs(Touch._start_context.x - Touch._current_context.x);\n\t\tTouch._delta._y = Math.abs(Touch._start_context.y - Touch._current_context.y);\n\n\t\tif (Touch._prev_context){\n\t\t\tif (Touch._current_context.time - Touch._prev_context.time < Touch.config.scrollDelay){\n\t\t\t\tTouch._delta._x_moment = Touch._delta._x_moment/1.3+Touch._current_context.x - Touch._prev_context.x;\n\t\t\t\tTouch._delta._y_moment = Touch._delta._y_moment/1.3+Touch._current_context.y - Touch._prev_context.y;\n\t\t\t} else {\n\t\t\t\tTouch._delta._y_moment = Touch._delta._x_moment = 0;\n\t\t\t}\n\t\t\tTouch._delta._time = Touch._delta._time/1.3+(Touch._current_context.time - Touch._prev_context.time);\n\t\t}\n\n\t\treturn Touch._delta;\n\t},\n\t_get_sizes:function(node){\n\t\treturn {\n\t\t\tdx:node.offsetWidth,\n\t\t\tdy:node.offsetHeight,\n\t\t\tpx:node.parentNode.offsetWidth,\n\t\t\tpy:node.parentNode.offsetHeight\n\t\t};\n\t},\n\t_is_scroll:function(locate_mode){\n\t\tvar node = Touch._start_context.target;\n\t\twhile(node && node.tagName != \"BODY\"){\n\t\t\tif (node.getAttribute){\n\t\t\t\tvar mode = node.getAttribute(\"touch_scroll\");\n\t\t\t\tif (mode && (!locate_mode || mode.indexOf(locate_mode) != -1))\n\t\t\t\t\treturn [node, mode];\n\t\t\t}\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\t_locate:function(locate_mode){\n\t\tvar state = Touch._is_scroll(locate_mode);\n\t\tif (state){\n\t\t\tTouch._scroll_mode = state[1];\n\t\t\tTouch._scroll_node = state[0];\n\t\t\tTouch._scroll_stat = Touch._get_sizes(state[0]);\n\t\t}\n\t\treturn state;\n\t},\n\t_translate_event:function(name){\n\t\tcallEvent(name, [Touch._start_context,Touch._current_context]);\n\t\tvar view = Touch._get_event_view(name);\n\t\tif (view)\n\t\t\tview.callEvent(name, [Touch._start_context,Touch._current_context]);\n\t},\n\t_get_event_view:function(name, active){\n\t\tvar view = $$(active ? Touch._scroll_node : Touch._start_context);\n\t\tif(!view) return null;\n\n\t\twhile (view){\n\t\t\tif (view.hasEvent && view.hasEvent(name))\n\t\t\t\treturn view;\n\t\t\tview = view.getParentView();\n\t\t}\n\n\t\treturn null;\n\t},\t\n\t_get_context:function(e){\n\t\tif (!e.touches[0]) {\n\t\t\tvar temp = Touch._current_context;\n\t\t\ttemp.time = new Date();\n\t\t\treturn temp;\n\t\t}\n\n\t\treturn {\n\t\t\ttarget:e.target,\n\t\t\tx:e.touches[0].pageX,\n\t\t\ty:e.touches[0].pageY,\n\t\t\ttime:new Date()\n\t\t};\n\t},\n\t_get_context_m:function(e){\n\t\treturn {\n\t\t\ttarget:e.target,\n\t\t\tx:e.pageX,\n\t\t\ty:e.pageY,\n\t\t\ttime:new Date()\n\t\t};\n\t}\n};\n\nfunction touchInit(){\n\tif (env.touch){\n\t\tTouch.$init();\n\n\t\t//not full screen mode\n\t\tif (document.body.className.indexOf(\"webix_full_screen\") === -1)\n\t\t\tTouch.limit(true);\n\n\t\tif (env.isSafari && CSS.supports(\"-webkit-overflow-scrolling: touch\"))\n\t\t\taddStyle(\".webix_view{ -webkit-overflow-scrolling:touch; } .webix_scroll_cont{ transform:translateZ(0px); }\");\n\t}\n}\n\nready(touchInit);\n\nenv.mouse = {\n\tdown: \"mousedown\",\n\tmove: \"mousemove\",\n\tup: \"mouseup\",\n\tcontext: Touch._get_context_m\n};\n\nenv.touch = env.touch && {\n\tdown: \"touchstart\",\n\tmove: \"touchmove\",\n\tup: \"touchend\",\n\tcontext: Touch._get_context\n};\n\t\n\nexport default Touch;","import {preventEvent, addCss, removeCss, pos as getPos, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport Touch from \"../core/touch\";\nimport {zIndex} from \"../ui/helpers\";\nimport {_to_array, toNode} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {attachEvent, callEvent} from \"../webix/customevents\";\n\n\n/*\n\tBehavior:DND - low-level dnd handling\n\t@export\n\t\tgetContext\n\t\taddDrop\n\t\taddDrag\n\t\t\n\tDND master can define next handlers\n\t\tonCreateDrag\n\t\tonDragIng\n\t\tonDragOut\n\t\tonDrag\n\t\tonDrop\n\tall are optional\n*/\n\nconst DragControl ={\n\t//has of known dnd masters\n\t_drag_masters : _to_array([\"dummy\"]),\n\t/*\n\t\tregister drop area\n\t\t@param node \t\t\thtml node or ID\n\t\t@param ctrl \t\t\toptions dnd master\n\t\t@param master_mode \t\ttrue if you have complex drag-area rules\n\t*/\n\taddDrop:function(node,ctrl,master_mode){\n\t\tnode = toNode(node);\n\t\tnode.webix_drop=this._getCtrl(ctrl);\n\t\tif (master_mode) node.webix_master=true;\n\t},\n\t//return index of master in collection\n\t//it done in such way to prevent dnd master duplication\n\t//probably useless, used only by addDrop and addDrag methods\n\t_getCtrl:function(ctrl){\n\t\tctrl = ctrl||DragControl;\n\t\tvar index = this._drag_masters.find(ctrl);\n\t\tif (index<0){\n\t\t\tindex = this._drag_masters.length;\n\t\t\tthis._drag_masters.push(ctrl);\n\t\t\tif (ctrl.attachEvent)\n\t\t\t\tctrl.attachEvent(\"onDestruct\", () => DragControl.unlink(ctrl));\n\t\t}\n\t\treturn index;\n\t},\n\tunlink(ctrl){\n\t\tvar index = this._drag_masters.find(ctrl);\n\t\tif (index > -1){\n\t\t\t// if active view was destroyed, stop dnd\n\t\t\tif (DragControl._active && DragControl._active.webix_drag == index)\n\t\t\t\tDragControl._stopDrag();\n\t\t\t// if last target was destroyed, reset it and continue dnd\n\t\t\tif (DragControl._last && DragControl._last.webix_drop == index)\n\t\t\t\tDragControl._last = null;\n\n\t\t\tthis._drag_masters[index] = null;\n\t\t}\n\t},\n\t_createTouchDrag: function(e, pointer){\n\t\tconst dragCtrl = DragControl;\n\t\tconst master = this._getActiveDragMaster();\n\t\t// for data items only\n\t\tif (master && master.$longTouchLimit){\n\t\t\tif (!dragCtrl._html && !dragCtrl.createDrag(e, pointer)) return;\n\t\t\te.longtouch_drag = true;\n\n\t\t\tconst pos = getPos(e);\n\t\t\tconst customPos = dragCtrl.$dragPos(pos, e);\n\n\t\t\tconst ctx = dragCtrl._drag_context;\n\t\t\tdragCtrl._html.style.top= pos.y+dragCtrl.top+(customPos||!ctx.y_offset?0:ctx.y_offset)+\"px\";\n\t\t\tdragCtrl._html.style.left= pos.x+dragCtrl.left+(customPos||!ctx.x_offset?0:ctx.x_offset)+\"px\";\n\t\t}\n\t},\n\t/*\n\t\tregister drag area\n\t\t@param node \thtml node or ID\n\t\t@param ctrl \toptions dnd master\n\t*/\n\taddDrag:function(node,ctrl){\n\t\tnode = toNode(node);\n\t\tnode.webix_drag = this._getCtrl(ctrl);\n\t\t_event(node,\"dragstart\",preventEvent);\n\t\t_event(node, env.mouse.down, e => this._preStart(e, node, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(node, env.touch.down, e => this._preStart(e, node, \"touch\"));\n\t},\n\t//logic of drag - start, we are not creating drag immediately, instead of that we hears mouse moving\n\t_preStart:function(e, node, pointer){\n\t\tif (DragControl._active){\n\t\t\t//if we have nested drag areas, use the top one and ignore the inner one\n\t\t\tif (DragControl._saved_event == e) return;\n\t\t\tDragControl._preStartFalse(e);\n\t\t\tDragControl.destroyDrag(e);\n\t\t}\n\t\tDragControl._active = node;\n\n\t\tconst evobj = env[pointer].context(e);\n\t\tDragControl._start_pos = evobj;\n\t\tDragControl._saved_event = e;\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tDragControl._webix_drag_mm = event(document.body, env[pointer].move, e => DragControl._startDrag(e, pointer), passive);\n\t\tDragControl._webix_drag_mu = event(document, env[pointer].up, DragControl._preStartFalse);\n\n\t\t//need to run here, or will not work in IE\n\t\taddCss(document.body,\"webix_noselect\", 1);\n\t},\n\t//if mouse was released before moving - this is not a dnd, remove event handlers\n\t_preStartFalse:function(e){\n\t\tDragControl._clean_dom_after_drag();\n\t\tDragControl._touch_animation = !e.cancelable;\n\t},\n\t//mouse was moved without button released - dnd started, update event handlers\n\t_startDrag:function(e, pointer){\n\t\tconst touch = (pointer === \"touch\");\n\n\t\t// mouse: allow dnd only on left click\n\t\tif(!touch && DragControl._saved_event.button)\n\t\t\treturn;\n\n\t\t// check touch scroll animation\n\t\tDragControl._touch_animation = !e.cancelable;\n\t\tif (touch && DragControl._touch_animation){\n\t\t\tDragControl._clean_dom_after_drag();\n\t\t\treturn DragControl.destroyDrag(e);\n\t\t}\n\n\t\t//prevent unwanted dnd\n\t\tvar pos = env[pointer].context(e);\n\t\tvar master = DragControl._getActiveDragMaster();\n\n\t\t// only long-touched elements can be dragged\n\t\tvar longTouchLimit = (touch && master && master.$longTouchLimit && !Touch._long_touched);\n\t\tif (longTouchLimit || Math.abs(pos.x-DragControl._start_pos.x)<5 && Math.abs(pos.y-DragControl._start_pos.y)<5)\n\t\t\treturn;\n\n\t\tif (!DragControl._html && !DragControl.createDrag(DragControl._saved_event, pointer))\n\t\t\treturn DragControl._clean_dom_after_drag();\n\t\tDragControl._clean_dom_after_drag(true);\n\n\t\tDragControl.sendSignal(\"start\"); //useless for now\n\n\t\tif (touch) {\n\t\t\t// important: for touch events use e.target as EventTarget\n\t\t\tDragControl._webix_drag_mm = event(e.target, env[pointer].move, e => DragControl._moveDrag(e, pointer), { passive:false });\n\t\t\tDragControl._webix_drag_mu = event(e.target, env[pointer].up, DragControl._stopDrag);\n\t\t} else {\n\t\t\tDragControl._webix_drag_mm = event(document.body, env[pointer].move, e => DragControl._moveDrag(e, pointer));\n\t\t\tDragControl._webix_drag_mu = event(document, env[pointer].up, DragControl._stopDrag);\n\t\t}\n\t\tDragControl._moveDrag(e, pointer, true);\n\t},\n\t//mouse was released while dnd is active - process target\n\t_stopDrag:function(e){\n\t\tDragControl._clean_dom_after_drag();\n\t\tDragControl._saved_event = null;\n\n\t\tif (DragControl._last && e){\t//if some drop target was confirmed\n\t\t\tDragControl.$drop(DragControl._active, DragControl._last, e);\n\t\t\tDragControl.$dragOut(DragControl._active, DragControl._last, null, e);\n\t\t}\n\t\tDragControl.destroyDrag(e);\n\t\tDragControl.sendSignal(\"stop\");\t//useless for now\n\t},\n\t_clean_dom_after_drag:function(still_drag){\n\t\tthis._webix_drag_mm = eventRemove(this._webix_drag_mm);\n\t\tthis._webix_drag_mu = eventRemove(this._webix_drag_mu);\n\t\tif (!still_drag)\n\t\t\tremoveCss(document.body,\"webix_noselect\");\n\t},\n\t//dnd is active and mouse position was changed\n\t_moveDrag:function(e, pointer, first){\n\t\tvar dragCtrl = DragControl;\n\t\tvar pos = getPos(e);\n\n\t\t//give possibility to customize drag position\n\t\tvar customPos = dragCtrl.$dragPos(pos, e);\n\t\t//adjust drag marker position\n\t\tvar ctx = dragCtrl._drag_context;\n\t\tdragCtrl._html.style.top=pos.y+dragCtrl.top+(customPos||!ctx.y_offset?0:ctx.y_offset) +\"px\";\n\t\tdragCtrl._html.style.left=pos.x+dragCtrl.left+(customPos||!ctx.x_offset?0:ctx.x_offset)+\"px\";\n\n\t\t// check landing at least once\n\t\tif (first) dragCtrl._skip = false;\n\n\t\tif (dragCtrl._skip)\n\t\t\tdragCtrl._skip = false;\n\t\telse {\n\t\t\tlet evobj = e;\n\t\t\tif (pointer === \"touch\"){\n\t\t\t\tconst scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\t\t\t\tconst scrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\n\t\t\t\tconst context = env[pointer].context(e);\n\t\t\t\tconst target = document.elementFromPoint(context.x - scrollLeft, context.y - scrollTop);\n\t\t\t\tevobj = new Proxy(e, {\n\t\t\t\t\tget: function(obj, prop){\n\t\t\t\t\t\tif (prop === \"target\"){\n\t\t\t\t\t\t\treturn target;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst res = obj[prop];\n\t\t\t\t\t\tif (typeof res === \"function\"){\n\t\t\t\t\t\t\treturn res.bind(e);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tdragCtrl._checkLand((evobj.target), evobj);\n\t\t}\n\t\t\n\t\treturn preventEvent(e);\n\t},\n\t//check if item under mouse can be used as drop landing\n\t_checkLand:function(node,e){\n\t\twhile (node && node.tagName!=\"BODY\"){\n\t\t\tif (node.webix_drop){\t//if drop area registered\n\t\t\t\tif (this._last && (this._last!=node || node.webix_master))\t//if this area with complex dnd master\n\t\t\t\t\tthis.$dragOut(this._active,this._last,node,e);\t\t\t//inform master about possible mouse-out\n\t\t\t\tif (!this._last || this._last!=node || node.webix_master){\t//if this is new are or area with complex dnd master\n\t\t\t\t\tthis._last=null;\t\t\t\t\t\t\t\t\t\t//inform master about possible mouse-in\n\t\t\t\t\tthis._landing=this.$dragIn(DragControl._active,node,e);\n\t\t\t\t\tif (this._landing)\t//landing was rejected\n\t\t\t\t\t\tthis._last=node;\n\t\t\t\t\treturn;\t\t\t\t\n\t\t\t\t} \n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode=node.parentNode;\n\t\t}\n\t\tif (this._last)\t//mouse was moved out of previous landing, and without finding new one \n\t\t\tthis._last = this._landing = this.$dragOut(this._active,this._last,null,e);\n\t},\n\t//mostly useless for now, can be used to add cross-frame dnd\n\tsendSignal:function(signal){\n\t\tDragControl.active=(signal==\"start\");\n\t\tcallEvent(\"onDragMode\", [signal]);\n\t},\n\t\n\t//return master for html area\n\tgetMaster:function(t){\n\t\treturn this._drag_masters[t.webix_drag||t.webix_drop];\n\t},\n\t//return dhd-context object\n\tgetContext:function(){\n\t\treturn this._drag_context;\n\t},\n\tgetNode:function(){\n\t\treturn this._html;\n\t},\n\t//called when dnd is initiated, must create drag representation\n\tcreateDrag:function(e, pointer){\n\t\tvar a = DragControl._active;\n\n\t\tDragControl._drag_context = {};\n\t\tvar master = this._drag_masters[a.webix_drag];\n\t\tvar drag_container;\n\n\t\t//if custom method is defined - use it\n\t\tif (master.$dragCreate){\n\t\t\tdrag_container = master.$dragCreate(a,e,pointer);\n\t\t\tif (!drag_container) return false;\n\t\t\tthis._setDragOffset(e);\n\t\t\tdrag_container.style.position = \"absolute\";\n\t\t} else {\n\t\t//overvise use default one\n\t\t\tvar text = DragControl.$drag(a,e,pointer);\n\t\t\tDragControl._setDragOffset(e);\n\n\t\t\tif (!text) return false;\n\t\t\tdrag_container = document.createElement(\"DIV\");\n\t\t\tdrag_container.innerHTML=text;\n\t\t\tdrag_container.className=\"webix_drag_zone\";\n\t\t\tdocument.body.appendChild(drag_container);\n\n\t\t\tvar context = DragControl._drag_context;\n\t\t\tif (context.html){\n\t\t\t\tcontext.x_offset = -Math.round(drag_container.offsetWidth  * 0.5);\n\t\t\t\tcontext.y_offset = -Math.round(drag_container.offsetHeight * 0.75);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t\tdragged item must have topmost z-index\n\t\t\tin some cases item already have z-index\n\t\t\tso we will preserve it if possible\n\t\t*/\n\t\tdrag_container.style.zIndex = Math.max(drag_container.style.zIndex,zIndex());\n\n\t\tDragControl._skipDropH = event(drag_container, env[pointer].move, DragControl._skip_mark);\n\n\t\tif (!DragControl._drag_context.from)\n\t\t\tDragControl._drag_context = {source:a, from:a};\n\t\t\n\t\tDragControl._html = drag_container;\n\t\treturn true;\n\t},\n\t//helper, prevents unwanted mouse-out events\n\t_skip_mark:function(){\n\t\tDragControl._skip = true;\n\t},\n\t//after dnd end, remove all traces and used html elements\n\tdestroyDrag:function(e){\n\t\tvar a = DragControl._active;\n\t\tvar master = this._drag_masters[a.webix_drag];\n\n\t\tif (DragControl._skipDropH)\n\t\t\tDragControl._skipDropH = eventRemove(DragControl._skipDropH);\n\t\t\n\t\tif (master && master.$dragDestroy){\n\t\t\tif(DragControl._html)\n\t\t\t\tmaster.$dragDestroy(a,DragControl._html,e);\n\t\t} else\n\t\t\tremove(DragControl._html);\n\n\t\tif (master && master._auto_scroll_delay)\n\t\t\tmaster._auto_scroll_delay = window.clearTimeout(master._auto_scroll_delay);\n\n\t\tif (DragControl._dropHTML)\n\t\t\tremove(DragControl._dropHTML);\n\n\t\tDragControl._landing=DragControl._active=DragControl._last=DragControl._html=DragControl._dropHTML=null;\n\t\tDragControl._drag_context = null;\n\t},\n\t_getActiveDragMaster: function(){\n\t\treturn DragControl._drag_masters[DragControl._active.webix_drag];\n\t},\n\ttop:0,\t //relative position of drag marker to mouse cursor\n\tleft:0,\n\t_setDragOffset:function(e){\n\t\tconst pos = DragControl._start_pos;\n\t\tconst ctx = DragControl._drag_context;\n\n\t\tif(typeof ctx.x_offset != \"undefined\" && typeof ctx.y_offset != \"undefined\")\n\t\t\treturn null;\n\n\t\tctx.x_offset = ctx.y_offset = 0;\n\t\tconst m = DragControl._getActiveDragMaster();\n\t\tif (m._getDragItemPos && m !== this){\n\t\t\tconst itemPos = m._getDragItemPos(pos,e);\n\t\t\tif (itemPos){\n\t\t\t\tctx.x_offset = itemPos.x - pos.x;\n\t\t\t\tctx.y_offset = itemPos.y - pos.y;\n\t\t\t}\n\t\t}\n\t},\n\t$dragPos:function(pos, e){\n\t\tvar m=this._drag_masters[DragControl._active.webix_drag];\n\t\tif (m.$dragPos && m!=this){\n\t\t\tm.$dragPos(pos, e, DragControl._html);\n\t\t\treturn true;\n\t\t}\n\t},\n\t//called when mouse was moved in drop area\n\t$dragIn:function(s,t,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tif (m.$dragIn && m!=this) return m.$dragIn(s,t,e);\n\t\tt.className=t.className+\" webix_drop_zone\";\n\t\treturn t;\n\t},\n\t//called when mouse was moved out drop area\n\t$dragOut:function(s,t,n,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tif (m.$dragOut && m!=this) return m.$dragOut(s,t,n,e);\n\t\tt.className=t.className.replace(\"webix_drop_zone\",\"\");\n\t\treturn null;\n\t},\n\t//called when mouse was released over drop area\n\t$drop:function(s,t,e){\n\t\tvar m=this._drag_masters[t.webix_drop];\n\t\tDragControl._drag_context.from = DragControl.getMaster(s);\n\t\tif (m.$drop && m!=this) return m.$drop(s,t,e);\n\t\tt.appendChild(s);\n\t},\n\t//called when dnd just started\n\t$drag:function(s,e,p){\n\t\tvar m=this._drag_masters[s.webix_drag];\n\t\tif (m.$drag && m!=this) return m.$drag(s,e,p);\n\t\treturn \"<div style='\"+s.style.cssText+\"'>\"+s.innerHTML+\"</div>\";\n\t}\t\n};\n\n//global touch-drag handler\nattachEvent(\"onLongTouch\", function(ev){\n\tconst active = DragControl._active;\n\tif(!DragControl._touch_animation && active && active.contains(ev.target))\n\t\tDragControl._createTouchDrag(ev, \"touch\");\n});\n\n\nexport default DragControl;","import {pos as getPos, offset} from \"../webix/html\";\nimport {protoUI, ui, $$} from \"../ui/core\";\nimport animate from \"../webix/animate\";\nimport {$active} from \"../webix/skin\";\n\nimport state from \"../core/state\";\nimport env from \"../webix/env\";\nimport UIManager from \"../core/uimanager\";\nimport Destruction from \"../core/destruction\";\n\nimport {zIndex} from \"../ui/helpers\";\nimport {toNode, delay, clone, uid, extend} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent, attachEvent} from \"../webix/customevents\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport Movable from \"../core/movable\";\nimport Modality from \"../core/modality\";\nimport ResizeArea from \"../core/resizearea\";\n\nimport baseview from \"./baseview\";\nimport base from \"./view\";\n\nconst api = {\n\tname:\"window\",\n\n\t$init:function(config){\n\t\tthis._viewobj.innerHTML = \"<div class='webix_win_content'><div class='webix_win_head'></div><div class='webix_win_body'></div></div>\";\n\n\t\tthis._contentobj = this._viewobj.firstChild;\n\t\tthis._headobj = this._contentobj.childNodes[0];\n\t\tthis._dataobj = this._bodyobj = this._contentobj.childNodes[1];\n\t\tthis._viewobj.className +=\" webix_window\";\n\n\t\tthis._viewobj.setAttribute(\"role\", \"dialog\");\n\t\tthis._viewobj.setAttribute(\"tabindex\", \"0\");\n\n\t\tthis._head_cell = this._body_cell = null;\n\t\tthis._settings._inner = {top:false, left:false, right:false, bottom:false }; //set border flags\n\t\tif (!config.id) config.id = uid();\n\n\t\t_event(this._contentobj, \"click\", this._ignore_clicks, {bind:this});\n\t\t_event(this._contentobj, \"click\", function(){\n\t\t\t// brings a window to the front of other windows\n\t\t\tif(!this._settings.zIndex && this._settings.toFront){\n\t\t\t\tthis._viewobj.style.zIndex = zIndex();\n\t\t\t}\n\t\t}, {bind:this, capture:true});\n\n\t\t// hidden_setter handling\n\t\tif(config.modal)\n\t\t\tthis._modal = true;\n\t\t// head_setter handling\n\t\tif(config.headHeight)\n\t\t\tthis._settings.headHeight = config.headHeight;\n\t\tif(config.close)\n\t\t\tthis._settings.close = config.close;\n\n\t\tthis.attachEvent(\"onViewMoveEnd\", function(){\n\t\t\tif(this._settings.position)\n\t\t\t\tdelete this._settings.position;\n\t\t});\n\t},\n\t_ignore_clicks:function(e){\n\t\tconst popups = state._popups;\n\t\tlet index = popups.find(this);\n\t\tif (index == -1)\n\t\t\tindex = popups.length - 1;\n\n\t\te.click_view = index;\n\t},\n\tgetChildViews:function(){\n\t\tif (this._head_cell)\n\t\t\treturn [this._head_cell, this._body_cell];\n\t\telse\n\t\t\treturn [this._body_cell];\n\t},\n\tzIndex_setter:function(value){\n\t\tthis._viewobj.style.zIndex = value;\n\t\treturn value;\n\t},\n\t_remove:function(){ \n\t\tthis.body_setter();\n\t},\n\t_replace:function(new_view, old_view){\n\t\told_view = old_view || this._body_cell;\n\t\tconst isBody = old_view == this._body_cell;\n\n\t\told_view.destructor();\n\n\t\tif(isBody)\n\t\t\tthis._body_cell = new_view;\n\t\telse \n\t\t\tthis._head_cell = new_view;\n\n\t\t(isBody ? this._bodyobj : this._headobj).appendChild(new_view._viewobj);\n\n\t\tconst cell = new_view._viewobj.style;\n\n\t\tlet settings = { top:true, left:true, right:true, bottom:true };\n\t\tlet size = \"0px\";\n\n\t\tif(new_view.config.borderless === false){\n\t\t\tsettings = clone(this._settings._inner);\n\t\t\tsize = \"1px\";\n\t\t}\n\t\tnew_view._settings._inner = settings;\n\t\tcell.borderTopWidth = cell.borderBottomWidth = cell.borderLeftWidth = cell.borderRightWidth = size;\n\n\t\tthis.resize(true);\n\t},\n\tshow:function(node, mode, point){\n\t\tif (node === true){\n\t\t\t//recursive call from some child item\n\t\t\tif (!this._settings.hidden)\n\t\t\t\treturn;\n\t\t\tnode = null;\n\t\t}\n\n\t\tif(!this.callEvent(\"onBeforeShow\",arguments))\n\t\t\treturn false;\n\n\t\tthis._settings.hidden = false;\n\t\tthis._viewobj.style.zIndex = zIndex(this._settings.zIndex);\n\t\tif (this._settings.modal || this._modal){\n\t\t\tthis._modal_set(true);\n\t\t\tthis._modal = null; // hidden_setter handling\n\t\t}\n\n\t\tlet elPos, dx, dy;\n\t\tmode = mode || {};\n\t\tif (!mode.pos)\n\t\t\tmode.pos = this._settings.relative;\n\n\t\t//get position of source html node\n\t\t//we need to show popup which pointing to that node\n\t\tif (node){\n\t\t\t//if event was provided - get node info from it\n\t\t\tif (typeof node == \"object\" && !node.tagName){\n\t\t\t\t/*below logic is far from ideal*/\n\t\t\t\tif (node.target){\n\t\t\t\t\telPos = getPos(node);\n\t\t\t\t\tdx = 20;\n\t\t\t\t\tdy = 5;\n\t\t\t\t} else\n\t\t\t\t\telPos = node;\n\t\t\t} else {\n\t\t\t\tnode = toNode(node);\n\t\t\t\tassert(node,\"Not existing target for window:show\");\n\t\t\t\telPos = offset(node);\n\t\t\t}\n\n\t\t\t//size of body, we need to fit popup inside\n\t\t\tconst x = Math.max(window.innerWidth || 0, document.body.offsetWidth);\n\t\t\tconst y = Math.max(window.innerHeight || 0, document.body.offsetHeight);\n\n\t\t\t//size of node, near which popup will be rendered\n\t\t\tdx = dx || node.offsetWidth  || 0;\n\t\t\tdy = dy || node.offsetHeight || 0;\n\t\t\t//size of popup element\n\t\t\tconst size = this._last_size;\n\n\t\t\tlet fin_x = elPos.x;\n\t\t\tlet fin_y = elPos.y;\n\t\t\tlet point_y = 0;\n\t\t\tlet point_x = 0;\n\t\t\tlet scrollLeft = 0, scrollTop = 0;\n\t\t\tconst fit = this._settings.autofit;\n\t\t\tif (fit){\n\t\t\t\tconst nochange = (fit === \"node\");\n\t\t\t\tlet delta_x = 6, delta_y = 6, delta_point = 6;\n\t\t\t\tif (!this._settings.point)\n\t\t\t\t\tdelta_x = delta_y = delta_point = 0;\n\n\t\t\t\t//default pointer position - top \n\t\t\t\tpoint = \"top\";\n\t\t\t\tfin_y=0; fin_x = 0;\n\n\t\t\t\tscrollLeft = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft;\n\t\t\t\t//if we want to place menu at righ, but there is no place move it to left instead\n\t\t\t\tif (x - elPos.x - dx < size[0] && mode.pos == \"right\" && !nochange)\n\t\t\t\t\tmode.pos = \"left\";\n\n\t\t\t\tif (mode.pos == \"right\"){\n\t\t\t\t\tfin_x = elPos.x+delta_x+dx; \n\t\t\t\t\tdelta_y = -dy;\n\t\t\t\t\tpoint = \"left\";\n\t\t\t\t\tpoint_y = Math.round(elPos.y+dy/2);\n\t\t\t\t\tpoint_x = fin_x - delta_point;\n\t\t\t\t} else if (mode.pos == \"left\"){\n\t\t\t\t\tfin_x = elPos.x-delta_x-size[0]-1;\n\t\t\t\t\tdelta_y = -dy;\n\t\t\t\t\tpoint = \"right\";\n\t\t\t\t\tpoint_y = Math.round(elPos.y+dy/2);\n\t\t\t\t\tpoint_x = fin_x + size[0]+1;\n\t\t\t\t} else  {\n\t\t\t\t\t//left border of screen\n\t\t\t\t\tif (elPos.x < scrollLeft){\n\t\t\t\t\t\tfin_x = scrollLeft;\n\t\t\t\t\t//popup exceed the right border of screen\n\t\t\t\t\t} else if (x+scrollLeft-elPos.x > size[0]){\n\t\t\t\t\t\tfin_x = elPos.x; //aligned\n\t\t\t\t\t} else{\n\t\t\t\t\t\tfin_x = x+scrollLeft-delta_x-size[0]; //not aligned\n\t\t\t\t\t}\n\n\t\t\t\t\tpoint_x = Math.round(elPos.x+dx/2);\n\t\t\t\t\t//when we have a small popup, point need to be rendered at center of popup\n\t\t\t\t\tpoint_x = Math.min(point_x, fin_x + size[0] - delta_point*3);\n\t\t\t\t}\n\n\t\t\t\t//if height is not fixed - use default position\n\t\t\t\tscrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop;\n\t\t\t\tif (((!size[1] || (y+scrollTop-dy-elPos.y-delta_y > size[1])) || nochange) && mode.pos != \"top\"){\n\t\t\t\t\t//bottom\t\n\t\t\t\t\tfin_y = dy+elPos.y+delta_y - (!this._settings.point ? 0: 4);\n\t\t\t\t\tif (!point_y){\n\t\t\t\t\t\tpoint = \"top\";\n\t\t\t\t\t\tpoint_y = fin_y-delta_point;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t//top\n\t\t\t\t\tfin_y = elPos.y-delta_y - size[1];\n\t\t\t\t\tif (fin_y < 0){\n\t\t\t\t\t\tfin_y = 0; \n\t\t\t\t\t\t//left|right point can be used, but there is no place for top point\n\t\t\t\t\t\tif (point == \"top\") point = false;\n\t\t\t\t\t} else if (!point_y){\n\t\t\t\t\t\tpoint = \"bottom\";\n\t\t\t\t\t\tfin_y --;\n\t\t\t\t\t\tpoint_y = fin_y+size[1]+1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst deltax = (mode.x || 0);\n\t\t\tconst deltay = (mode.y || 0);\n\n\t\t\tconst fixed = this._checkFixedPosition();\n\t\t\tthis.$view.style.position = fixed ? \"fixed\" : \"absolute\";\n\t\t\tif (fixed){\n\t\t\t\tfin_y = fin_y - scrollTop;\n\t\t\t\tpoint_y = point_y - scrollTop;\n\t\t\t}\n\n\t\t\tthis.setPosition(fin_x+deltax, fin_y+deltay);\n\t\t\tif (this._set_point){\n\t\t\t\tif (point && this._settings.point)\n\t\t\t\t\tthis._set_point(point,point_x+deltax, point_y+deltay, fixed);\n\t\t\t\telse\n\t\t\t\t\tthis._hide_point();\n\t\t\t}\n\t\t} else\n\t\t\tthis._setPosition(this._settings.left, this._settings.top);\n\n\t\tthis._viewobj.style.display = \"block\";\n\t\tthis._hide_timer = 1;\n\t\tdelay(function(){ this._hide_timer = 0; }, this, [], (env.fastClick ? 100 : 400));\n\n\t\tthis._render_hidden_views();\n\n\t\tif (this.config.autofocus){\n\t\t\tthis._prev_focus = UIManager.getFocus();\n\t\t\tUIManager.setFocus(this);\n\t\t}\n\n\t\tif (-1 == state._popups.find(this))\n\t\t\tstate._popups.push(this);\n\n\t\tthis.callEvent(\"onShow\",[]);\n\t}, \n\t_hide:function(e){\n\t\t//do not hide modal windows\n\t\tif (this._settings.hidden || this._settings.modal || !this._settings.escHide || this._hide_timer) return;\n\t\t//do not hide submenu when clicking on menu folder\n\t\tif (e && e.showpopup && (e.showpopup == this._settings.id || (this.getTopMenu && this.getTopMenu()._settings.id == e.showpopup))) return;\n\t\t//do not hide popup, when starting dnd with a long touch\n\t\tif (e && env.touch && e.longtouch_drag) return;\n\t\t//do not hide popup, when we have modal layer above the popup\n\t\tif (state._modality.length && this._viewobj.style.zIndex <= Math.max(...state._modality)) return;\n\n\t\t//ignore inside clicks and clicks in child-popups\n\n\t\tif (e){\n\t\t\tlet index = e.click_view;\n\t\t\tif (!index && index !== 0) index = -1;\n\n\t\t\tconst myindex = state._popups.find(this);\n\n\t\t\tif (myindex <= index) return;\n\t\t}\n\n\t\tthis._hide_single();\n\t},\n\thidden_setter:function(value){\n\t\tif(value) \n\t\t\tthis.hide();\n\t\telse\n\t\t\tthis.show();\n\t\treturn !!value;\n\t},\n\thide:function(){\n\t\tconst index = this._hide_single();\n\t\tthis._hide_sub_popups(index);\n\t},\n\t_hide_single:function(){\n\t\tif (this.$destructed || this._settings.hidden) return;\n\n\t\tif (this._settings.modal)\n\t\t\tthis._modal_set(false);\n\n\t\tthis._hiding_process();\n\n\t\tif (this._settings.autofocus){\n\t\t\tconst el = document.activeElement;\n\t\t\t//as result of hotkey, we can have a activeElement set to document.body\n\t\t\tif (el && this._viewobj && (this._viewobj.contains(el) || el === document.body)){\n\t\t\t\tUIManager.setFocus(this._prev_focus);\n\t\t\t\tthis._prev_focus = null;\n\t\t\t}\n\t\t}\n\n\t\t// clear state\n\t\tconst index = state._popups.find(this);\n\t\tif (index > -1)\n\t\t\tstate._popups.removeAt(index);\n\n\t\treturn index;\n\t},\n\t_hiding_process:function(){\n\t\tif (this._settings.position == \"top\"){\n\t\t\tanimate(this._viewobj, {type: \"slide\", x:0, y:-(this._content_height+20), duration: 300,\n\t\t\t\tcallback:this._hide_callback, master:this});\n\t\t} else \n\t\t\tthis._hide_callback();\n\t},\n\t//hide all child-popups\n\t_hide_sub_popups:function(index){\n\t\tif (index > -1){\n\t\t\tconst order = state._popups;\n\t\t\tfor (let i=order.length-1; i>=index; i--)\n\t\t\t\tif (order[i]._hide_point)\t//hide only popups, skip windows\n\t\t\t\t\torder[i]._hide_single();\n\t\t}\n\t},\n\tdestructor: function() {\n\t\tthis.hide();\n\t\tDestruction.destructor.apply(this, []);\n\t},\n\t_hide_callback:function(){\n\t\tif (!this.$destructed){\n\t\t\tthis._viewobj.style.display = \"none\";\n\t\t\tthis._settings.hidden = true;\n\t\t\tthis.callEvent(\"onHide\",[]);\n\t\t}\n\t},\n\tclose:function(){\n\t\tthis.destructor(); \n\t},\n\t_inner_body_set:function(value){\n\t\tif (typeof value.borderless == \"undefined\")\n\t\t\tvalue.borderless = true;\n\t},\n\tbody_setter:function(value){\n\t\tif (typeof value != \"object\")\n\t\t\tvalue = {template:value };\n\t\tthis._inner_body_set(value);\n\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(value);\n\n\t\tthis._bodyobj.appendChild(this._body_cell._viewobj);\n\t\treturn value;\n\t},\n\thead_setter:function(value){\n\t\tif (value === false) return value;\n\n\t\tconst height = this._settings.headHeight;\n\t\tconst text = typeof value == \"string\";\n\t\tconst config = { height, padding:0, css: \"webix_win_title\", type:\"header\", borderless:true };\n\t\tif(text){\n\t\t\tthis._viewobj.setAttribute(\"aria-label\", value);\n\t\t\tvalue = { template:value };\n\t\t}\n\t\tif(value.view == \"template\" || (!value.view && value.template)){\n\t\t\textend(value, config);\n\t\t}\n\t\tif(text && this.config.close){\n\t\t\tvalue = { padding:{ left: $active.inputHeight+2, right:2 }, cols:[\n\t\t\t\tvalue,\n\t\t\t\t{ height, view:\"icon\", icon:\"wxi-close\", click:()=>{\n\t\t\t\t\tthis.hide();\n\t\t\t\t}}\n\t\t\t]};\n\t\t}\n\t\telse\n\t\t\textend(value, {borderless:true});\n\n\t\tstate._parent_cell = this;\n\t\tthis._head_cell = ui._view(value);\n\n\t\tconst template = this._head_cell._viewobj.querySelector(\".webix_win_title>div\");\n\t\tif(template)\n\t\t\ttemplate.style.lineHeight = height + \"px\";\n\n\t\tthis._headobj.appendChild(this._head_cell._viewobj);\n\t\treturn value;\n\t},\n\tgetBody:function(){\n\t\treturn this._body_cell;\n\t},\n\tgetHead:function(){\n\t\treturn this._head_cell;\n\t},\n\tadjust:function(){ return this.resize(); },\n\tresizeChildren:function(){\n\t\tif (this._body_cell)\n\t\t\tthis.resize();\n\t},\n\tresize:function(){\n\t\tbaseview.api.adjust.call(this);\n\t\tcallEvent(\"onResize\", []);\n\t\tif (this.isVisible()){\n\t\t\tthis._setPosition(this._settings.left, this._settings.top);\n\t\t}\n\t},\n\t_checkFixedPosition: function() {\n\t\tif(this._settings.master) {\n\t\t\tconst top = $$(this._settings.master).getTopParentView().$view;\n\t\t\treturn top && top.style.position === \"fixed\";\n\t\t}\n\t\treturn false;\n\t},\n\t_setPosition:function(x,y){\n\t\tif ((this._settings.position || this._checkFixedPosition())){\n\t\t\tthis.$view.style.position = \"fixed\";\n\n\t\t\tconst width = this._content_width;\n\t\t\tconst height = this._content_height;\n\t\t\tif (width <= 0 || height <= 0) return;\n\n\t\t\tconst maxWidth = (window.innerWidth||document.documentElement.offsetWidth);\n\t\t\tconst maxHeight = (window.innerHeight||document.documentElement.offsetHeight);\n\t\t\tlet left = Math.round((maxWidth-width)/2);\n\t\t\tlet top = Math.round((maxHeight-height)/2);\n\n\t\t\tif (typeof this._settings.position == \"function\"){\n\t\t\t\tconst state = { \tleft:left, top:top, \n\t\t\t\t\twidth:width, height:height, \n\t\t\t\t\tmaxWidth:maxWidth, maxHeight:maxHeight };\n\t\t\t\tthis._settings.position.call(this, state);\n\t\t\t\tif (state.width != width || state.height != height){\n\t\t\t\t\tthis._settings.width = state.width;\n\t\t\t\t\tthis._settings.height = state.height;\n\t\t\t\t\tthis.$setSize(state.width, state.height);\n\t\t\t\t}\n\t\t\t\tthis.setPosition(state.left, state.top);\n\t\t\t} else {\n\t\t\t\tif (this._settings.position == \"top\"){\n\t\t\t\t\ttop = -1*height;\n\t\t\t\t}\n\t\t\t\t//popup inside a fixed win\n\t\t\t\tif(!this._settings.position){\n\t\t\t\t\tleft = this._settings.left || left;\n\t\t\t\t\ttop = this._settings.top || top;\n\t\t\t\t}\n\t\t\t\tthis.setPosition(left, top);\n\t\t\t}\n\n\t\t\tif (this._settings.position == \"top\")\n\t\t\t\tanimate(this._viewobj, {type: \"slide\", x:0, y:height-((this._settings.padding||0)*2), duration: 300 ,callback:this._topPositionCallback, master:this});\n\t\t} else \n\t\t\tthis.setPosition(x,y);\n\t},\n\t_topPositionCallback:function(node){\n\t\tanimate.clear(node);\n\t\tthis._settings.top=-((this._settings.padding||0)*2);\n\t\tthis.setPosition(this._settings.left, this._settings.top);\n\t},\n\tsetPosition:function(x,y){\n\t\tthis._viewobj.style.top = y+\"px\";\n\t\tthis._viewobj.style.left = x+\"px\";\n\t\tthis._settings.left = x; this._settings.top=y;\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\t\t//line between head and body\n\t\tif (this._settings.head)\n\t\t\tdy += 1;\n\n\t\tconst size =  this._body_cell.$getSize(0,0);\n\t\tlet headMinWidth = 0;\n\t\tif (this._head_cell){\n\t\t\tconst head_size = this._head_cell.$getSize(0,0);\n\t\t\tif (head_size[3]==head_size[2])\n\t\t\t\tthis._settings.headHeight = head_size[3];\n\t\t\tdy += this._settings.headHeight;\n\t\t\theadMinWidth = head_size[0];\n\t\t}\n\n\t\tif (this._settings.fullscreen){\n\t\t\tconst width = window.innerWidth || document.body.clientWidth;\n\t\t\tconst height = window.innerHeight || document.body.clientHeight;\n\t\t\treturn [width, width, height, height];\n\t\t}\n\n\t\t//get layout sizes\n\t\tconst self_size = base.api.$getSize.call(this, 0, 0);\n\n\t\t//use child settings if layout's one was not defined\n\t\tif (headMinWidth && size[1] > 100000)\n\t\t\tsize[0] = Math.max(headMinWidth, size[0]);\n\n\t\tself_size[1] = Math.min(self_size[1],(size[1]>=100000&&self_size[1]>=100000?Math.max(size[0], self_size[0]):size[1])+dx);\n\t\tself_size[3] = Math.min(self_size[3],(size[3]>=100000&&self_size[3]>=100000?Math.max(size[2], self_size[2]):size[3])+dy);\n\n\t\tself_size[0] = Math.min(Math.max(self_size[0],size[0] + dx), self_size[1]);\n\t\tself_size[2] = Math.min(Math.max(self_size[2],size[2] + dy), self_size[3]);\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tx = this._content_width;\n\t\ty = this._content_height;\n\t\tif (this._settings.head === false) {\n\t\t\tthis._headobj.style.display=\"none\";\n\t\t\tthis._body_cell.$setSize(x,y);\n\t\t} else { \n\t\t\tthis._head_cell.$setSize(x,this._settings.headHeight);\n\t\t\tthis._body_cell.$setSize(x,y-this._settings.headHeight);\n\t\t}\n\t},\n\t$skin:function(){\n\t\tthis.defaults.headHeight = $active.barHeight;\n\t},\n\tdefaults:{\n\t\ttop:0,\n\t\tleft:0,\n\t\tautofit:true,\n\t\trelative:\"bottom\",\n\t\tbody:\"\",\n\t\thead:\"\",\n\t\thidden: true,\n\t\tautofocus:true,\n\t\tminWidth:300,\n\t\tminHeight:200,\n\t\tescHide:true\n\t}\n};\n\n//global longtouch handler\nattachEvent(\"onLongTouch\", function(ev){\n\tif (!ev || !ev.target) return;\n\n\tlet view = $$(ev.target);\n\tif (view){\n\t\tview = view.queryView(a => !a.getParentView(), \"parent\")||view;\n\n\t\tconst popups = state._popups;\n\t\tconst index = popups.find(view);\n\t\tif (index !== -1) ev.click_view = index;\n\t}\n});\n\nconst view = protoUI(api, base.view, Movable, Modality, EventSystem, ResizeArea);\nexport default {api, view};","import state from \"../core/state\";\nimport UIManager from \"../core/uimanager\";\nimport {bind, delay} from \"../webix/helpers\";\nimport {event} from \"../webix/htmlevents\";\n\n\nconst clipbuffer = {\n\n\t_area: null,\n\t_blur_id: null,\n\t_ctrl: 0,\n\n\t/*! create textarea or returns existing\n\t **/\n\tinit: function() {\n\t\t// returns existing textarea\n\t\tif (this._area !== null)\n\t\t\treturn this._area;\n\n\t\tstate.destructors.push({ obj: this });\n\t\t// creates new textarea\n\t\tthis._area = document.createElement(\"textarea\");\n\t\tthis._area.className = \"webix_clipbuffer\";\n\t\tthis._area.setAttribute(/*@attr*/\"webixignore\", 1);\n\t\tthis._area.setAttribute(\"spellcheck\", \"false\");\n\t\tthis._area.setAttribute(\"autocapitalize\", \"off\");\n\t\tthis._area.setAttribute(\"autocorrect\", \"off\");\n\t\tthis._area.setAttribute(\"autocomplete\", \"off\");\n\t\tdocument.body.appendChild(this._area);\n\n\t\tevent(document.body, \"keydown\", bind(function(e){\n\t\t\tvar key = e.which || e.keyCode;\n\t\t\tvar ctrl = !!(e.ctrlKey || e.metaKey);\n\t\t\tif (key === 86 && ctrl){\n\t\t\t\tthis._area.value = \"\";\n\t\t\t\tdelay(this._paste, this, [e], 100);\n\t\t\t}\n\t\t}, this));\n\n\t\treturn this._area;\n\t},\n\tdestructor: function(){\n\t\tthis._area = null;\n\t},\n\t/*! set text into buffer\n\t **/\n\tset: function(text) {\n\t\tthis.init();\n\t\ttext = text === \"\" ? \"\\n\" : text;\n\t\tthis._area.value = text;\n\t\tthis.focus();\n\t},\n\t/*! select text in textarea\n\t **/\n\tfocus: function() {\n\t\t// if there is native browser selection, skip focus\n\t\tif(!this._isSelectRange()){\n\t\t\tthis.init();\n\t\t\tthis._area.focus();\n\t\t\tthis._area.select();\n\t\t}\n\n\t},\n\t/*! checks document selection\n\t **/\n\t_isSelectRange: function() {\n\t\tvar text = \"\";\n\t\tif (typeof window.getSelection != \"undefined\") {\n\t\t\ttext = window.getSelection().toString();\n\t\t} else if (typeof document.selection != \"undefined\" && document.selection.type == \"Text\") {\n\t\t\ttext = document.selection.createRange().text;\n\t\t}\n\t\treturn !!text;\n\t},\n\t/*! process ctrl+V pressing\n\t **/\n\t_paste: function(e) {\n\t\tvar trg = e.target;\n\t\tif (trg === this._area) {\n\t\t\tvar text = this._area.value;\n\t\t\tvar last_active = UIManager.getFocus();\n\t\t\tif (last_active && (!last_active.getEditor || !last_active.getEditor())){\n\t\t\t\tlast_active.callEvent(\"onPaste\", [text]);\n\t\t\t\tthis._area.select();\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default clipbuffer;","import {create, insertBefore, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport {extend, bind} from \"../webix/helpers\";\n\n\nconst CustomPrint = {\n\t$customPrint:function(options, htmlOnly){\n\t\tif(this._prePrint(options, htmlOnly))\n\t\t\treturn true;\n\n\t\tvar tableData = this._getTableArray(options);\n\t\tvar table = this._getTableHTML(tableData, options);\n\n\t\tif(htmlOnly)\n\t\t\treturn table;\n\n\t\tvar doc = create(\"div\", { \"class\":\"webix_ui_print\"});\n\t\tdoc.appendChild(table);\n\n\t\tinsertBefore(doc, options.docFooter, document.body);\n\t\twindow.print();\n\t\t\n\t\tremove(doc);\n\t},\n\t_prePrint:function(options, htmlOnly){\n\t\tif(!htmlOnly && (this.config.layout ==\"y\" || options.scroll || this.config.prerender || this.config.autoheight)) return true;\n\t\t\n\t\tif(this.config.layout ==\"x\")\n\t\t\textend(options || {}, {xCount:this.count(), nobreaks:true}, true);\n\t},\n\t_getPageWidth:function(options){\n\t\tvar size = options.size;\n\t\tvar width = size[options.mode == \"portrait\"?\"width\":\"height\"];\n\t\t\n\t\treturn Math.min(width*env.printPPI-2*env.printMargin);\n\t},\n\t_getTableArray:function(options, base, start){\n\t\tvar maxWidth = options.fit ==\"page\" ? Infinity : this._getPageWidth(options);\n\t\tvar xCount = options.xCount || this._getVisibleRange()._dx;\n\n\t\tvar tableArray = [];\n\t\tvar colrow = [];\n\t\tvar width = 0;\n\t\t\n\t\tvar newTableStart, rownum, colnum;\n\n\t\tstart = start || 0;\n\t\tbase = base || [];\n\n\t\tfor(var i = 0; i<this.data.order.length;){\n\t\t\tvar obj = this.data.pull[this.data.order[i]];\n\t\t\trownum = parseInt(i/xCount);\n\t\t\tcolnum = i-(rownum*xCount);\n\n\t\t\tif(obj && colnum>=start){\n\t\t\t\twidth += this.type.width;\n\t\t\t\t\n\t\t\t\t//start a new table, if cells do not fit page width\n\t\t\t\tif(width > maxWidth && colnum>start){ // 'colnum>start' ensures that a single long cell will have to fit the page\n\t\t\t\t\tnewTableStart = colrow.length+start;\n\t\t\t\t\ttableArray.push(colrow);\n\t\t\t\t\ti = i+(xCount-colrow.length);\n\t\t\t\t\tcolrow = [];\n\t\t\t\t\twidth = 0;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar cellValue = this.type.template(obj, this.type);\n\t\t\t\tvar className = this._itemClassName;\n\t\t\t\t\n\t\t\t\tvar style  = {\n\t\t\t\t\tdisplay:\"table-cell\",\n\t\t\t\t\theight:this.type.height + \"px\",\n\t\t\t\t\twidth:this.type.width + \"px\"\n\t\t\t\t};\n\t\t\t\t//push a cell to a row\n\t\t\t\tcolrow.push({\n\t\t\t\t\ttxt: cellValue,\n\t\t\t\t\tclassName: className+\" \"+(obj.$css || \"\"),\n\t\t\t\t\tstyle: style\n\t\t\t\t});\n\t\t\t\t//push a row to a table and start a new row\n\t\t\t\tif((i+1)%xCount === 0){\n\t\t\t\t\ttableArray.push(colrow);\n\t\t\t\t\tcolrow = [];\n\t\t\t\t\twidth = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\n\t\tbase.push(tableArray);\n\n\t\tif(newTableStart)\n\t\t\tthis._getTableArray(options, base, newTableStart);\t\n\n\t\treturn base;\n\t},\n\t_getTableHTML:function(tableData, options){\n\t\t\n\t\tvar container = create(\"div\");\n\n\t\ttableData.forEach(bind(function(table, i){\n\n\t\t\tvar tableHTML = create(\"table\", {\n\t\t\t\t\"class\":\"webix_table_print \"+this.$view.className,\n\t\t\t\t\"style\":\"border-collapse:collapse\"\n\t\t\t});\n\n\t\t\ttable.forEach(function(row){\n\t\t\t\tvar tr = create(\"tr\");\n\n\t\t\t\trow.forEach(function(column){\n\t\t\t\t\tvar td = create(\"td\");\n\n\n\t\t\t\t\tif (column.txt) td.innerHTML = column.txt;\n\t\t\t\t\tif (column.className) td.className = column.className;\n\t\t\t\t\tif (column.style) {\n\t\t\t\t\t\tvar keys = Object.keys(column.style);\n\t\t\t\t\t\tkeys.forEach(function(key){\n\t\t\t\t\t\t\tif (column.style[key])\n\t\t\t\t\t\t\t\ttd.style[key] = column.style[key];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif(column.span){\n\t\t\t\t\t\tif(column.span.colspan > 1)\n\t\t\t\t\t\t\ttd.colSpan = column.span.colspan;\n\t\t\t\t\t\tif(column.span.rowspan > 1)\n\t\t\t\t\t\t\ttd.rowSpan = column.span.rowspan;\n\t\t\t\t\t}\n\t\t\t\t\ttr.appendChild(td);\n\t\t\t\t});\n\t\t\t\ttableHTML.appendChild(tr);\n\t\t\t});\n\t\t\tcontainer.appendChild(tableHTML);\n\n\t\t\tif(!options.nobreaks && i+1 < tableData.length){\n\t\t\t\tvar br = create(\"DIV\", {\"class\":\"webix_print_pagebreak\"});\n\t\t\t\tcontainer.appendChild(br);\n\t\t\t}\n\t\t\t\n\t\t}, this));\n\n\t\treturn container;\n\t}\n};\n\nexport default CustomPrint;","import {pos as getPos, create, remove, removeCss, preventEvent, addCss} from \"../webix/html\";\nimport state from \"../core/state\";\nimport {$$} from \"../ui/core\";\nimport {delay} from \"../webix/helpers\";\n\nimport env from \"../webix/env\";\nimport {$active} from \"../webix/skin\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {attachEvent} from \"../webix/customevents\";\n\n\nconst CustomScroll = {\n\tscrollStep: 40,\n\tinit:function(){\n\t\tif (!env.scrollSize || env.$customScroll)\n\t\t\treturn !!env.$customScroll;\n\n\t\tthis.scrollStep = $active.rowHeight;\n\t\tenv.$customScroll = true;\n\t\tenv.scrollSize = 0;\n\n\t\tstate.destructors.push({\n\t\t\tobj:{\n\t\t\t\tdestructor:function(){\n\t\t\t\t\tthis._last_active_node = null;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tattachEvent(\"onReconstruct\", CustomScroll._on_reconstruct);\n\t\tattachEvent(\"onResize\", CustomScroll._on_reconstruct);\n\n\t\t//adjusts scroll after view repainting\n\t\t//for example, opening a branch in the tree\n\t\t//it will be better to handle onAfterRender of the related view\n\t\tattachEvent(\"onClick\", CustomScroll._on_reconstruct);\n\t\treturn env.$customScroll;\n\t},\n\tresize:function(){\n\t\tthis._on_reconstruct();\n\t},\n\t_enable_datatable:function(view){\n\t\tview._body._custom_scroll_view = view._settings.id;\n\t\tview.attachEvent(\"onAfterRender\", function(){\n\t\t\tvar scroll = CustomScroll._get_datatable_sizes(this);\n\t\t\tvar y = Math.max(scroll.dy - scroll.py, 0);\n\t\t\tvar x = Math.max(scroll.dx - scroll.px, 0);\n\n\t\t\tif (this._y_scroll && this._scrollTop > y){\n\t\t\t\tthis._y_scroll.scrollTo(y);\n\t\t\t}\n\t\t\telse if (this._x_scroll && this._scrollLeft > x){\n\t\t\t\tthis._x_scroll.scrollTo(x);\n\t\t\t}\n\n\t\t\tif (CustomScroll._last_active_node == this._body)\n\t\t\t\tCustomScroll._on_reconstruct();\n\t\t});\n\n\t\t_event(view._body, \"pointerover\", \tCustomScroll._mouse_in \t);\n\t\t_event(view._body, \"pointerout\", \tCustomScroll._mouse_out\t);\n\t\tif (env.touch){\n\t\t\tview.attachEvent(\"onTouchStart\", () => CustomScroll._touch_start(view._body));\n\t\t\tif (view.config.prerender)\n\t\t\t\tview.attachEvent(\"onSyncScroll\", () => CustomScroll._update_scroll(view._body));\n\t\t}\n\t},\n\tenable:function(view, mode){\n\t\tif (view.mapCells)\n\t\t\treturn this._enable_datatable(view);\n\n\t\tvar node = view;\n\t\tif (view._dataobj)\n\t\t\tnode = view._dataobj.parentNode;\n\n\t\tnode._custom_scroll_mode = mode||\"xy\";\n\t\tnode.className += \" webix_custom_scroll\";\n\n\t\t_event(node, \"pointerover\", CustomScroll._mouse_in \t);\n\t\t_event(node, \"pointerout\", \tCustomScroll._mouse_out\t);\n\t\t_event(node, \"wheel\", CustomScroll._mouse_wheel, { passive:false });\n\t\tif (env.touch)\n\t\t\t_event(node, \"scroll\", () => CustomScroll._update_scroll(node));\n\n\t\tthis._set_additional_handlers(view);\n\t},\n\t_on_reconstruct:function(){\n\t\tconst last = CustomScroll._last_active_node;\n\n\t\tif (last && last._custom_scroll_size){\n\t\t\tconst webixView = $$(last);\n\t\t\tconst scrolls = webixView ? webixView.queryView(view => {\n\t\t\t\tconst node = CustomScroll._getViewNode(view);\n\t\t\t\treturn node && node._custom_scroll_size;\n\t\t\t}, \"all\").map(view => CustomScroll._getViewNode(view)) : [];\n\n\t\t\tscrolls.push(last);\n\n\t\t\tscrolls.forEach(node => {\n\t\t\t\tCustomScroll._mouse_out_timed.call(node);\n\t\t\t\tCustomScroll._mouse_in.call(node, false);\n\t\t\t});\n\t\t}\n\t},\n\t_getViewNode(view){\n\t\treturn view._body || (view._dataobj && view._dataobj.parentNode) || view.$view;\n\t},\n\t_mouse_in:function(e){\n\t\tif (e && e.pointerType !== \"mouse\") return;\n\n\t\tCustomScroll._last_active_node = this;\n\t\tclearTimeout(this._mouse_out_timer);\n\n\t\tif (this.className.indexOf(\"webix_modalbox_inside\") != -1) return;\n\t\tif (this._custom_scroll_size || CustomScroll._active_drag_area) return;\n\n\t\tvar view = $$(this);\n\t\tif (view && !view.isEnabled()) return;\n\n\t\tvar sizes;\n\t\tif (this._custom_scroll_view){\n\t\t\t//ger related view\n\t\t\tview = $$(this._custom_scroll_view);\n\t\t\t//if view was removed, we need not scroll anymore\n\t\t\tif (!view) return;\n\t\t\tsizes = CustomScroll._get_datatable_sizes(view);\n\t\t} else {\n\t\t\tsizes = {\n\t\t\t\tdx:this.scrollWidth,\n\t\t\t\tdy:this.scrollHeight,\n\t\t\t\tpx:this.clientWidth,\n\t\t\t\tpy:this.clientHeight\n\t\t\t};\n\t\t\tsizes._scroll_x = sizes.dx > sizes.px && this._custom_scroll_mode.indexOf(\"x\") != -1;\n\t\t\tsizes._scroll_y = sizes.dy > sizes.py && this._custom_scroll_mode.indexOf(\"y\") != -1;\n\t\t}\n\n\t\tthis._custom_scroll_size = sizes;\n\t\tif (sizes._scroll_x){\n\t\t\tsizes._scroll_x_node = CustomScroll._create_scroll(this, \"x\", sizes.dx, sizes.px, \"width\", \"height\");\n\t\t\tsizes._sx = (sizes.px - sizes._scroll_x_node.offsetWidth - 4);\n\t\t\tsizes._vx = sizes.dx - sizes.px;\n\t\t\tif(CustomScroll.trackBar)\n\t\t\t\tsizes._bar_x = CustomScroll._create_bar(this,\"x\");\n\t\t}\n\t\tif (sizes._scroll_y){\n\t\t\tsizes._scroll_y_node = CustomScroll._create_scroll(this, \"y\", sizes.dy, sizes.py, \"height\", \"width\");\n\t\t\tsizes._sy = (sizes.py - sizes._scroll_y_node.offsetHeight - 4);\n\t\t\tsizes._vy = sizes.dy - sizes.py;\n\n\t\t\tif(CustomScroll.trackBar)\n\t\t\t\tsizes._bar_y = CustomScroll._create_bar(this,\"y\");\n\t\t}\n\n\t\tCustomScroll._update_scroll(this);\n\t},\n\t_create_bar: function(node, mode){\n\t\tvar bar = create(\"DIV\", {\n\t\t\t/*@attr*/\"webixignore\":\"1\",\n\t\t\t\"class\":\"webix_c_scroll_bar_\"+mode\n\t\t},\"\");\n\n\t\tnode.appendChild(bar);\n\t\treturn bar;\n\t},\n\t_adjust_scroll:function(node, old, pos){\n\t\tvar config = node._custom_scroll_size;\n\t\tvar view = node._custom_scroll_view;\n\t\tif (view) view = $$(view);\n\n\t\tif (config._scroll_x_node == node._scroll_drag_enabled){\n\t\t\tlet next = (pos.x - old.x)*config._vx/config._sx;\n\t\t\tif (view)\n\t\t\t\tview._x_scroll.scrollTo(view._scrollLeft+next);\n\t\t\telse\n\t\t\t\tCustomScroll._set_scroll_value(node, \"scrollLeft\", next);\n\t\t}\n\t\tif (config._scroll_y_node == node._scroll_drag_enabled){\n\t\t\tlet next = (pos.y - old.y)*config._vy/config._sy;\n\t\t\tif (view)\n\t\t\t\tview._y_scroll.scrollTo(view._scrollTop+next);\n\t\t\telse\n\t\t\t\tCustomScroll._set_scroll_value(node, \"scrollTop\", next);\n\t\t}\n\n\t\tnode._scroll_drag_pos = pos;\n\t\tCustomScroll._update_scroll(node);\n\t},\n\t_get_datatable_sizes:function(view){\n\t\tvar sizes = {};\n\t\tif (view._x_scroll && view._settings.scrollX){\n\t\t\tsizes.dx = view._x_scroll.getSize();\n\t\t\tsizes.px = view._x_scroll._last_set_size || 1;\n\t\t\tsizes._scroll_x = sizes.dx - sizes.px > 1;\n\t\t}\n\t\tif (view._y_scroll && view._settings.scrollY){\n\t\t\tsizes.dy = view._y_scroll.getSize();\n\t\t\tsizes.py = view._y_scroll._last_set_size || 1;\n\t\t\tsizes._scroll_y = sizes.dy - sizes.py > 1;\n\t\t}\n\t\treturn sizes;\n\t},\n\t_mouse_out:function(e){\n\t\tif (e && e.pointerType !== \"mouse\") return;\n\n\t\tclearTimeout(this._mouse_out_timer);\n\t\tthis._mouse_out_timer = delay(CustomScroll._mouse_out_timed, this, [], 200);\n\t},\n\t_removeScroll:function(scroll){\n\t\tif (scroll){\n\t\t\tremove(scroll);\n\t\t\teventRemove(scroll._webix_event_sc1);\n\t\t\teventRemove(scroll._webix_event_sc2);\n\t\t}\n\t},\n\t_mouse_out_timed:function(){\n\t\tif (this._custom_scroll_size){\n\t\t\tif (this._scroll_drag_enabled){\n\t\t\t\tthis._scroll_drag_released = true;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sizes = this._custom_scroll_size;\n\t\t\tCustomScroll._removeScroll(sizes._scroll_x_node);\n\t\t\tCustomScroll._removeScroll(sizes._scroll_y_node);\n\n\t\t\tif (sizes._bar_x) remove(sizes._bar_x);\n\t\t\tif (sizes._bar_y) remove(sizes._bar_y);\n\n\t\t\tthis._custom_scroll_size = null;\n\t\t}\n\t},\n\t_mouse_wheel:function(e){\n\t\tif (e.ctrlKey) return false;\n\n\t\tlet toblock = false;\n\t\tconst step = e.deltaMode === 0 ? 30 : 1;\n\t\tconst sizes = this._custom_scroll_size;\n\t\tif (sizes){\n\t\t\tconst forceX = !sizes._scroll_y || e.shiftKey;\n\t\t\tif ((e.deltaX && Math.abs(e.deltaX) > Math.abs(e.deltaY)) || forceX){\n\t\t\t\tconst x_dir = (forceX ? e.deltaY : e.deltaX) / step;\n\t\t\t\t//x-scroll\n\t\t\t\tif (sizes._scroll_x_node)\n\t\t\t\t\ttoblock = CustomScroll._set_scroll_value(this, \"scrollLeft\", x_dir*CustomScroll.scrollStep);\n\t\t\t} else {\n\t\t\t\t//y-scroll\n\t\t\t\tif (sizes._scroll_y_node)\n\t\t\t\t\t//lesser flickering of scroll in IE\n\t\t\t\t\t//also prevent scrolling outside of borders because of scroll-html-elements\n\t\t\t\t\ttoblock = CustomScroll._set_scroll_value(this, \"scrollTop\", (e.deltaY/step)*CustomScroll.scrollStep);\n\t\t\t}\n\t\t}\n\n\t\tCustomScroll._update_scroll(this);\n\t\tif (toblock !== false)\n\t\t\treturn preventEvent(e);\n\t},\n\t_set_scroll_value:function(node, pose, value){\n\t\tconst sizes = node._custom_scroll_size;\n\t\tconst max_scroll = (pose == \"scrollLeft\") ? (sizes.dx - sizes.px) : (sizes.dy - sizes.py);\n\t\tconst now = node[pose];\n\n\t\tif (now + value > max_scroll)\n\t\t\tvalue = max_scroll - now;\n\t\tif (!value || (now + value < 0 && now === 0))\n\t\t\treturn false;\n\n\t\tif (env.isIE){\n\t\t\tCustomScroll._update_scroll(node, pose, value + now);\n\t\t\tnode[pose] += value;\n\t\t} else\n\t\t\tnode[pose] += value;\n\n\t\treturn true;\n\t},\n\t_create_scroll:function(node, mode, dy, py, dim){\n\t\tvar scroll = create(\"DIV\", {\n\t\t\t/*@attr*/\"webixignore\":\"1\",\n\t\t\t\"class\":\"webix_c_scroll_\"+mode\n\t\t},\"<div></div>\");\n\n\t\tscroll.style[dim] = Math.max((py*py/dy-7),40)+\"px\";\n\t\tscroll.style[dim == \"height\"?\"top\":\"left\"] = \"0px\";\n\t\tnode.style.position = \"relative\";\n\t\tnode.appendChild(scroll);\n\n\t\tnode._webix_event_sc1 = event(scroll, env.mouse.down, CustomScroll._scroll_drag(node, \"mouse\"));\n\t\tif (env.touch)\n\t\t\tnode._webix_event_sc2 = event(scroll, env.touch.down, CustomScroll._scroll_drag(node, \"touch\"));\n\n\t\treturn scroll;\n\t},\n\t_init_drag:function(e, pointer){\n\t\tif (pointer === \"touch\"){\n\t\t\tCustomScroll._drag_events = [\n\t\t\t\tevent(e.target, env[pointer].move, function(e){\n\t\t\t\t\tCustomScroll._adjust_scroll(CustomScroll._active_drag_area, CustomScroll._active_drag_area._scroll_drag_pos, getPos(e));\n\t\t\t\t}),\n\t\t\t\tevent(e.target, env[pointer].up, CustomScroll._scroll_drop)\n\t\t\t];\n\t\t} else {\n\t\t\tCustomScroll._drag_events = [\n\t\t\t\tevent(document.body, env[pointer].move, function(e){\n\t\t\t\t\tCustomScroll._adjust_scroll(CustomScroll._active_drag_area, CustomScroll._active_drag_area._scroll_drag_pos, getPos(e));\n\t\t\t\t}),\n\t\t\t\tevent(document, env[pointer].up, CustomScroll._scroll_drop),\n\t\t\t\tevent(document.body, \"mouseleave\", CustomScroll._scroll_drop)\n\t\t\t];\n\t\t}\n\t},\n\t_scroll_drag:function(node, pointer){\n\t\treturn function(e){\n\t\t\taddCss(document.body,\"webix_noselect\",1);\n\t\t\tthis.className += \" webix_scroll_active\";\n\t\t\tnode._scroll_drag_enabled = this;\n\t\t\tnode._scroll_drag_pos = getPos(e);\n\n\t\t\tCustomScroll._active_drag_area = node;\n\t\t\tCustomScroll._init_drag(e, pointer);\n\n\t\t\tif (e.cancelable) preventEvent(e);\n\t\t};\n\t},\n\t_scroll_drop:function(){\n\t\tconst node = CustomScroll._active_drag_area;\n\t\tif (node._scroll_drag_enabled){\n\t\t\tremoveCss(document.body,\"webix_noselect\");\n\t\t\tnode._scroll_drag_enabled.className = node._scroll_drag_enabled.className.toString().replace(\" webix_scroll_active\",\"\");\n\t\t\tnode._scroll_drag_enabled = false;\n\t\t\tCustomScroll._active_drag_area = false;\n\t\t\tif (node._scroll_drag_released){\n\t\t\t\tCustomScroll._mouse_out_timed.call(node);\n\t\t\t\tnode._scroll_drag_released = false;\n\t\t\t}\n\t\t}\n\n\t\tif (CustomScroll._drag_events){\n\t\t\tfor (let i=0; i<CustomScroll._drag_events.length; i++)\n\t\t\t\teventRemove(CustomScroll._drag_events[i]);\n\t\t\tCustomScroll._drag_events = null;\n\t\t}\n\t},\n\t_update_scroll:function(node, pose, value){\n\t\tvar sizes = node._custom_scroll_size;\n\t\tif (sizes && (sizes._scroll_x_node||sizes._scroll_y_node)){\n\t\t\tvar view = node._custom_scroll_view;\n\n\t\t\tvar left_scroll = pose === \"scrollLeft\" ? value : Math.round(node.scrollLeft);\n\t\t\tvar left = view ? $$(view)._scrollLeft : left_scroll;\n\t\t\tvar shift_left = view ? 0 : left;\n\n\t\t\tvar top_scroll = pose === \"scrollTop\" ? value : Math.round(node.scrollTop);\n\t\t\tvar top = view ? $$(view)._scrollTop : top_scroll;\n\t\t\tvar shift_top = view ? 0 : top;\n\n\t\t\tif (sizes._scroll_x_node){\n\t\t\t\tsizes._scroll_x_node.style.bottom = 1 - shift_top + \"px\";\n\t\t\t\tsizes._scroll_x_node.style.left = Math.round(sizes._sx*left/(sizes.dx-sizes.px)) + shift_left + 1 + \"px\";\n\t\t\t\tif (sizes._bar_x){\n\t\t\t\t\tsizes._bar_x.style.bottom = 1 - shift_top + \"px\";\n\t\t\t\t\tsizes._bar_x.style.left = shift_left + \"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (sizes._scroll_y_node){\n\t\t\t\tsizes._scroll_y_node.style.right = 0 - shift_left + \"px\";\n\t\t\t\tsizes._scroll_y_node.style.top = Math.round(sizes._sy*top/(sizes.dy-sizes.py)) + shift_top + 1 + \"px\";\n\t\t\t\tif (sizes._bar_y){\n\t\t\t\t\tsizes._bar_y.style.right = 0 - shift_left + \"px\";\n\t\t\t\t\tsizes._bar_y.style.top = shift_top + \"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_set_additional_handlers:function(view){\n\t\t// update scroll when showing view\n\t\tif (view.attachEvent){\n\t\t\tview.attachEvent(\"onViewShow\", () => this._resize_scroll(view));\n\t\t\tview.attachEvent(\"onAfterAutoScroll\", () => this._resize_scroll(view));\n\t\t\tif (view._level_up)\t\t// grouplist: resize scroll after animation\n\t\t\t\tview.attachEvent(\"onAfterRender\", () => this._resize_scroll(view));\n\t\t\tif (env.touch)\n\t\t\t\tview.attachEvent(\"onTouchStart\", () => this._touch_start(view._dataobj.parentNode));\n\t\t}\n\n\t\t// update scroll on data change\n\t\tif (view.data && view.data.attachEvent)\n\t\t\tview.data.attachEvent(\"onStoreUpdated\", () => this._resize_scroll(view));\n\t},\n\t_touch_start:function(current){\n\t\tconst node = CustomScroll._last_active_node;\n\t\tif (node !== current){\n\t\t\tif (node) CustomScroll._mouse_out.call(node, false);\n\t\t\tCustomScroll._mouse_in.call(current, false);\n\t\t}\n\t},\n\t_resize_scroll:function(view){\n\t\tconst node = CustomScroll._last_active_node;\n\t\tif (node && view.$view.contains(node))\n\t\t\tCustomScroll._on_reconstruct();\n\t\telse\n\t\t\tCustomScroll._mouse_out_timed.call(view._dataobj.parentNode);\n\t}\n};\n\nexport default CustomScroll;","import {assert} from \"../webix/debug\";\nimport CodeParser from \"../core/codeparser\";\nimport rules from \"../webix/rules\";\n\n\n\nconst ValidateData = {\n\t$init:function(){\n\t\tif(this._events)\n\t\t\tthis.attachEvent(\"onChange\",this.clearValidation);\n\t},\n\tclearValidation:function(){\n\t\tif(this.elements){\n\t\t\tfor(var id in this.elements){\n\t\t\t\tthis._clear_invalid(id);\n\t\t\t}\n\t\t}\n\t},\n\tvalidate:function(mode, obj) {\n\t\tassert(this.callEvent, \"using validate for eventless object\");\n\t\t\n\t\tthis.callEvent(\"onBeforeValidate\", []);\n\n\t\tvar failed = this._validate_details = {};\n\n\t\t//optimistic by default :) \n\t\tvar result =true;\n\t\tvar rules = this._settings.rules;\n\t\t\n\t\tvar isHidden = this.isVisible && !this.isVisible();\n\t\tvar validateHidden = mode && mode.hidden;\n\t\tvar validateDisabled = mode && mode.disabled;\n\n\t\t//prevent validation of hidden elements\n\t\tvar elements = {}, hidden = {};\n\t\tfor(var i in this.elements){\n\t\t\tvar name = this.elements[i].config.name;\n\t\t\t//we are ignoring hidden and disabled fields during validation\n\t\t\t//if mode doesn not instruct us otherwise\n\t\t\t//if form itself is hidden, we can't separate hidden fiels,\n\t\t\t//so we will vaidate all fields\n\t\t\tif((isHidden || this.elements[i].isVisible() || validateHidden) && (this.elements[i].isEnabled() || validateDisabled))\n\t\t\t\telements[name] = this.elements[i];\n\t\t\telse{\n\t\t\t\thidden[name]=true;\n\t\t\t}\n\t\t}\n\t\tif (rules || elements)\n\t\t\tif(!obj && this.getValues)\n\t\t\t\tobj = this.getValues();\n\n\t\tif (rules){\n\t\t\t//complex rule, which may chcek all properties of object\n\t\t\tif (rules.$obj)\n\t\t\t\tresult = this._validate(rules.$obj, obj, obj, \"\") && result;\n\t\t\t\n\t\t\t//all - applied to all fields\n\t\t\tvar all = rules.$all;\n\t\t\tvar data = obj;\n\n\t\t\tif (this._settings.complexData)\n\t\t\t\tdata = CodeParser.collapseNames(obj, \"\", {}, (v) => !rules[v]);\n\n\t\t\tif (all)\n\t\t\t\tfor (let key in obj){\n\t\t\t\t\tif(hidden[key]) continue;\n\t\t\t\t\tlet subresult = this._validate(all, data[key], obj, key);\n\t\t\t\t\tif (!subresult)\n\t\t\t\t\t\tfailed[key] = true;\n\t\t\t\t\tresult =  subresult && result;\n\t\t\t\t}\n\n\n\t\t\t//per-field rules\n\t\t\tfor (let key in rules){\n\t\t\t\tif(hidden[key]) continue;\n\t\t\t\tif (key.indexOf(\"$\")!==0 && !failed[key]){\n\t\t\t\t\tassert(rules[key], \"Invalid rule for:\"+key);\n\t\t\t\t\tlet subresult = this._validate(rules[key], data[key], obj, key);\n\t\t\t\t\tif (!subresult)\n\t\t\t\t\t\tfailed[key] = true;\n\t\t\t\t\tresult = subresult && result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//check personal validation rules\n\t\tif (elements){\n\t\t\tfor (var key in elements){\n\t\t\t\tif (failed[key]) continue;\n\n\t\t\t\tvar subview = elements[key];\n\t\t\t\tif (subview.validate){\n\t\t\t\t\tlet subresult = subview.validate();\n\t\t\t\t\tresult = subresult && result;\n\t\t\t\t\tif (!subresult)\n\t\t\t\t\t\tfailed[key] = true;\n\t\t\t\t} else {\n\t\t\t\t\tvar input = subview._settings;\n\t\t\t\t\tif (input){\t//ignore non webix inputs\n\t\t\t\t\t\tvar validator = input.validate;\n\t\t\t\t\t\tif (!validator && input.required)\n\t\t\t\t\t\t\tvalidator = rules.isNotEmpty;\n\n\t\t\t\t\t\tif (validator){\n\t\t\t\t\t\t\tlet subresult = this._validate(validator, obj[key], obj, key);\n\t\t\t\t\t\t\tif (!subresult)\n\t\t\t\t\t\t\t\tfailed[key] = true;\n\t\t\t\t\t\t\tresult = subresult && result;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tthis.callEvent(\"onAfterValidation\", [result, this._validate_details]);\n\t\treturn result;\n\t},\n\t_validate:function(rule, data, obj, key){\n\t\tif (typeof rule == \"string\")\n\t\t\trule = rules[rule];\n\t\tif (rule.call(this, data, obj, key)){\n\t\t\tif(this.callEvent(\"onValidationSuccess\",[key, obj]) && this._clear_invalid)\n\t\t\t\tthis._clear_invalid(key);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif(this.callEvent(\"onValidationError\",[key, obj]) && this._mark_invalid)\n\t\t\t\tthis._mark_invalid(key);\n\t\t}\n\t\treturn false;\n\t}\n};\n\nexport default ValidateData;","import {assert} from \"../webix/debug\";\nimport {copy, isUndefined, bind, isArray} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\nimport {define} from \"../services\";\n\nimport {$$, proto} from \"../ui/core\";\n\nimport {ajax} from \"../load/ajax\";\nimport proxy from \"../load/proxy\";\nimport promise from \"../thirdparty/promiz\";\n\nimport Settings from \"../core/settings\";\nimport EventSystem from \"../core/eventsystem\";\nimport ValidateData from \"../core/validatedata\";\n\nconst _pull = {};\n\nexport function dp(name,getOnly){\n\tif (typeof name == \"object\" && name._settings)\n\t\tname = name._settings.id;\n\tif (_pull[name] || getOnly)\n\t\treturn _pull[name];\n\n\tif (typeof name == \"string\"||typeof name == \"number\")\n\t\tname = { master:$$(name) };\n\n\tvar dp = new DataProcessor(name);\n\tvar masterId = dp._settings.master._settings.id;\n\t_pull[masterId]=dp;\n\n\t$$(masterId).attachEvent(\"onDestruct\",function(){\n\t\t_pull[this._settings.id] = null;\n\t\tdelete _pull[this._settings.id];\n\t});\n\n\treturn dp;\n}\n\ndefine(\"dp\", dp);\n\ndp.$$ = function(id){\n\treturn _pull[id];\n};\n\n\nexport const DataProcessor = proto({\n\tdefaults: {\n\t\tautoupdate:true,\n\t\tupdateFromResponse:false,\n\t\tmode:\"post\",\n\t\toperationName:\"webix_operation\",\n\t\ttrackMove:false\n\t},\n\n\n\t/*! constructor\n\t **/\n\t$init: function() {\n\t\tthis.reset();\n\t\tthis._ignore = false;\n\t\tthis.name = \"DataProcessor\";\n\t\tthis.$ready.push(this._after_init_call);\n\t},\n\treset:function(){\n\t\tthis._updates = [];\n\t},\n\turl_setter:function(value){\n\t\t/*\n\t\t\twe can use simple url or mode->url\n\t\t*/\n\t\tvar mode = \"\";\n\t\tif (typeof value == \"string\"){\n\t\t\tvar parts = value.split(\"->\");\n\t\t\tif (parts.length > 1){\n\t\t\t\tvalue = parts[1];\n\t\t\t\tmode = parts[0];\n\t\t\t}\n\t\t} else if (value && value.mode){\n\t\t\tmode = value.mode;\n\t\t\tvalue = value.url;\n\t\t}\n\n\t\tif (mode)\n\t\t\treturn proxy(mode, value);\n\n\t\treturn value;\n\t},\n\tmaster_setter:function(value){\n\t\tvar store = value;\n\t\tif (value.name != \"DataStore\")\n\t\t\tstore = value.data;\n\n\t\tthis._settings.store = store;\n\t\treturn value;\n\t},\n\t_promise:function(handler){\n\t\tconst prev = this._waitSave;\n\t\tthis._waitSave = [];\n\t\t\n\t\thandler();\n\t\tconst result = Promise.all(this._waitSave);\n\n\t\tthis._waitSave = prev;\n\t\tif (prev)\n\t\t\tprev.push(result);\n\n\t\treturn result;\n\t},\n\t/*! attaching onStoreUpdated event\n\t **/\n\t_after_init_call: function(){\n\t\tconst store = this._settings.store;\n\t\tif (store){\n\t\t\tstore.attachEvent(\"onStoreUpdated\", bind(this._onStoreUpdated, this));\n\t\t\tstore.attachEvent(\"onDataMove\", bind(this._onDataMove, this));\n\t\t}\n\t},\n\tignore:function(code,master){\n\t\tvar temp = this._ignore;\n\t\tthis._ignore = true;\n\t\tcode.call((master||this));\n\t\tthis._ignore = temp;\n\t},\n\toff:function(){\n\t\tthis._ignore = true;\n\t},\n\ton:function(){\n\t\tthis._ignore = false;\n\t},\n\n\t_copy_data:function(source){\n\t\tvar obj = {};\n\t\tfor (var key in source)\t\n\t\t\tif (key.indexOf(\"$\")!==0)\n\t\t\t\tobj[key]=source[key];\n\t\treturn obj;\n\t},\n\tsave:function(id, operation, obj){\n\t\toperation = operation || \"update\";\n\t\treturn this._save_inner(id, obj, operation, true);\n\t},\n\t_save_inner:function(id, obj, operation, now){\n\t\tif (typeof id == \"object\") id = id.toString();\n\t\tif (!id || this._ignore === true || !operation || operation == \"paint\") return;\n\n\t\tvar store = this._settings.store;\n\t\tif (store){\n\t\t\tobj = obj || this._settings.store.getItem(id);\n\t\t\tif (store._scheme_serialize)\n\t\t\t\tobj = store._scheme_serialize(obj);\n\t\t}\n\n\t\tvar update = { id: id, data:this._copy_data(obj), operation:operation };\n\t\t//save parent id\n\t\tif (!isUndefined(obj.$parent)) update.data.parent = obj.$parent;\n\n\t\tif (update.operation != \"delete\"){\n\t\t\t//prevent saving of not-validated records\n\t\t\tvar master = this._settings.master;\n\t\t\tif (master && master.data && master.data.getMark && master.data.getMark(id, \"webix_invalid\"))\n\t\t\t\tupdate._invalid = true;\n\n\t\t\tif (!this.validate(null, update.data))\n\t\t\t\tupdate._invalid = true;\n\t\t}\n\n\t\tif (this._check_unique(update))\n\t\t\tthis._updates.push(update);\n\n\t\tif (this._settings.autoupdate || now)\n\t\t\treturn this._sendData(id);\n\t\t\t\n\t\treturn;\n\t},\n\t_onDataMove:function(sid, tindex, parent, targetid){\n\t\tif (this._settings.trackMove){\n\t\t\tvar obj = copy(this._settings.store.getItem(sid));\n\n\t\t\tobj.webix_move_index = tindex;\n\t\t\tobj.webix_move_id = targetid;\n\t\t\tobj.webix_move_parent = parent;\n\t\t\tthis._save_inner(sid, obj, \"order\");\n\t\t}\n\t},\n\t_onStoreUpdated: function(id, obj, operation){\n\t\tswitch (operation) {\n\t\t\tcase \"save\":\n\t\t\t\toperation = \"update\";\n\t\t\t\tbreak;\n\t\t\tcase \"update\":\n\t\t\t\toperation = \"update\";\n\t\t\t\tbreak;\n\t\t\tcase \"add\":\n\t\t\t\toperation = \"insert\";\n\t\t\t\tbreak;\n\t\t\tcase \"delete\":\n\t\t\t\toperation = \"delete\";\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t\treturn this._save_inner(id, obj, operation);\n\t},\n\t_check_unique:function(check){\n\t\tfor (var i = 0; i < this._updates.length; i++){\n\t\t\tvar one = this._updates[i];\n\t\t\tif (one.id == check.id && !one._in_progress){\n\t\t\t\tif (check.operation == \"delete\"){\n\t\t\t\t\tif (one.operation == \"insert\")\n\t\t\t\t\t\tthis._updates.splice(i,1);\n\t\t\t\t\telse \n\t\t\t\t\t\tone.operation = \"delete\";\n\t\t\t\t}\n\t\t\t\tone.data = check.data;\n\t\t\t\tone._invalid = check._invalid;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsend:function(){\n\t\treturn this._sendData();\n\t},\n\t_sendData: function(triggerId){\n\t\tif (!this._settings.url)\n\t\t\treturn;\n\n\t\tvar wait;\n\t\tvar marked = this._updates;\n\t\tvar to_send = [];\n\t\tvar url = this._settings.url;\n\n\t\tfor (let i = 0; i < marked.length; i++) {\n\t\t\tvar tosave = marked[i];\n\n\t\t\tif (tosave._in_progress) continue;\n\t\t\tif (tosave._invalid) continue;\n\n\t\t\tvar id = tosave.id;\n\t\t\t// call to .save(id) without autoupdate mode will send the specific object only\n\t\t\tif (!this._settings.autoupdate && triggerId && triggerId != id)\n\t\t\t\tcontinue;\n\n\t\t\tvar operation = tosave.operation;\n\t\t\tvar precise_url = proxy.$parse((typeof url == \"object\" && !url.$proxy) ? url[operation] : url);\n\t\t\tvar custom = precise_url && (precise_url.$proxy || typeof precise_url === \"function\");\n\n\t\t\tif (!precise_url) continue;\n\n\t\t\tconst store = this._settings.store;\n\t\t\tif (store && store._scheme_save)\n\t\t\t\tstore._scheme_save(tosave.data);\n\n\t\t\tif (!this.callEvent(\"onBefore\"+operation, [id, tosave]))\n\t\t\t\tcontinue;\n\t\t\ttosave._in_progress = true;\n\n\t\t\tif (!this.callEvent(\"onBeforeDataSend\", [tosave])) return;\n\n\t\t\ttosave.data = this._updatesData(tosave.data);\n\n\t\t\tlet result;\n\t\t\tif (precise_url.$proxy){\n\t\t\t\tif (precise_url.save){\n\t\t\t\t\t//proxy\n\t\t\t\t\tresult = precise_url.save(this.config.master, tosave, this);\n\t\t\t\t}\n\t\t\t\tto_send.push(tosave);\n\t\t\t} else {\n\t\t\t\tif (operation == \"insert\")\n\t\t\t\t\tdelete tosave.data.id;\n\t\t\t\t\n\t\t\t\tif (custom){\n\t\t\t\t\t//save function\n\t\t\t\t\tresult = precise_url.call(this.config.master, tosave.id, tosave.operation, tosave.data);\n\t\t\t\t} else {\n\t\t\t\t\t//normal url\n\t\t\t\t\ttosave.data[this._settings.operationName] = operation;\n\n\t\t\t\t\tresult = this._send(precise_url, tosave.data, this._settings.mode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (result){\n\t\t\t\tresult = this._proxy_on_save(result, { id: tosave.id, status: tosave.operation });\n\t\t\t\tif (triggerId && id === triggerId){\n\t\t\t\t\twait = result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.callEvent(\"onAfterDataSend\", [tosave]);\n\t\t}\n\n\t\tif (url.$proxy && url.saveAll && to_send.length){\n\t\t\tlet result = url.saveAll(this.config.master, to_send, this);\n\t\t\tif (result){\n\t\t\t\tresult = this._proxy_on_save(result, null);\n\t\t\t\tif (!wait)\n\t\t\t\t\twait = result;\n\t\t\t}\n\t\t}\n\n\t\treturn wait;\n\t},\n\t_proxy_on_save:function(result, state){\n\t\tif(result){\n\t\t\tif(!result.then)\n\t\t\t\tresult = promise.resolve(result);\n\n\t\t\tresult = result.then((data) => {\n\t\t\t\tif (data && typeof data.json == \"function\")\n\t\t\t\t\tdata = data.json();\n\n\t\t\t\tvar processed;\n\t\t\t\tif (state === null){\n\t\t\t\t\tprocessed = this._processResult(data); //array of responses\n\t\t\t\t} else {\n\t\t\t\t\tprocessed = this._processResult(state, \"\", data, -1); //text, data, loader\n\t\t\t\t}\n\n\t\t\t\tif (!processed)\n\t\t\t\t\tthrow processed; // trigger rejection\n\n\t\t\t\treturn processed;\n\t\t\t}, (x) => {\n\t\t\t\tthis._processError(state, \"\", null, x);\n\t\t\t\tthrow x;\n\t\t\t});\n\n\t\t\tif (this._waitSave)\n\t\t\t\tthis._waitSave.push(result);\n\n\t\t\treturn result;\n\t\t}\n\t},\n\n\t/*! process updates list to POST and GET params according dataprocessor protocol\n\t *\t@param updates\n\t *\t\tlist of objects { id: \"item id\", data: \"data hash\", operation: \"type of operation\"}\n\t *\t@return\n\t *\t\tobject { post: { hash of post params as name: value }, get: { hash of get params as name: value } }\n\t **/\n\n\n\n\t_updatesData:function(source){\n\t\tvar target = {};\n\t\tfor (var j in source){\n\t\t\tif (j.indexOf(\"$\")!==0)\n\t\t\t\ttarget[j] = source[j];\n\t\t}\n\t\treturn target;\n\t},\n\n\n\n\t/*! send dataprocessor query to server\n\t *\tand attach event to process result\n\t *\t@param url\n\t *\t\tserver url\n\t *\t@param get\n\t *\t\thash of get params\n\t *\t@param post\n\t *\t\thash of post params\n\t *\t@mode\n\t *\t\t'post' or 'get'\n\t **/\n\t_send: function(url, post, mode) {\n\t\tassert(url, \"url was not set for DataProcessor\");\n\t\treturn ajax()[mode](url, post);\n\t},\n\tattachProgress:function(start, end, error){\n\t\tthis.attachEvent(\"onBeforeDataSend\", start);\n\t\tthis.attachEvent(\"onAfterSync\", end);\n\t\tthis.attachEvent(\"onAfterSaveError\", error);\n\t\tthis.attachEvent(\"onLoadError\", error);\n\t},\n\t_processError:function(id, text, data, loader){\n\t\tif (id)\n\t\t\tthis._innerProcessResult(true, id.id, false, id.status, false, {text:text, data:data, loader:loader});\n\t\telse {\n\t\t\tthis.callEvent(\"onLoadError\", arguments);\n\t\t\tcallEvent(\"onLoadError\", [text, data, loader, this]);\n\t\t}\n\t},\n\t_innerProcessResult:function(error, id, newid, status, obj, details){\n\t\tvar master = this._settings.master;\n\t\tvar update = this.getItemState(id);\n\t\tupdate._in_progress = false;\n\n\n\n\t\tif (error){\n\t\t\tif (this.callEvent(\"onBeforeSaveError\", [id, status, obj, details])){\n\t\t\t\tupdate._invalid = true;\n\t\t\t\tif(this._settings.undoOnError && master._settings.undo){\n\t\t\t\t\tthis.ignore(function(){\n\t\t\t\t\t\tmaster.undo(id);\n\t\t\t\t\t});\n\t\t\t\t\tthis.setItemState(id, false);\n\t\t\t\t}\n\t\t\t\tthis.callEvent(\"onAfterSaveError\", [id, status, obj, details]);\n\t\t\t}\n\t\t\treturn;\n\t\t} else\n\t\t\tthis.setItemState(id, false);\n\n\t\tconst store = this._settings.store;\n\t\tif (store && store.exists(id)){\n\t\t\t//update from response\n\t\t\tif (newid && id != newid)\n\t\t\t\tstore.changeId(id, newid);\n\n\t\t\tif (obj && status != \"delete\" && this._settings.updateFromResponse)\n\t\t\t\tthis.ignore(function(){\t\t\t\t\n\t\t\t\t\tstore.updateItem(newid || id, obj);\n\t\t\t\t});\n\t\t}\n\t\t\t\n\n\t\t//clean undo history, for the saved record\n\t\tif(this._settings.undoOnError && master._settings.undo)\n\t\t\tmaster.removeUndo(newid||id);\n\n\t\tthis.callEvent(\"onAfterSave\",[obj, id, details]);\n\t\tthis.callEvent(\"onAfter\"+status, [obj, id, details]);\n\n\t\treturn obj || {};\n\t},\n\tprocessResult: function(state, hash, details){\n\t\t//compatibility with custom json response\n\t\tvar error = (hash && (hash.status == \"error\" || hash.status == \"invalid\"));\n\t\tvar newid = (hash ? ( hash.newid || hash.id ) : false);\n\n\t\treturn this._innerProcessResult(error, state.id, newid, state.status, hash, details);\n\t},\n\t// process saving from result\n\t_processResult: function(state, text, data, loader){\n\t\tvar finalResult;\n\t\tthis.callEvent(\"onBeforeSync\", [state, text, data, loader]);\n\n\t\tif(isArray(state)){ //saveAll results\n\t\t\tfinalResult = [];\n\t\t\tstate.forEach((one) => {\n\t\t\t\tfinalResult.push(this.processResult(one, one, {}));\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tif (loader === -1){\n\t\t\t\t//callback from promise\n\t\t\t\tfinalResult = this.processResult(state, data, {});\n\t\t\t} else {\n\t\t\t\tvar proxy = this._settings.url;\n\t\t\t\tif (proxy.$proxy && proxy.result){\n\t\t\t\t\tfinalResult = proxy.result(state, this._settings.master, this, text,  data, loader) || {};\n\t\t\t\t} else {\n\t\t\t\t\tvar hash;\n\t\t\t\t\tif (text){\n\t\t\t\t\t\thash = data.json();\n\t\t\t\t\t\t//invalid response\n\t\t\t\t\t\tif (text && (hash === null || typeof hash == \"undefined\"))\n\t\t\t\t\t\t\thash = { status:\"error\" };\n\t\t\t\t\t}\n\t\t\t\t\tfinalResult = this.processResult(state, hash,  {text:text, data:data, loader:loader});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onAfterSync\", [state, text, data, loader]);\n\t\treturn finalResult;\n\t},\n\n\n\t/*! if it's defined escape function - call it\n\t *\t@param value\n\t *\t\tvalue to escape\n\t *\t@return\n\t *\t\tescaped value\n\t **/\n\tescape: function(value) {\n\t\tif (this._settings.escape)\n\t\t\treturn this._settings.escape(value);\n\t\telse\n\t\t\treturn encodeURIComponent(value);\n\t},\n\tgetState:function(){\n\t\tif (!this._updates.length) return false;\n\t\tfor (var i = this._updates.length - 1; i >= 0; i--)\n\t\t\tif (this._updates[i]._in_progress)\n\t\t\t\treturn \"saving\";\n\n\t\treturn true;\n\t},\n\tgetItemState:function(id){\n\t\tvar index = this._get_stack_index(id);\n\t\treturn this._updates[index] || null;\n\t},\n\tsetItemState:function(id, state){\n\t\tif (state){\n\t\t\tthis._save_inner(id, null, \"update\");\n\t\t} else{\n\t\t\tvar index = this._get_stack_index(id);\n\t\t\tif (index > -1)\n\t\t\t\tthis._updates.splice(index, 1);\n\t\t}\n\t},\n\t_get_stack_index: function(id) {\n\t\tvar index = -1;\n\t\tfor (var i=0; i < this._updates.length; i++)\n\t\t\tif (this._updates[i].id == id) {\n\t\t\t\tindex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\treturn index;\n\t}\n\n}, Settings, EventSystem, ValidateData);","import {extend, _to_array, uid, isUndefined, copy, isArray, bind} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\nimport i18n from \"../webix/i18n\";\n\nimport EventSystem from \"./eventsystem\";\nimport DataDriver from \"../load/drivers/index\";\n\n/*\n\tDataStore is not a behavior, it standalone object, which represents collection of data.\n\tCall provideAPI to map data API\n\n\t@export\n\t\texists\n\t\tgetIdByIndex\n\t\tgetIndexById\n\t\tget\n\t\tset\n\t\trefresh\n\t\tcount\n\t\tsort\n\t\tfilter\n\t\tnext\n\t\tprevious\n\t\tclearAll\n\t\tfirst\n\t\tlast\n*/\n\nfunction DataStore(){\n\tthis.name = \"DataStore\";\n\t\n\textend(this, EventSystem);\n\n\tthis.setDriver(\"json\");\t//default data source is an\n\tthis.pull = {};\t\t\t\t\t\t//hash of IDs\n\tthis.order = _to_array();\t\t//order of IDs\n\tthis._marks = {};\n}\n\nDataStore.prototype={\n\t//defines type of used data driver\n\t//data driver is an abstraction other different data formats - xml, json, csv, etc.\n\tsetDriver:function(type){\n\t\tassert(DataDriver[type],\"incorrect DataDriver\");\n\t\tthis.driver = DataDriver[type];\n\t},\n\t//process incoming raw data\n\t_parse:function(data){\n\t\tthis.callEvent(\"onParse\", [this.driver, data]);\n\n\t\tif (this._filter_order)\n\t\t\tthis.filter();\n\t\n\t\t//get size and position of data\n\t\tconst info = this.driver.getInfo(data);\n\n\t\tif (info.config)\n\t\t\tthis.callEvent(\"onServerConfig\",[info.config]);\n\n\t\tconst options = this.driver.getOptions(data);\n\t\tif (options)\n\t\t\tthis.callEvent(\"onServerOptions\", [options]);\n\n\t\t//get array of records\n\t\tconst recs = this.driver.getRecords(data);\n\n\t\tthis._inner_parse(info, recs);\n\n\t\t//in case of tree store we may want to group data\n\t\tif (this._scheme_group && this._group_processing && !this._not_grouped_order)\n\t\t\tthis._group_processing(this._scheme_group);\n\n\t\t//optional data sorting\n\t\tif (this._scheme_sort){\n\t\t\tthis.blockEvent();\n\t\t\tthis.sort(this._scheme_sort);\n\t\t\tthis.unblockEvent();\n\t\t}\n\n\t\tthis.callEvent(\"onStoreLoad\",[this.driver, data]);\n\t\t//repaint self after data loading\n\t\tthis.refresh();\n\t},\n\t_inner_parse:function(info, recs){\n\t\tlet from = info.from;\n\t\tlet subload = true;\n\t\tlet marks = false;\n\n\t\t//some data is loaded and new data doesn't have \"pos\" - assuming update\n\t\tif (!from && from !== 0 && this.order[0]){\n\t\t\tif (this._removeMissed){\n\t\t\t\t//update mode, create kill list\n\t\t\t\tmarks = {};\n\t\t\t\tfor (let i=0; i<this.order.length; i++)\n\t\t\t\t\tmarks[this.order[i]]=true;\n\t\t\t}\n\t\t\t\n\t\t\tsubload = false;\n\t\t\tfrom = this.order.length;\n\t\t} else \n\t\t\tfrom = (from || 0)*1;\n\n\t\tlet j=0;\n\t\tfor (let i = 0; i < recs.length; i++){\n\t\t\t//get hash of details for each record\n\t\t\tconst temp = this.driver.getDetails(recs[i]);\n\t\t\tconst id = this.id(temp); \t//generate ID for the record\n\t\t\tif (!this.pull[id]){\t\t//if such ID already exists - update instead of insert\n\t\t\t\tthis.order[j+from]=id;\t\n\t\t\t\tj++;\n\t\t\t} else if (subload && this.order[j+from])\n\t\t\t\tj++;\n\n\t\t\tif(this.pull[id]){\n\t\t\t\textend(this.pull[id], temp, true);//add only new properties\n\t\t\t\tif (this._scheme_update)\n\t\t\t\t\tthis._scheme_update(this.pull[id]);\n\t\t\t\t//update mode, remove item from kill list\n\t\t\t\tif (marks)\n\t\t\t\t\tdelete marks[id];\n\t\t\t} else{\n\t\t\t\tthis.pull[id] = temp;\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(temp);\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t//update mode, delete items which are not existing in the new xml\n\t\tif (marks){\n\t\t\tthis.blockEvent();\n\t\t\tfor (let delid in marks)\n\t\t\t\tthis.remove(delid);\n\t\t\tthis.unblockEvent();\n\t\t}\n\n\t\tconst endpos = info.size * 1;\n\t\tif (endpos) {\n\t\t\tif (!this.order[endpos-1])\n\t\t\t\tthis.order[endpos-1] = undefined;\n\t\t\tif (endpos < this.order.length)\n\t\t\t\tthis.order = _to_array(this.order.slice(0, endpos));\n\t\t}\n\t},\n\t//generate id for data object\n\tid:function(data){\n\t\treturn data.id||(data.id=uid());\n\t},\n\tchangeId:function(old, newid){\n\t\t//assert(this.pull[old],\"Can't change id, for non existing item: \"+old);\n\t\tif(old == newid) return;\n\t\t\n\t\tif(this.pull[old])\n\t\t\tthis.pull[newid] = this.pull[old];\n\t\t\n\t\tthis.pull[newid].id = newid;\n\t\tthis.order[this.order.find(old)]=newid;\n\t\tif (this._filter_order)\n\t\t\tthis._filter_order[this._filter_order.find(old)]=newid;\n\t\tif (this._marks[old]){\n\t\t\tthis._marks[newid] = this._marks[old];\n\t\t\tdelete this._marks[old];\n\t\t}\n\n\n\t\tthis.callEvent(\"onIdChange\", [old, newid]);\n\t\tif (this._render_change_id)\n\t\t\tthis._render_change_id(old, newid);\n\t\tdelete this.pull[old];\n\t},\n\t//get data from hash by id\n\tgetItem:function(id){\n\t\treturn this.pull[id];\n\t},\n\t//assigns data by id\n\tupdateItem:function(id, update, mode){\n\t\tif (typeof id === \"object\")\n\t\t\tid = id.toString();\n\n\t\tconst data = this.getItem(id);\n\t\tlet old = null;\n\n\t\t//check is change tracking active\n\t\tconst changeTrack = this.hasEvent(\"onDataUpdate\");\n\n\t\tassert(data, \"Invalid ID for updateItem\");\n\t\tassert(!update || !update.id || update.id == id, \"Attempt to change ID in updateItem\");\n\t\tif (!isUndefined(update) && data !== update){\n\t\t\t//preserve original object\n\t\t\tif (changeTrack)\n\t\t\t\told = copy(data);\n\n\t\t\tid = data.id;\t//preserve id\n\t\t\textend(data, update, true);\n\t\t\tdata.id = id;\n\t\t}\n\n\t\tif (this._scheme_update)\n\t\t\tthis._scheme_update(data);\n\n\t\tthis.callEvent(\"onStoreUpdated\",[id, data, (mode||\"update\")]);\n\n\t\tif (changeTrack)\n\t\t\tthis.callEvent(\"onDataUpdate\", [id, data, old]);\n\t},\n\t//sends repainting signal\n\trefresh:function(id){\n\t\tif (this._skip_refresh) return; \n\t\t\n\t\tif (id){\n\t\t\tif (this.exists(id))\n\t\t\t\tthis.callEvent(\"onStoreUpdated\",[id, this.pull[id], \"paint\"]);\n\t\t}else\n\t\t\tthis.callEvent(\"onStoreUpdated\",[null,null,null]);\n\t},\n\tsilent:function(code, master){\n\t\tthis._skip_refresh = true;\n\t\tcode.call(master||this);\n\t\tthis._skip_refresh = false;\n\t},\n\t//converts range IDs to array of all IDs between them\n\tgetRange:function(from,to){\t\t\n\t\t//if some point is not defined - use first or last id\n\t\t//BEWARE - do not use empty or null ID\n\t\tif (from)\n\t\t\tfrom = this.getIndexById(from);\n\t\telse \n\t\t\tfrom = (this.$min||this.startOffset)||0;\n\t\tif (to)\n\t\t\tto = this.getIndexById(to);\n\t\telse {\n\t\t\tto = this.$max === 0 ? 0 : Math.min((this.$max?this.$max-1:(this.endOffset||Infinity)),(this.count()-1));\n\t\t\tif (to<0) to = 0; //we have not data in the store\n\t\t}\n\n\t\tif (from > to){ //can be in case of backward shift-selection\n\t\t\tlet a=to; to=from; from=a;\n\t\t}\n\n\t\treturn this.getIndexRange(from,to);\n\t},\n\t//converts range of indexes to array of all IDs between them\n\tgetIndexRange:function(from,to){\n\t\tto = Math.min((to === 0 ? 0 : (to||Infinity)), this.count()-1);\n\n\t\tconst ret = _to_array(); //result of method is rich-array\n\t\tfor (let i = (from||0); i <= to; i++)\n\t\t\tret.push(this.getItem(this.order[i]));\n\t\treturn ret;\n\t},\n\t//returns total count of elements\n\tcount:function(){\n\t\treturn this.order.length;\n\t},\n\t//returns truy if item with such ID exists\n\texists:function(id){\n\t\treturn !!(this.pull[id]);\n\t},\n\t//nextmethod is not visible on component level, check DataMove.move\n\t//moves item from source index to the target index\n\tmove:function(sindex,tindex){\n\t\tassert(sindex>=0 && tindex>=0, \"DataStore::move\",\"Incorrect indexes\");\n\t\tif (sindex == tindex) return;\n\n\t\tconst id = this.getIdByIndex(sindex);\n\t\tconst obj = this.getItem(id);\n\n\t\tif (this._filter_order)\n\t\t\tthis._move_inner(this._filter_order, 0, 0, this.getIdByIndex(sindex), this.getIdByIndex(tindex));\n\n\t\tthis._move_inner(this.order, sindex, tindex);\n\t\t\n\t\t\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"move\"]);\n\t},\n\t_move_inner:function(col, sindex, tindex, sid, tid){\n\t\tif (sid||tid){\n\t\t\tsindex = tindex = -1;\n\t\t\tfor (let i = 0; i < col.length; i++){\n\t\t\t\tif (col[i] == sid && sindex<0)\n\t\t\t\t\tsindex = i;\n\t\t\t\tif (col[i] == tid && tindex<0)\n\t\t\t\t\ttindex = i;\n\t\t\t}\n\t\t}\n\t\tconst id = col[sindex];\n\t\tcol.removeAt(sindex);\t//remove at old position\n\t\tcol.insertAt(id,Math.min(col.length, tindex));\t//insert at new position\n\t},\n\tscheme:function(config){\n\t\tthis._scheme = {};\n\t\tthis._scheme_save = config.$save;\n\t\tthis._scheme_init = config.$init||config.$change;\n\t\tthis._scheme_update = config.$update||config.$change;\n\t\tthis._scheme_serialize = config.$serialize;\n\t\tthis._scheme_group = config.$group;\n\t\tthis._scheme_sort = config.$sort;\n\t\tthis._scheme_export = config.$export;\n\n\t\t//ignore $-starting properties, as they have special meaning\n\t\tfor (let key in config)\n\t\t\tif (key.substr(0,1) != \"$\")\n\t\t\t\tthis._scheme[key] = config[key];\n\t},\n\timportData:function(target, silent){\n\t\tconst data = target ? (target.data || target) : [];\n\t\tthis._filter_order = null;\n\n\t\tif (typeof data.serialize == \"function\"){\n\t\t\tthis.order = _to_array([].concat(data.order));\n\n\t\t\t//make full copy, to preserve object properties\n\t\t\t//[WE-CAN-DO-BETTER]\n\t\t\tif (this._make_full_copy){\n\t\t\t\tthis._make_full_copy = false;\n\t\t\t\tconst oldpull = this.pull;\n\t\t\t\tthis.pull = {};\n\t\t\t\tfor (let key in data.pull){\n\t\t\t\t\tconst old = oldpull[key];\n\t\t\t\t\tthis.pull[key] = copy(data.pull[key]);\n\t\t\t\t\tif (old && old.open) this.pull[key].open = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.pull = {};\n\t\t\t\tfor (let key in data.pull)\n\t\t\t\t\tthis.pull[key] = data.pull[key];\n\t\t\t}\n\n\t\t\tif (data.branch && this.branch){\n\t\t\t\tthis.branch = copy(data.branch);\n\t\t\t\tthis._filter_branch = null;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.order = _to_array();\n\t\t\tthis.pull = {};\n\t\t\tlet id, obj;\n\n\t\t\tif (isArray(target))\n\t\t\t\tfor (let key=0; key<target.length; key++){\n\t\t\t\t\tobj = id = target[key];\n\t\t\t\t\tif (typeof obj == \"object\")\n\t\t\t\t\t\tobj.id = obj.id || uid();\n\t\t\t\t\telse\n\t\t\t\t\t\tobj = { id:id, value:id };\n\n\t\t\t\t\tthis.order.push(obj.id);\n\t\t\t\t\tif (this._scheme_init)\n\t\t\t\t\t\tthis._scheme_init(obj);\n\t\t\t\t\tthis.pull[obj.id] = obj;\n\t\t\t\t}\n\t\t\telse\n\t\t\t\tfor (let key in data){\n\t\t\t\t\tthis.order.push(key);\n\t\t\t\t\tthis.pull[key] = { id:key, value: data[key] };\n\t\t\t\t}\n\t\t}\n\t\tif (this._extraParser && !data.branch){\n\t\t\tthis.branch = { 0:[]};\n\t\t\tif (!this._datadriver_child)\n\t\t\t\tthis._set_child_scheme(\"data\");\n\n\t\t\tfor (let i = 0; i<this.order.length; i++){\n\t\t\t\tconst key = this.order[i];\n\t\t\t\tthis._extraParser(this.pull[key], 0, 0, false);\n\t\t\t}\n\t\t}\n\n\t\tthis.callEvent(\"onStoreLoad\",[]);\n\t\tif (!silent)\n\t\t\tthis.callEvent(\"onStoreUpdated\",[]);\n\t},\n\tsync:function(source, filter, silent){\n\t\tthis.unsync();\n\n\t\tconst type = typeof source;\n\t\tif (type == \"string\")\n\t\t\tsource = $$(source);\n\n\t\tif (type != \"function\" && type != \"object\"){\n\t\t\tsilent = filter;\n\t\t\tfilter = null;\n\t\t}\n\t\t\n\t\tif (source.name != \"DataStore\" && source.name != \"TreeStore\"){\n\t\t\tif (source.data && (source.data.name === \"DataStore\" || source.data.name === \"TreeStore\"))\n\t\t\t\tsource = source.data;\n\t\t\telse {\n\t\t\t\tthis._sync_source = source;\n\t\t\t\treturn callEvent(\"onSyncUnknown\", [this, source, filter]);\n\t\t\t}\n\t\t}\n\n\t\tconst sync_logic = bind(function(id, data, mode){\n\t\t\tif (this._skip_next_sync) return;\n\n\t\t\t//sync of tree-structure with after-filtering\n\t\t\t//we need to make a full copy, to preserve $count\n\t\t\t//[WE-CAN-DO-BETTER]\n\t\t\tif (filter && this.branch) this._make_full_copy = true;\n\t\t\tthis.importData(source, true);\n\t\t\t\n\t\t\tif (filter)\n\t\t\t\tthis.silent(filter);\n\t\t\tif (this._on_sync)\n\t\t\t\tthis._on_sync();\n\n\t\t\tif(!(id && data && mode) && !this.count())//clearall\n\t\t\t\tthis._marks = {};\n\t\t\tif(mode ==\"delete\" && this._marks[id])\n\t\t\t\tdelete this._marks[id];\n\n\t\t\tthis.callEvent(\"onSyncApply\",[]);\n\n\t\t\tif (!silent) \n\t\t\t\tthis.refresh();\n\t\t\telse\n\t\t\t\tsilent = false;\n\t\t}, this);\n\n\t\tthis._sync_events = [\n\t\t\tsource.attachEvent(\"onStoreUpdated\", sync_logic),\n\t\t\tsource.attachEvent(\"onIdChange\", bind(function(old, nid){ this.changeId(old, nid); this.refresh(nid); }, this))\n\t\t];\n\t\tthis._sync_source = source;\n\n\t\t//backward data saving\n\t\tthis._back_sync_handler = this.attachEvent(\"onStoreUpdated\", function(id, data, mode){\n\t\t\tif (mode == \"update\" || mode == \"save\"){\n\t\t\t\tthis._skip_next_sync = 1;\n\t\t\t\tsource.updateItem(id, data);\n\t\t\t\tthis._skip_next_sync = 0;\n\t\t\t}\n\t\t});\n\n\t\tsync_logic();\n\t},\n\tunsync:function(){\n\t\tif (this._sync_source){\n\t\t\tconst source = this._sync_source;\n\n\t\t\tif ((source.name != \"DataStore\" && source.name != \"TreeStore\") &&\n\t\t\t\t\t(!source.data || source.data.name != \"DataStore\" || source.data.name != \"TreeStore\")){\n\t\t\t\t//data sync with external component\n\t\t\t\tcallEvent(\"onUnSyncUnknown\", [this, source]);\n\t\t\t} else {\n\t\t\t\t//data sync with webix component\n\t\t\t\tfor (let i = 0; i < this._sync_events.length; i++)\n\t\t\t\t\tsource.detachEvent(this._sync_events[i]);\n\t\t\t\tthis.detachEvent(this._back_sync_handler);\n\t\t\t}\n\n\t\t\tthis._sync_source = null;\n\t\t}\n\t},\n\tdestructor:function(){\n\t\tthis.unsync();\n\n\t\tthis.pull = this.order = this._marks = null;\n\t\tthis._evs_events = this._evs_handlers = {};\n\t},\n\t//adds item to the store\n\tadd:function(obj,index){\n\t\t//default values\t\t\n\t\tif (this._scheme)\n\t\t\tfor (let key in this._scheme)\n\t\t\t\tif (isUndefined(obj[key]))\n\t\t\t\t\tobj[key] = this._scheme[key];\n\n\t\tif (this._scheme_init)\n\t\t\tthis._scheme_init(obj);\n\n\t\t//generate id for the item\n\t\tconst id = this.id(obj);\n\n\t\t//in case of treetable order is sent as 3rd parameter\n\t\tconst order = arguments[2]||this.order;\n\n\t\t//by default item is added to the end of the list\n\t\tconst data_size = order.length;\n\n\t\tif (isUndefined(index) || index < 0)\n\t\t\tindex = data_size; \n\t\t//check to prevent too big indexes\t\t\t\n\t\tif (index > data_size){\n\t\t\tassert(0, \"Warning\",\"DataStore:add\",\"Index of out of bounds\");\n\t\t\tindex = Math.min(order.length,index);\n\t\t}\n\t\tif (this.callEvent(\"onBeforeAdd\", [id, obj, index]) === false) return false;\n\n\t\tassert(!this.exists(id), \"Not unique ID\");\n\n\t\tthis.pull[id]=obj;\n\t\torder.insertAt(id,index);\n\t\tif (this._filter_order){\t//adding during filtering\n\t\t\t//we can't know the location of new item in full dataset, making suggestion\n\t\t\t//put at end of original dataset by default\n\t\t\tlet original_index = this._filter_order.length;\n\t\t\t//if some data exists, put at the same position in original and filtered lists\n\t\t\tif (this.order.length)\n\t\t\t\toriginal_index = Math.min((index || 0), original_index);\n\n\t\t\tthis._filter_order.insertAt(id,original_index);\n\t\t}\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"add\"]);\n\t\tthis.callEvent(\"onAfterAdd\",[id,index]);\n\n\t\treturn obj.id;\n\t},\n\t\n\t//removes element from datastore\n\tremove:function(id){\n\t\t//id can be an array of IDs - result of getSelect, for example\n\t\tif (isArray(id)){\n\t\t\tfor (let i = 0; i < id.length; i++)\n\t\t\t\tthis.remove(id[i]);\n\t\t\treturn;\n\t\t}\n\t\tif (this.callEvent(\"onBeforeDelete\",[id]) === false) return false;\n\t\t\n\t\tassert(this.exists(id), \"Not existing ID in remove command\"+id);\n\n\t\tconst obj = this.getItem(id); //save for later event\n\t\t//clear from collections\n\t\tthis.order.remove(id);\n\t\tif (this._filter_order) \n\t\t\tthis._filter_order.remove(id);\n\t\t\t\n\t\tdelete this.pull[id];\n\t\tif (this._marks[id])\n\t\t\tdelete this._marks[id];\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"delete\"]);\n\t\tthis.callEvent(\"onAfterDelete\",[id]);\n\t},\n\t//deletes all records in datastore\n\tclearAll:function(soft){\n\t\t//instead of deleting one by one - just reset inner collections\n\t\tthis.pull = {};\n\t\tthis._marks = {};\n\t\tthis.order = _to_array();\n\t\t//this.feed = null;\n\t\tthis._filter_order = null;\n\t\tif (!soft)\n\t\t\tthis.url = null;\n\t\tthis.callEvent(\"onClearAll\",[soft]);\n\t\tthis.refresh();\n\t},\n\t//converts index to id\n\tgetIdByIndex:function(index){\n\t\tassert(index >= 0,\"DataStore::getIdByIndex Incorrect index\");\n\t\treturn this.order[index];\n\t},\n\t//converts id to index\n\tgetIndexById:function(id){\n\t\tif (!this.pull[id])\n\t\t\treturn -1;\n\t\telse\n\t\t\treturn this.order.find(id);\t//slower than getIdByIndex\n\t},\n\t//returns ID of next element\n\tgetNextId:function(id,step){\n\t\treturn this.order[this.getIndexById(id)+(step||1)];\n\t},\n\t//returns ID of first element\n\tgetFirstId:function(){\n\t\treturn this.order[0];\n\t},\n\t//returns ID of last element\n\tgetLastId:function(){\n\t\treturn this.order[this.order.length-1];\n\t},\n\t//returns ID of previous element\n\tgetPrevId:function(id,step){\n\t\treturn this.order[this.getIndexById(id)-(step||1)];\n\t},\n\t/*\n\t\tsort data in collection\n\t\t\tby - settings of sorting\n\n\t\tor\n\t\t\tby - array of settings\n\n\t\tor\n\n\t\t\tby - sorting function\n\t\t\tdir - \"asc\" or \"desc\"\n\n\t\tor\n\n\t\t\tby - property\n\t\t\tdir - \"asc\" or \"desc\"\n\t\t\tas - type of sortings\n\n\t\tSorting function will accept 2 parameters and must return 1,0,-1, based on desired order\n\n\t\treturns true if sorting was successful, false otherwise\n\t*/\n\tsort:function(by, dir, as){\n\t\tlet parameters;\n\t\tlet sort = by;\n\n\t\tif (isArray(sort)){\n\t\t\tsort = sort.map(a => this._sort_init(a));\n\t\t\tparameters = [sort];\n\t\t} else {\n\t\t\tsort = this._sort_init(by, dir, as);\n\t\t\tparameters = [sort.by, sort.dir, sort.as, sort];\n\t\t}\n\n\t\tif (!this.callEvent(\"onBeforeSort\", parameters)) return false;\n\t\tconst sorter = this.sorting.create(sort);\n\n\t\tthis.order = this._sort_core(sorter, this.order);\n\t\tif (this._filter_order)\n\t\t\tthis._filter_order = this._sort_core(sorter, this._filter_order);\n\t\tif (this._filter_branch)\t//treestore\n\t\t\tthis._sort_core(sorter, this.order, this._filter_branch);\n\n\t\t//repaint self\n\t\tthis.refresh();\n\n\t\tthis.callEvent(\"onAfterSort\", parameters);\n\t\treturn true;\n\t},\n\t_sort_init:function(by, dir, as){\n\t\tlet sort = by;\n\n\t\tif (typeof by == \"function\")\n\t\t\tsort = {as:by, dir:dir};\n\t\telse if (typeof by == \"string\")\n\t\t\tsort = {by:by, dir:dir, as:as};\n\n\t\tif (typeof sort.by == \"string\")\n\t\t\tsort.by = sort.by.replace(/#/g,\"\");\n\n\t\treturn sort;\n\t},\n\t_sort_core:function(sorter, order){\n\t\tif (this.order.length){\n\t\t\tconst pre = order.splice(0, this.$freeze);\n\t\t\t//get array of IDs\n\t\t\tconst neworder = _to_array();\n\t\t\tfor (let i = order.length-1; i>=0; i--)\n\t\t\t\tneworder[i] = this.pull[order[i]];\n\n\t\t\tneworder.sort(sorter);\n\t\t\treturn _to_array(pre.concat(neworder.map(function(obj){ \n\t\t\t\tassert(obj, \"Client sorting can't be used with dynamic loading\");\n\t\t\t\treturn this.id(obj);\n\t\t\t},this)));\n\t\t}\n\t\treturn order;\n\t},\n\t/*\n\t\tFilter datasource\n\t\t\n\t\ttext - property, by which filter\n\t\tvalue - filter mask\n\t\t\n\t\tor\n\t\t\n\t\ttext - filter method\n\t\t\n\t\tFilter method will receive data object and must return true or false\n\t*/\n\t_filter_reset:function(preserve){\n\t\t//remove previous filtering , if any\n\t\tif (this._filter_order && !preserve){\n\t\t\tthis.order = this._filter_order;\n\t\t\tdelete this._filter_order;\n\t\t}\n\t},\n\t_filter_core:function(filter, value, preserve){\n\t\tconst neworder = _to_array();\n\t\tconst freeze = this.$freeze || 0;\n\n\t\tfor (let i=0; i < this.order.length; i++){\n\t\t\tconst id = this.order[i];\n\t\t\tif (i < freeze || filter(this.getItem(id),value))\n\t\t\t\tneworder.push(id);\n\t\t}\n\t\t//set new order of items, store original\n\t\tif (!preserve || !this._filter_order)\n\t\t\tthis._filter_order = this.order;\n\t\tthis.order = neworder;\n\t},\n\tfind:function(config, first){\n\t\tconst result = [];\n\n\t\tfor(let i in this.pull){\n\t\t\tconst data = this.pull[i];\n\n\t\t\tlet match = true;\n\t\t\tif (typeof config == \"object\"){\n\t\t\t\tfor (let key in config)\n\t\t\t\t\tif (data[key] != config[key]){\n\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t} else if (!config(data))\n\t\t\t\tmatch = false;\n\n\t\t\tif (match)\n\t\t\t\tresult.push(data);\n\t\t\t\n\t\t\tif (first && result.length)\n\t\t\t\treturn result[0];\n\t\t}\n\n\t\treturn first ? null : result;\n\t},\n\tfilter:function(text,value,preserve){\n\t\t//unfilter call but we already in not-filtered state\n\t\tif (!text && !this._filter_order && !this._filter_branch) return;\n\t\tif (!this.callEvent(\"onBeforeFilter\", [text, value])) return;\n\t\t\n\t\tthis._filter_reset(preserve);\n\t\tif (!this.order.length) return;\n\n\t\t//if text not define -just unfilter previous state and exit\n\t\tif (text){\n\t\t\tlet filter = text;\n\t\t\tvalue = value||\"\";\n\t\t\tif (typeof text == \"string\"){\n\t\t\t\ttext = text.replace(/#/g,\"\");\n\t\t\t\tif (typeof value == \"function\")\n\t\t\t\t\tfilter = function(obj){\n\t\t\t\t\t\treturn value(obj[text]);\n\t\t\t\t\t};\n\t\t\t\telse{\n\t\t\t\t\tvalue = value.toString().toLowerCase();\n\t\t\t\t\tfilter = function(obj,value){\t//default filter - string start from, case in-sensitive\n\t\t\t\t\t\tassert(obj, \"Client side filtering can't be used with dynamic loading\");\n\t\t\t\t\t\treturn (obj[text]||\"\").toString().toLowerCase().indexOf(value)!=-1;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._filter_core(filter, value, preserve, this._filterMode);\n\t\t}\n\t\t//repaint self\n\t\tthis.refresh();\n\t\t\n\t\tthis.callEvent(\"onAfterFilter\", []);\n\t},\n\t/*\n\t\tIterate through collection\n\t*/\n\t_obj_array:function(){\n\t\tconst data = [];\n\t\tfor (let i = this.order.length - 1; i >= 0; i--)\n\t\t\tdata[i]=this.pull[this.order[i]];\n\n\t\treturn data;\n\t},\n\teach:function(method, master, all){\n\t\tlet order = this.order;\n\t\tif (all)\n\t\t\torder = this._filter_order || order;\n\n\t\tfor (let i = 0; i<order.length; i++){\n\t\t\tif(order[i])\n\t\t\t\tmethod.call((master||this), this.getItem(order[i]), i);\n\t\t}\n\t},\n\t_methodPush:function(object,method){\n\t\treturn function(){ return object[method].apply(object,arguments); };\n\t},\n\t/*\n\t\tmap inner methods to some distant object\n\t*/\n\tprovideApi:function(target,eventable){\n\t\t\t\n\t\tif (eventable){\n\t\t\tthis.mapEvent({\n\t\t\t\tonbeforesort:\ttarget,\n\t\t\t\tonaftersort:\ttarget,\n\t\t\t\tonbeforeadd:\ttarget,\n\t\t\t\tonafteradd:\t\ttarget,\n\t\t\t\tonbeforedelete:\ttarget,\n\t\t\t\tonafterdelete:\ttarget,\n\t\t\t\tondataupdate:\ttarget/*,\n\t\t\t\tonafterfilter:\ttarget,\n\t\t\t\tonbeforefilter:\ttarget*/\n\t\t\t});\n\t\t}\n\n\t\tconst list = [\"sort\",\"add\",\"remove\",\"exists\",\"getIdByIndex\",\"getIndexById\",\"getItem\",\"updateItem\",\"refresh\",\"count\",\"filter\",\"find\",\"getNextId\",\"getPrevId\",\"clearAll\",\"getFirstId\",\"getLastId\",\"serialize\",\"sync\"];\n\t\tfor (let i = 0; i < list.length; i++)\n\t\t\ttarget[list[i]] = this._methodPush(this,list[i]);\n\t},\n\taddMark:function(id, mark, css, value, silent){\n\t\tconst obj = this._marks[id]||{};\n\t\tthis._marks[id] = obj;\n\t\tif (!obj[mark]){\n\t\t\tobj[mark] = value||true;\n\t\t\tif (css){\n\t\t\t\tconst old_css = obj.$css||\"\";\n\t\t\t\tobj.$css = old_css+\" \"+mark;\n\t\t\t}\n\t\t\tif (!silent)\n\t\t\t\tthis.refresh(id);\n\t\t}\n\t\treturn obj[mark];\n\t},\n\tremoveMark:function(id, mark, css, silent){\n\t\tconst obj = this._marks[id];\n\t\tif (obj){\n\t\t\tif (obj[mark])\n\t\t\t\tdelete obj[mark];\n\t\t\tif (css){\n\t\t\t\tconst current_css = obj.$css;\n\t\t\t\tif (current_css){\n\t\t\t\t\tconst re = new RegExp(\"(\\\\s|^)\"+mark+\"(\\\\s|$)\");\n\t\t\t\t\tobj.$css = current_css.replace(re, (v,b,a) => b && a ? \" \" : \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!silent) \n\t\t\t\tthis.refresh(id);\n\t\t}\n\t},\n\tgetMark:function(id, mark){\n\t\tconst obj = this._marks[id];\n\t\treturn (obj ? obj[mark] : false);\n\t},\n\tclearMark:function(name, css, silent){\n\t\tfor (const id in this._marks){\n\t\t\tconst obj = this._marks[id];\n\t\t\tif (obj[name]){\n\t\t\t\tdelete obj[name];\n\t\t\t\tif (css && obj.$css){\n\t\t\t\t\tconst re = new RegExp(\"(\\\\s|^)\"+name+\"(\\\\s|$)\");\n\t\t\t\t\tobj.$css = obj.$css.replace(re, (v,b,a) => b && a ? \" \" : \"\");\n\t\t\t\t}\n\t\t\t\tif (!silent)\n\t\t\t\t\tthis.refresh(id);\n\t\t\t}\n\t\t}\n\t},\n\t/*\n\t\tserializes data to a json object\n\t*/\n\tserialize: function(all){\n\t\tlet ids = this.order;\n\t\tif (all && this._filter_order)\n\t\t\tids = this._filter_order;\n\n\t\tconst result = [];\n\t\tfor(let i=0; i< ids.length;i++) {\n\t\t\tlet el = this.pull[ids[i]];\n\t\t\tif (this._scheme_serialize){\n\t\t\t\tel = this._scheme_serialize(el);\n\t\t\t\tif (el===false) continue;\n\t\t\t}\n\t\t\tresult.push(el);\n\t\t}\n\t\treturn result;\n\t},\n\tsorting:{\n\t\tcreate:function(config){\n\t\t\tif (isArray(config))\n\t\t\t\treturn this._multi(config);\n\t\t\treturn this._dir(config.dir, this._by(config.by, config.as));\n\t\t},\n\t\tas:{\n\t\t\t//handled by dataFeed\n\t\t\t\"server\":function(){\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t\"date\":function(a,b){\n\t\t\t\ta = a-0; b = b-0;\n\t\t\t\tif (isNaN(b)) return 1;\n\t\t\t\tif (isNaN(a)) return -1;\n\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"int\":function(a,b){\n\t\t\t\ta = a*1; b = b*1;\n\t\t\t\tif (isNaN(b)) return 1;\n\t\t\t\tif (isNaN(a)) return -1;\n\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string_strict\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString(); b = b.toString();\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString().toLowerCase(); b = b.toString().toLowerCase();\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t},\n\t\t\t\"string_locale_strict\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString(); b = b.toString();\n\t\t\t\treturn a.localeCompare(b, i18n.locale);\n\t\t\t},\n\t\t\t\"string_locale\":function(a,b){\n\t\t\t\tif (!b && b !== \"\") return 1;\n\t\t\t\tif (!a && a !== \"\") return -1;\n\n\t\t\t\ta = a.toString().toLowerCase(); b = b.toString().toLowerCase();\n\t\t\t\treturn a.localeCompare(b, i18n.locale);\n\t\t\t},\n\t\t\t\"raw\":function(a,b){\n\t\t\t\treturn a>b?1:(a<b?-1:0);\n\t\t\t}\n\t\t},\n\t\t_multi:function(methods){\n\t\t\tmethods = methods.map(c => this._dir(c.dir, this._by(c.by, c.as)));\n\n\t\t\treturn function(a,b){\n\t\t\t\tlet result, i = 0;\n\t\t\t\tdo {\n\t\t\t\t\tresult = methods[i](a,b);\n\t\t\t\t} while(!result && methods[++i]);\n\t\t\t\treturn result;\n\t\t\t};\n\t\t},\n\t\t_by:function(prop, method){\n\t\t\tlet customMethod;\n\n\t\t\tif (typeof method != \"function\")\n\t\t\t\tmethod = this.as[method||\"string\"];\n\t\t\telse\n\t\t\t\tcustomMethod = true;\n\n\t\t\tassert(method, \"Invalid sorting method\");\n\t\t\treturn function(a,b){\n\t\t\t\tif(!customMethod){\n\t\t\t\t\ta = a[prop];\n\t\t\t\t\tb = b[prop];\n\t\t\t\t}\n\t\t\t\treturn method(a, b, prop);\n\t\t\t};\n\t\t},\n\t\t_dir:function(prop, method){\n\t\t\tif (prop == \"asc\" || !prop)\n\t\t\t\treturn method;\n\t\t\treturn function(a,b){\n\t\t\t\treturn method(a,b)*-1;\n\t\t\t};\n\t\t}\n\t}\n};\n\nexport default DataStore;","import {ajax} from \"../load/ajax\";\nimport {bind, delay, extend, toFunctor, isArray} from \"../webix/helpers\";\nimport {proto} from \"../ui/core\";\n\nimport {dp} from \"../load/dataprocessor\";\nimport proxy from \"../load/proxy\";\nimport promise from \"../thirdparty/promiz\";\n\nimport DataStore from \"../core/datastore\";\nimport AtomDataLoader from \"../core/atomdataloader\";\n\n\n/*\n\tBehavior:DataLoader - load data in the component\n\t\n\t@export\n\t\tload\n\t\tparse\n*/\nconst DataLoader =proto({\n\t$init:function(config){\n\t\t//prepare data store\n\t\tconfig = config || \"\";\n\n\t\tthis._feed_last = {};\n\t\tthis._data_generation = 0;\n\n\t\tthis.data = new DataStore();\n\t\tthis.data.attachEvent(\"onClearAll\", bind(this._call_onclearall, this));\n\t\tthis.data.attachEvent(\"onServerConfig\", bind(this._call_on_config, this));\n\t\tthis.attachEvent(\"onDestruct\", this._call_onclearall);\n\n\t\tthis.data.feed = this._feed;\n\t\tthis.data.owner = config.id;\n\t},\n\t_feed:function(from, count, callback, defer, clear){\n\t\t//allow only single request at same time\n\t\tif (this._load_count){\n\t\t\tdefer = promise.defer();\n\t\t\tthis._load_count = [from,count,callback,defer,clear];\t//save last ignored request\n\t\t\treturn defer;\n\t\t} else\n\t\t\tthis._load_count = true;\n\t\tthis._feed_last.from = from;\n\t\tthis._feed_last.count = count;\n\t\treturn this._feed_common.call(this, from, count, callback, defer, false, clear);\n\t},\n\t_feed_common:function(from, count, callback, defer, details, clear){\n\t\tlet url = this.data.url;\n\t\tif (from < 0) from = 0;\n\n\t\tif(!details)\n\t\t\tdetails = { start: from, count:count };\n\n\t\tif(this.count())\n\t\t\tdetails[\"continue\"] = \"true\";\n\n\t\tconst state = this.getState ? this.getState() : null;\n\t\t// proxy\n\t\tif (url && typeof url != \"string\"){\n\t\t\tif (state){\n\t\t\t\tif (state.sort)\n\t\t\t\t\tdetails.sort = state.sort;\n\t\t\t\tif (state.filter)\n\t\t\t\t\tdetails.filter = state.filter;\n\t\t\t}\n\t\t\treturn this.load(url, 0, details, clear).then(\n\t\t\t\tdata => this._feed_on_load(data, callback, defer),\n\t\t\t\t() => this._feed_callback()\n\t\t\t);\n\t\t} else { // GET\n\t\t\turl = url+((url.indexOf(\"?\")==-1)?\"?\":\"&\");\n\n\t\t\tvar params = [];\n\t\t\tfor(var d in details){\n\t\t\t\tparams.push(d+\"=\"+details[d]);\n\t\t\t}\n\t\t\tif (state){\n\t\t\t\tif (state.sort){\n\t\t\t\t\tvar sort = isArray(state.sort) ? state.sort : [state.sort];\n\t\t\t\t\tfor (var i=0; i<sort.length; i++)\n\t\t\t\t\t\tparams.push(\"sort[\"+sort[i].id+\"]=\"+encodeURIComponent(sort[i].dir));\n\t\t\t\t}\n\t\t\t\tif (state.filter)\n\t\t\t\t\tfor (var key in state.filter){\n\t\t\t\t\t\tvar filterValue = state.filter[key];\n\t\t\t\t\t\tif(typeof filterValue == \"object\")\n\t\t\t\t\t\t\tfilterValue = ajax().stringify(filterValue); //server daterangefilter\n\t\t\t\t\t\tparams.push(\"filter[\"+key+\"]=\"+encodeURIComponent(filterValue));\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\turl += params.join(\"&\");\n\t\t\tif (this._feed_last.url !== url){\n\t\t\t\tthis._feed_last.url = url;\n\t\t\t\treturn this.load(url, 0, null, clear).then(\n\t\t\t\t\tdata => this._feed_on_load(data, callback, defer),\n\t\t\t\t\t() => this._feed_callback()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis._load_count = false;\n\t\t\t\treturn promise.reject();\n\t\t\t}\n\t\t}\n\t},\n\t_feed_on_load:function(data, callback, defer){\n\t\tdelay(()=> this._feed_callback(), \"\", \"\", 100);\n\t\tif(callback)\n\t\t\tajax.$callback(this, callback, data);\n\t\tif(defer)\n\t\t\tdefer.resolve(data);\n\t\treturn data;\n\t},\n\t_feed_callback:function(){\n\t\t//after loading check if we have some ignored requests\n\t\tvar temp = this._load_count;\n\t\tthis._load_count = false;\n\t\tif (typeof temp ==\"object\")\n\t\t\tthis.data.feed.apply(this, temp);\t//load last ignored request\n\t},\n\t//loads data from external URL\n\tload:function(url){\n\t\turl = proxy.$parse(url);\n\t\tvar ajax = AtomDataLoader.load.apply(this, arguments);\n\n\t\t//prepare data feed for dyn. loading\n\t\tif (!this.data.url)\n\t\t\tthis.data.url = url;\n\n\t\treturn ajax;\n\t},\n\t//load next set of data rows\n\tloadNext:function(count, start, callback, url, now, clear){\n\t\tvar config = this._settings;\n\t\tif (config.datathrottle && !now){\n\t\t\tif (this._throttle_request)\n\t\t\t\twindow.clearTimeout(this._throttle_request);\n\n\t\t\tlet defer = promise.defer();\n\t\t\tthis._throttle_request = delay(function(){\n\t\t\t\tdefer.resolve(this.loadNext(count, start, callback, url, true, clear));\n\t\t\t},this, 0, config.datathrottle);\n\t\t\treturn defer;\n\t\t}\n\n\t\tif (!start && start !== 0) start = this.count();\n\t\tif (!count)\n\t\t\tcount = config.datafetch || this.count();\n\n\t\tthis.data.url = url || this.data.url;\n\t\tif (this.callEvent(\"onDataRequest\", [start,count,callback,url]) && this.data.url)\n\t\t\treturn this.data.feed.call(this, start, count, callback, false, clear);\n\t\treturn promise.reject();\n\t},\n\t_maybe_loading_already:function(count, from){\n\t\tvar last = this._feed_last;\n\t\tif(this._load_count && last.url){\n\t\t\tif (last.from<=from && (last.count+last.from >= count + from )) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tremoveMissed_setter:function(value){\n\t\treturn (this.data._removeMissed = value);\n\t},\n\t//init of dataprocessor delayed after all settings processing\n\t//because it need to be the last in the event processing chain\n\t//to get valid validation state\n\t_init_dataprocessor:function(){\n\t\tvar url = this._settings.save;\n\n\t\tif (url === true)\n\t\t\turl = this._settings.save = this._settings.url;\n\n\t\tvar obj = { master: this };\n\t\t\n\t\tif (url && url.url)\n\t\t\textend(obj, url);\n\t\telse\n\t\t\tobj.url = url;\n\n\t\tdp(obj);\n\t},\n\tsave_setter:function(value){\n\t\tif (value)\n\t\t\tthis.$ready.push(this._init_dataprocessor);\n\n\t\treturn value;\n\t},\n\twaitSave:function(handler){\n\t\treturn dp(this)._promise(() => {\n\t\t\thandler.call(this);\n\t\t}).then(many => many.length == 1 ? many[0] : many);\n\t},\n\tscheme_setter:function(value){\n\t\tthis.data.scheme(value);\n\t},\n\tdataFeed_setter:function(value){\n\t\tvalue = proxy.$parse(value);\n\n\t\tthis.data.attachEvent(\"onBeforeFilter\", bind(function(text, filtervalue){\n\t\t\tvar result;\n\n\t\t\t//complex filtering, can't be routed to dataFeed\n\t\t\tif (typeof text == \"function\") return true;\n\n\t\t\t//we have dataFeed and some text\n\t\t\tif (this._settings.dataFeed && (text || filtervalue)){\n\t\t\t\ttext = text || \"id\";\n\t\t\t\tif (filtervalue && typeof filtervalue == \"object\")\n\t\t\t\t\tfiltervalue = filtervalue.id;\n\n\t\t\t\tvar url = this._settings.dataFeed;\n\n\t\t\t\t//url data feed\n\t\t\t\tif(typeof url ==\"string\"){\n\t\t\t\t\tvar urldata = \"filter[\"+text+\"]=\"+encodeURIComponent(filtervalue);\n\t\t\t\t\tresult = this._fetch(\n\t\t\t\t\t\turl+(url.indexOf(\"?\")<0?\"?\":\"&\")+urldata,\n\t\t\t\t\t\tthis._settings.datatype\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t//js data feed\n\t\t\t\telse{\n\t\t\t\t\tvar filter = {};\n\t\t\t\t\tfilter[text] = filtervalue;\n\t\t\t\t\tif (typeof url == \"function\"){\n\t\t\t\t\t\tresult = url.call(this, filtervalue, filter);\n\t\t\t\t\t} else if (url.$proxy && url.load) {\n\t\t\t\t\t\tresult = url.load(this, { filter });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (result){\n\t\t\t\t\tif (!result.then)\n\t\t\t\t\t\tresult = promise.resolve(result);\n\n\t\t\t\t\tresult.then(\n\t\t\t\t\t\tdata => {\n\t\t\t\t\t\t\tthis._onLoad(data, true);\n\t\t\t\t\t\t\tthis.data.callEvent(\"onAfterFilter\", []);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tx => this._onLoadError(x)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},this));\n\t\treturn value;\n\t},\n\t_call_onready:function(){\n\t\tif (this._settings.ready && !this._ready_was_used){\n\t\t\tvar code = toFunctor(this._settings.ready, this.$scope);\n\t\t\tif (code)\n\t\t\t\tdelay(code, this, arguments);\n\t\t\tif (this.callEvent)\n\t\t\t\tdelay(this.callEvent, this, [\"onReady\", []]);\n\t\t\tthis._ready_was_used = true;\n\t\t}\n\t},\n\t_call_onclearall:function(soft){\n\t\tthis._data_generation++;\n\t\tif (!soft){\n\t\t\tthis._load_count = false;\n\t\t\tthis._feed_last = {};\n\t\t\tthis.waitData = promise.defer();\n\t\t}\n\t},\n\t_call_on_config:function(config){\n\t\tthis._parseSeetingColl(config);\n\t}\n},AtomDataLoader);\n\n\n\nexport default DataLoader;","import {pos, offset} from \"../webix/html\";\nimport {use} from \"../services\";\nimport Touch from \"../core/touch\";\nimport {extend, delay, _power_array, isArray} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport DragControl from \"../core/dragcontrol\";\nimport AutoScroll from \"../core/autoscroll\";\n\n\n/*\n\tBehavior:DragItem - adds ability to move items by dnd\n\t\n\tdnd context can have next properties\n\t\tfrom - source object\n\t\tto - target object\n\t\tsource - id of dragged item(s)\n\t\ttarget - id of drop target, null for drop on empty space\n\t\tstart - id from which DND was started\n*/\n\nconst DragItem ={\n\t//helper - defines component's container as active zone for dragging and for dropping\n\t_initHandlers:function(obj, source, target){\n\t\tif (!source) DragControl.addDrop(obj._contentobj,obj,true);\n\t\tif (!target) DragControl.addDrag(obj._contentobj,obj);\n\t\tthis.attachEvent(\"onDragOut\",function(a,b){ this.$dragMark(a,b); });\n\t\tthis.attachEvent(\"onBeforeAutoScroll\",function(){\n\t\t\tvar context = DragControl.getContext();\n\t\t\treturn !!(DragControl._active && context && (context.to === this || this._auto_scroll_force));\n\t\t});\n\t},\n\tdrag_setter:function(value){\n\t\tif (value){\n\t\t\textend(this, AutoScroll, true);\n\t\t\tif (value == \"order\" || value == \"move\")\n\t\t\t\textend(this, use(\"DragOrder\"), true);\n\t\t\tif (value == \"inner\" || value == \"order\")\n\t\t\t\tthis._inner_drag_only = true;\n\n\t\t\tthis._initHandlers(this, value == \"source\", value == \"target\");\n\t\t\tdelete this.drag_setter;\t//prevent double initialization\n\t\t}\n\t\treturn value;\n\t},\n\t/*\n\t\ts - source html element\n\t\tt - target html element\n\t\td - drop-on html element ( can be not equal to the target )\n\t\te - native html event \n\t*/\n\t//called when drag moved over possible target\n\t$dragIn:function(s,t,e){\n\t\tvar id = this.locate(e) || null;\n\t\tvar context = DragControl._drag_context;\n\n\t\t//in inner drag mode - ignore dnd from other components\n\t\tif ((this._inner_drag_only || context.from._inner_drag_only) && context.from !== this) return false;\n\n\t\tvar to = DragControl.getMaster(t);\n\t\t//previous target\n\t\tvar html = (this.getItemNode(id, e)||this._dataobj);\n\t\t//prevent double processing of same target\n\t\tif (html == DragControl._landing) return html;\n\t\tcontext.target = id;\n\t\tcontext.to = to;\n\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\tconst fragile = (this._touch_scroll && !this._settings.prerender);\n\t\tif (this._settings.dragscroll !== false  && !fragile)\n\t\t\tthis._auto_scroll_delay = delay(function(pos,id){\n\t\t\t\tthis._drag_pause(id);\n\t\t\t\tthis._auto_scroll(pos,id);\n\t\t\t}, this, [pos(e), id], 250);\n\n\t\tif (!this.$dropAllow(context, e)  || !this.callEvent(\"onBeforeDragIn\",[context, e])){\n\t\t\tcontext.to = context.target = null;\n\t\t\tif (this._auto_scroll_delay)\n\t\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\t\t\treturn null;\n\t\t}\n\t\t//mark target only when landing confirmed\n\t\tthis.$dragMark(context,e);\n\t\treturn html;\n\t},\n\t$dropAllow:function(){\n\t\treturn true;\n\t},\n\t_drag_pause:function(){\n\t\t//may be reimplemented in some components\n\t\t// tree for example\n\t},\n\t_target_to_id:function(target){\n\t\treturn target && typeof target === \"object\" ? target.toString() : target;\n\t},\n\t//called when drag moved out from possible target\n\t$dragOut:function(s,t,n,e){\n\t\tvar id = (this._viewobj.contains(n) ? this.locate(e): null) || null;\n\t\tvar context = DragControl._drag_context;\n\n\t\t//still over previous target\n\t\tif ((context.target||\"\").toString() == (id||\"\").toString()) return null;\n\t\tif (this._auto_scroll_delay)\n\t\t\tthis._auto_scroll_delay = window.clearTimeout(this._auto_scroll_delay);\n\n\t\t//unmark previous target\n\t\tcontext.target = context.to = null;\n\t\tthis.callEvent(\"onDragOut\",[context,e]);\n\t\treturn null;\n\t},\n\t//called when drag moved on target and button is released\n\t$drop:function(s,t,e){\n\t\tvar context = DragControl._drag_context;\n\t\t//finalize context details\n\t\tcontext.to = this;\n\t\tthis._define_index(s,t,context);\n\n\t\t//unmark last target\n\t\tthis.$dragMark({}, e);\n\n\t\tif( context.from && context.from != context.to && context.from.callEvent ){\n\t\t\tif(!context.from.callEvent(\"onBeforeDropOut\", [context,e]))\n\t\t\t\treturn;\n\t\t}\n\n\t\tif (!this.callEvent(\"onBeforeDrop\",[context,e])) return;\n\t\t//moving\n\t\tthis._context_to_move(context,e);\n\t\t\n\t\tthis.callEvent(\"onAfterDrop\",[context,e]);\n\t},\n\t_define_index:function(s,t,context){\n\t\tvar target = this._target_to_id(context.target);\n\n\t\tif (this.getBranchIndex){\n\t\t\tif (target){\n\t\t\t\tcontext.parent = this.getParentId(target);\n\t\t\t\tcontext.index = this.getBranchIndex(target);\n\t\t\t} else context.index = -1;\n\t\t} else\n\t\t\tcontext.index = target?this.getIndexById(target):this.count();\n\t},\n\t_context_to_move:function(context){\n\t\tassert(context.from, \"Unsopported d-n-d combination\");\n\t\tif (context.from && context.from.move){\t//from different component with item dnd\n\t\t\tvar details = { parent: context.parent, mode: context.pos };\n\t\t\tcontext.from.move(context.source,context.index,context.to, details);\n\t\t}\n\t},\n\t$longTouchLimit: true,\n\t_getDragItemPos: function(pos,e){\n\t\tif (this.getItemNode){\n\t\t\tvar id = this.locate(e, true);\n\t\t\t//in some case, node may be outiside of dom ( spans in datatable for example )\n\t\t\t//so getItemNode can return null\n\t\t\tvar node = id ? this.getItemNode(id) : null;\n\t\t\treturn node ? offset(node) : node;\n\t\t}\n\t},\n\t//called when drag action started\n\t$drag:function(s,e){\n\t\tvar id = this.locate(e, true);\n\t\tif (id){\n\t\t\tvar list = [id];\n\n\t\t\tif (this.getSelectedId){ //has selection model\n\t\t\t\t//if dragged item is one of selected - drag all selected\n\t\t\t\tvar selection = this.getSelectedId(true, true);\t\n\n\t\t\t\tif (selection && selection.length > 1 && _power_array.find.call(selection,id)!=-1){\n\t\t\t\t\tvar hash = {}; \n\t\t\t\t\tlist = [];\n\t\t\t\t\tfor (let i=0;i<selection.length; i++)\n\t\t\t\t\t\thash[selection[i]]=true;\n\t\t\t\t\tfor (let i = 0; i<this.data.order.length; i++){\n\t\t\t\t\t\tvar hash_id = this.data.order[i];\n\t\t\t\t\t\tif (hash[hash_id])\n\t\t\t\t\t\t\tlist.push(hash_id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//save initial dnd params\n\t\t\tvar context = DragControl._drag_context = { source:list, start:id };\n\t\t\tcontext.from = this;\n\n\t\t\tif (this.callEvent(\"onBeforeDrag\",[context,e])){\n\t\t\t\tif (Touch._start_context)\n\t\t\t\t\tdelay(function(){ Touch._start_context = null; });\n\n\t\t\t\t//set drag representation\n\t\t\t\treturn context.html||this.$dragHTML(this.getItem(id), e, context);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\t$dragHTML:function(obj,e,context){\n\t\tlet html = this._toHTML(obj);\n\t\tif ( isArray(context.source) && context.source.length > 1 )\n\t\t\thtml = this._toMultipleHTML(html, context.source.length);\n\t\treturn html;\n\t},\n\t_toMultipleHTML:function(html, len){\n\t\thtml = \"<div class='webix_drag_main'>\"+html+\"</div>\";\n\t\tlet multiple = \"<div class='webix_drag_multiple'></div>\";\n\t\tif ( len > 2 )\n\t\t\tmultiple = \"<div class='webix_drag_multiple_last'></div>\" + multiple;\n\t\treturn multiple+html+\"<span class='webix_badge'>\"+len+\"</span>\";\n\t},\n\t$dragMark:function(context){\n\t\tvar target = null;\n\t\tif (context.target)\n\t\t\ttarget = this._target_to_id(context.target);\n\n\t\t//touch webkit will stop touchmove event if source node removed\n\t\tif (this._marked && this._marked != target){\n\t\t\tthis._remove_css([this._marked], \"webix_drag_over\", true);\n\t\t\tthis._marked = null;\n\t\t}\n\n\t\tif (!this._marked && target){\n\t\t\tthis._marked = target;\n\t\t\tthis._add_css([target], \"webix_drag_over\", true);\n\t\t\treturn target;\n\t\t}\n\t\t\n\t\treturn !!context.to;\n\t},\n\t_add_css:function(source, css){\n\t\tfor (let i=0; i<source.length; i++)\n\t\t\tthis.addCss(source[i], css);\n\t},\n\t_remove_css:function(source, css){\n\t\tfor (let i=0; i<source.length; i++)\n\t\t\tthis.removeCss(source[i], css);\n\t},\n\n\t// methods used in order/move modes\n\t$dropHTML: function(){\n\t\treturn \"\";\n\t},\n\t_set_drop_area:function(target, t){\n\t\tconst node = this.getItemNode(target);\n\t\tif (node){\n\t\t\tnode.parentNode.insertBefore(DragControl._dropHTML[0], node);\n\t\t} else t.children[0].appendChild(DragControl._dropHTML[0]);\n\t}\n};\n\nexport default DragItem;","import {extend, copy, _power_array} from \"../webix/helpers\";\n\n\nconst Undo = {\n\t$init:function(){\n\t\tthis._undoHistory = extend([],_power_array,true);\n\t\tthis._undoCursor = -1;\n\t},\n\tundo_setter: function(value){\n\t\tif(value){\n\t\t\tthis._init_undo();\n\t\t\tthis._init_undo = function(){};\n\t\t}\n\t\treturn value;\n\t},\n\t_init_undo: function(){\n\t\tvar view = this;\n\n\t\t// drag-n-drop\n\t\tthis.attachEvent(\"onBeforeDrop\", function(context){\n\t\t\tif(context.from == context.to){\n\t\t\t\tvar item = view._draggedItem = copy(this.getItem(context.start));\n\t\t\t\tif(this.data.branch){\n\t\t\t\t\titem.$index = this.getBranchIndex(item.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\titem.$index = this.getIndexById(item.id);\n\t\t\t}\n\t\t});\n\t\tthis.data.attachEvent(\"onDataMove\", function( sid ){\n\t\t\tif(view._draggedItem && view._draggedItem.id == sid){\n\t\t\t\tvar data = view._draggedItem;\n\t\t\t\tview._draggedItem = null;\n\t\t\t\tview._addToHistory(sid, data, \"move\");\n\t\t\t}\n\t\t});\n\n\t\t// add, remove\n\t\tthis.data.attachEvent(\"onBeforeDelete\", function(id){\n\t\t\tif(this.getItem(id)){\n\t\t\t\tvar item = view._deletedItem = copy(this.getItem(id));\n\t\t\t\tif(this.branch){\n\t\t\t\t\titem.$index = this.getBranchIndex(id);\n\t\t\t\t\tif(this.branch[id])\n\t\t\t\t\t\titem.$branch = copy(this.serialize(id));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\titem.$index = this.getIndexById(id);\n\t\t\t}\n\t\t});\n\t\tthis.data.attachEvent(\"onDataUpdate\", function(id, data, old){\n\t\t\tview._addToHistory(id+\"\", old, \"update\");\n\t\t});\n\t\tthis.data.attachEvent(\"onStoreUpdated\", function(id, item, mode){\n\t\t\tvar data = null;\n\t\t\tif(id){\n\t\t\t\tif(mode == \"add\"){\n\t\t\t\t\tdata = copy(item);\n\t\t\t\t}\n\t\t\t\telse if( mode == \"delete\") {\n\t\t\t\t\tdata = view._deletedItem;\n\t\t\t\t}\n\n\t\t\t\tif(data)\n\t\t\t\t\tview._addToHistory(id, data, mode);\n\t\t\t}\n\t\t});\n\n\t\t// id change\n\t\tthis.data.attachEvent(\"onIdChange\", function(oldId,newId){\n\t\t\tif(typeof oldId == \"object\")\n\t\t\t\toldId = oldId.row;\n\t\t\tfor(var i =0; i < view._undoHistory.length; i++){\n\t\t\t\tif(view._undoHistory[i].id == oldId){\n\t\t\t\t\tview._undoHistory[i].id = newId;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_addToHistory: function(id, data, action){\n\t\tif(!this._skipHistory && this._settings.undo){\n\t\t\tthis._undoHistory.push({id: id, action: action, data: data});\n\t\t\tconst undoLimit = this._settings.undoLimit || 20;\n\t\t\tif(this._undoHistory.length > undoLimit)\n\t\t\t\tthis._undoHistory.splice(0,1);\n\t\t\tif(!this._skipCursorInc)\n\t\t\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t\t}\n\t},\n\tignoreUndo: function(func, master){\n\t\tthis._skipHistory = true;\n\t\tfunc.call(master||this);\n\t\tthis._skipHistory = false;\n\t},\n\tremoveUndo: function(id){\n\t\tfor( var i = this._undoHistory.length-1; i >=0; i--){\n\t\t\tif(this._undoHistory[i].id == id){\n\t\t\t\tif(this._undoHistory[i].action == \"id\"){\n\t\t\t\t\tid = this._undoHistory[i].data;\n\t\t\t\t}\n\t\t\t\tthis._undoHistory.removeAt(i);\n\t\t\t}\n\t\t}\n\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t},\n\tundo: function(id){\n\t\tif(id){\n\t\t\tthis.ignoreUndo(function(){\n\t\t\t\tvar data, i;\n\t\t\t\tfor( i = this._undoHistory.length-1; !data && i >=0; i--){\n\t\t\t\t\tif(this._undoHistory[i].id == id)\n\t\t\t\t\t\tdata = this._undoHistory[i];\n\t\t\t\t}\n\n\t\t\t\tif(data){\n\t\t\t\t\t/*if(data.action == \"id\")\n\t\t\t\t\t\tid = data.data;*/\n\t\t\t\t\tthis._undoAction(data);\n\t\t\t\t\tthis._undoHistory.removeAt(i+1);\n\t\t\t\t\tthis._undoCursor = this._undoHistory.length - 1;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tvar data = this._undoHistory[this._undoCursor];\n\t\t\tif(data){\n\t\t\t\tthis.ignoreUndo(function(){\n\t\t\t\t\tthis._undoAction(data);\n\t\t\t\t\tthis._undoHistory.removeAt(this._undoCursor);\n\t\t\t\t});\n\t\t\t\tthis._undoCursor--;\n\t\t\t\t/*if(data.action == \"id\")\n\t\t\t\t\tthis.undo();*/\n\t\t\t}\n\t\t}\n\t},\n\t_undoAction: function(obj){\n\t\tif(obj.action == \"delete\"){\n\t\t\tvar branch = null,\n\t\t\t\tparentId = obj.data.$parent;\n\n\t\t\tif(obj.data.$branch){\n\t\t\t\tbranch = {\n\t\t\t\t\tparent: obj.id,\n\t\t\t\t\tdata: copy(obj.data.$branch)\n\t\t\t\t};\n\t\t\t\tdelete obj.data.$branch;\n\t\t\t\tif(parentId && !this.data.pull[parentId])\n\t\t\t\t\tparentId = 0;\n\t\t\t}\n\n\t\t\tthis.add(obj.data, obj.data.$index, parentId);\n\t\t\tif(branch){\n\t\t\t\tthis.parse(branch);\n\t\t\t}\n\t\t}\n\t\telse if(obj.action == \"add\"){\n\t\t\tthis.remove(obj.id);\n\t\t}\n\t\telse if(obj.action == \"update\"){\n\t\t\tthis.updateItem(obj.id, obj.data);\n\t\t}\n\t\telse if(obj.action == \"move\"){\n\t\t\tif(obj.data.$parent){\n\t\t\t\tif(this.getItem(obj.data.$parent))\n\t\t\t\t\tthis.move(obj.id, obj.data.$index, null, {parent: obj.data.$parent});\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.move(obj.id, obj.data.$index);\n\t\t}\n\t\t/*else if(obj.action == \"id\"){\n\t\t\tthis.data.changeId(obj.id, obj.data);\n\t\t}*/\n\t}\n};\n\nexport default Undo;","import {create} from \"../webix/html\";\nimport {isArray, isUndefined, copy, toNode, delay, extend} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\nfunction init_suggest(editor, input){\n\tconst suggest = editor.config.suggest;\n\tif (suggest){\n\t\tconst box = editor.config.suggest = create_suggest(suggest);\n\t\tconst boxobj = $$(box);\n\t\tif (boxobj && input)\n\t\t\tboxobj.linkInput(input);\n\t\treturn boxobj;\n\t}\n}\n\nfunction attach_editend(suggest){\n\tif (suggest && suggest.setMasterValue && !suggest._editor_initialized){\n\t\tsuggest._editor_initialized = true;\n\t\tsuggest.attachEvent(\"onValueSuggest\", function(){\n\t\t\tdelay(()=>callEvent(\"onEditEnd\", []));\n\t\t});\n\t}\n}\n\nfunction create_suggest(config){\n\tif (typeof config == \"string\") return config;\n\tif (config.linkInput) return config._settings.id;\n\n\tif (typeof config == \"object\"){\n\t\tif (isArray(config))\n\t\t\tconfig = { data: config };\n\t\tconfig.view = config.view || \"suggest\";\n\t} else if (config === true)\n\t\tconfig = { view:\"suggest\" };\n\n\tconst obj = ui(config);\n\treturn obj.config.id;\n}\n\nfunction getLabel(config){\n\tconst text = (config.header && config.header[0]) ? config.header[0].text : config.editValue||config.label;\n\treturn (text || \"\").toString().replace(/<[^>]*>/g, \"\");\n}\n\n/*\nthis.node - html node, available after render call\nthis.config - editor config\nthis.value - original value\nthis.popup - id of popup \n*/\nconst editors = {\n\t\"text\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode(this.node).focus();\n\t\t\tthis.getInputNode(this.node).select();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode(this.node).value;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tconst input = this.getInputNode(this.node);\n\t\t\tinput.value = value;\n\n\t\t\tconst suggest = init_suggest(this, input);\n\t\t\tattach_editend(suggest);\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<input type='text' aria-label='\"+getLabel(this.config)+\"'>\");\n\t\t}\n\t},\n\t\"inline-checkbox\":{\n\t\trender:function(){ return {}; },\n\t\tgetValue:function(){\n\t\t\treturn this.node.checked;\n\t\t},\n\t\tsetValue:function(){},\n\t\tfocus:function(){\n\t\t\tthis.node.focus();\n\t\t},\n\t\tgetInputNode:function(){},\n\t\t$inline:true\n\t},\n\t\"inline-text\":{\n\t\trender:function(){ return {}; },\n\t\tgetValue:function(){\n\t\t\treturn this.node.value;\n\t\t},\n\t\tsetValue:function(){},\n\t\tfocus:function(){\n\t\t\tthis.node.focus();\n\t\t\tthis.node.select();\n\t\t},\n\t\tgetInputNode:function(){},\n\t\t$inline:true\n\t},\n\t\"checkbox\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().checked;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getInputNode().checked = !!value;\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<div><input type='checkbox' aria-label='\"+getLabel(this.config)+\"'></div>\");\n\t\t}\n\t},\n\t\"select\":{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().value;\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getInputNode().value = value;\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.node.firstChild;\n\t\t},\n\t\trender:function(){\n\t\t\tlet html = \"\";\n\t\t\tconst options = this.config.options || this.config.collection;\n\t\t\tassert(options,\"options not defined for select editor\");\n\n\t\t\tif (options.data && options.data.each)\n\t\t\t\toptions.data.each(function(obj){\n\t\t\t\t\thtml +=\"<option value='\"+obj.id+\"'>\"+obj.value+\"</option>\";\n\t\t\t\t});\n\t\t\telse {\n\t\t\t\tif (isArray(options)){\n\t\t\t\t\tfor (let i = 0; i < options.length; i++){\n\t\t\t\t\t\tconst rec = options[i];\n\t\t\t\t\t\tconst isplain = isUndefined(rec.id);\n\t\t\t\t\t\tconst id = isplain ? rec : rec.id;\n\t\t\t\t\t\tconst label = isplain ? rec : rec.value;\n\n\t\t\t\t\t\thtml +=\"<option value='\"+id+\"'>\"+label+\"</option>\";\n\t\t\t\t\t}\n\t\t\t\t} else for (let key in options){\n\t\t\t\t\thtml +=\"<option value='\"+key+\"'>\"+options[key]+\"</option>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn create(\"div\", {\n\t\t\t\t\"class\":\"webix_dt_editor\"\n\t\t\t}, \"<select aria-label='\"+getLabel(this.config)+\"'>\"+html+\"</select>\");\n\t\t}\n\t},\n\tpopup:{\n\t\tfocus:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\tdestroy:function(){\n\t\t\tthis.getPopup().hide();\n\t\t},\n\t\tgetValue:function(){\n\t\t\treturn this.getInputNode().getValue()||\"\";\n\t\t},\n\t\tsetValue:function(value){\n\t\t\tthis.getPopup().show(this.node);\n\t\t\tthis.getInputNode().setValue(value);\n\t\t},\n\t\tgetInputNode:function(){\n\t\t\treturn this.getPopup().getChildViews()[0];\n\t\t},\n\t\tgetPopup:function(){\n\t\t\tlet id = this.config.$popup;\n\n\t\t\tif (!(id && $$(id)))\n\t\t\t\tid = this.config.$popup = this.createPopup();\n\n\t\t\treturn $$(id);\n\t\t},\n\t\tcreatePopup:function(){\n\t\t\tconst popup = this.config.popup || this.config.suggest;\n\t\t\tif (popup){\n\t\t\t\tlet pobj;\n\t\t\t\tif (typeof popup == \"object\" && !popup.name){\n\t\t\t\t\tpopup.view = popup.view || \"suggest\";\n\t\t\t\t\tpobj = ui(copy(popup));\n\t\t\t\t} else\n\t\t\t\t\tpobj = $$(popup);\n\n\t\t\t\t//custom popup may be linked already\n\t\t\t\tif(!pobj._linked){\n\t\t\t\t\tif (pobj.linkInput)\n\t\t\t\t\t\tpobj.linkInput(document.body);\n\t\t\t\t\telse if(this.linkInput)\n\t\t\t\t\t\tthis.linkInput(document.body);\n\t\t\t\t\tpobj._linked = true;\n\t\t\t\t}\n\t\t\t\tattach_editend(pobj);\n\n\t\t\t\treturn pobj;\n\t\t\t}\n\n\t\t\tconst editor = editors.$popup[this.popupType];\n\t\t\tlet popupId = editor.$popup;\n\n\t\t\tif(!(popupId && $$(popupId))){\n\t\t\t\tconst popup = ui(copy(editor));\n\t\t\t\tif(!popup.linkInput && !popupId)\n\t\t\t\t\tthis.linkInput(document.body);\n\t\t\t\teditor.$popup = popupId = popup._settings.id;\n\t\t\t\tthis.popupInit(popup);\n\t\t\t}\n\n\t\t\treturn popupId;\n\t\t},\n\t\tlinkInput:function(node){\n\t\t\t_event(toNode(node), \"keydown\", e => {\n\t\t\t\t//abort, when editor was not initialized yet\n\t\t\t\tif (!this.config.$popup) return;\n\n\t\t\t\tconst code = e.which || e.keyCode, list = this.getInputNode();\n\t\t\t\tif(!list.isVisible()) return;\n\n\t\t\t\tif(list.moveSelection && code < 41 && code > 32){\n\t\t\t\t\tlet dir;\n\t\t\t\t\tif(code == 33) dir = \"pgup\";\n\t\t\t\t\telse if(code == 34) dir = \"pgdown\";\n\t\t\t\t\telse if(code == 35) dir = \"bottom\";\n\t\t\t\t\telse if(code == 36) dir = \"top\";\n\t\t\t\t\telse if(code == 37) dir = \"left\";\n\t\t\t\t\telse if(code == 38) dir = \"up\";\n\t\t\t\t\telse if(code == 39) dir = \"right\";\n\t\t\t\t\telse if(code == 40) dir = \"down\";\n\n\t\t\t\t\tlist.moveSelection(dir);\n\t\t\t\t}\n\t\t\t\t// shift+enter support for 'popup' editor\n\t\t\t\telse if(code === 13 && ( e.target.nodeName !==\"TEXTAREA\" || !e.shiftKey))\n\t\t\t\t\tcallEvent(\"onEditEnd\", []);\n\t\t\t\n\t\t\t});\n\t\t},\n\n\t\tpopupInit:function(){},\n\t\tpopupType:\"text\",\n\t\trender:function(){ return {}; },\n\t\t$inline:true\n\t}\n};\n\neditors.color = extend({\n\tfocus:function(){},\n\tpopupType:\"color\",\n\tpopupInit:function(popup){\n\t\tpopup.getChildViews()[0].attachEvent(\"onItemClick\", function(value){\n\t\t\tcallEvent(\"onEditEnd\",[value]);\n\t\t});\n\t}\n}, editors.popup);\n\neditors.date = extend({\n\tfocus:function(){},\n\tpopupType:\"date\",\n\tsetValue:function(value){\n\t\tthis._is_string = this.config.stringResult || (value && typeof value == \"string\");\n\t\teditors.popup.setValue.call(this, value);\n\t},\n\tgetValue:function(){\n\t\treturn this.getInputNode().getValue(this._is_string?i18n.parseFormatStr:\"\")||\"\";\n\t},\n\tpopupInit:function(popup){\n\t\tpopup.getChildViews()[0].attachEvent(\"onAfterDateSelect\", function(value){\n\t\t\tcallEvent(\"onEditEnd\",[value]);\n\t\t});\n\t}\n}, editors.popup);\n\neditors.combo = extend({\n\t_create_suggest:function(config){\n\t\tlet suggest, id;\n\t\tif (this.config.popup){\n\t\t\tsuggest = this.config.popup;\n\t\t\tid = suggest.config.id;\n\t\t}\n\t\telse if (config){\n\t\t\tid = create_suggest(config);\n\t\t\tsuggest = $$(id);\n\t\t} else\n\t\t\tid = this._shared_suggest(config);\n\n\t\tattach_editend(suggest);\n\t\treturn id;\n\t},\n\t_shared_suggest:function(){\n\t\tconst e = editors.combo;\n\n\t\tif(e._suggest && $$(e._suggest))\n\t\t\treturn e._suggest;\n\n\t\treturn e._suggest = this._create_suggest(true);\n\t},\n\trender:function(){\n\t\tconst node = create(\"div\", {\n\t\t\t\"class\":\"webix_dt_editor\"\n\t\t}, \"<input type='text' role='combobox' aria-label='\"+getLabel(this.config)+\"'>\");\n\n\t\t//save suggest id for future reference\t\t\n\t\tconst suggest = this.config.suggest = this._create_suggest(this.config.suggest);\n\n\t\tif (suggest){\n\t\t\t$$(suggest).linkInput(node.firstChild, true);\n\t\t\t_event(node.firstChild, \"click\", () => this.showPopup());\n\t\t}\n\t\treturn node;\n\t},\n\tgetPopup:function(){\n\t\treturn $$(this.config.suggest);\n\t},\n\tshowPopup:function(){\n\t\tconst popup = this.getPopup();\n\t\tconst list = popup.getList();\n\t\tconst input = this.getInputNode();\n\t\tconst value = this._initial_value;\n\n\t\tpopup.show(input);\n\t\tinput.setAttribute(\"aria-expanded\", \"true\");\n\t\tif (value){\n\t\t\tassert(list.exists(value), \"Option with ID \"+value+\" doesn't exist\");\n\t\t\tif (list.exists(value)){\n\t\t\t\tlist.select(value);\n\t\t\t\tlist.showItem(value);\n\t\t\t}\n\t\t} else {\n\t\t\tlist.unselect();\n\t\t\tlist.showItem(list.getFirstId());\n\t\t}\n\t\tpopup._last_input_target = input;\n\t},\n\tafterRender:function(){\n\t\tthis.showPopup();\n\t},\n\tsetValue:function(value){\n\t\tthis._initial_value = value;\n\t\tif (this.config.suggest){\n\t\t\tconst sobj = $$(this.config.suggest);\n\t\t\tconst data = this.config.collection || this.config.options;\n\t\t\tif (data)\n\t\t\t\tsobj.getList().data.importData(data);\n\n\t\t\tthis.getInputNode(this.node).value = sobj.getItemText(value);\n\t\t}\n\t},\n\tgetValue:function(){\n\t\tlet value = this.getInputNode().value;\n\t\tif (this.config.suggest){\n\t\t\tconst suggest = $$(this.config.suggest),\n\t\t\t\tlist = suggest.getList();\n\t\t\tif (value || (list.getSelectedId && list.getSelectedId()))\t\n\t\t\t\tvalue = suggest.getSuggestion(value);\n\t\t}\n\t\treturn value;\n\t}\n}, editors.text);\n\neditors.richselect = extend({\n\tfocus:function(){},\n\tgetValue:function(){\n\t\treturn this.getPopup().getValue();\n\t},\n\tsetValue:function(value){\n\t\tconst suggest = this.config.collection || this.config.options;\n\t\tthis.getInputNode();\n\t\tif (suggest)\n\t\t\tthis.getPopup().getList().data.importData(suggest);\n\n\t\tthis.getPopup().show(this.node);\n\t\tthis.getPopup().setValue(value);\n\t},\n\tgetInputNode:function(){\n\t\treturn this.getPopup().getList();\n\t},\n\tpopupInit:function(popup){\n\t\tpopup.linkInput(document.body);\n\t\tattach_editend(popup);\n\t},\n\tpopupType:\"richselect\"\n}, editors.popup);\n\neditors.password = extend({\n\trender:function(){\n\t\tconst node = create(\"div\", {\n\t\t\t\"class\":\"webix_dt_editor webix_password_editor\"\n\t\t}, \"<input type='password' aria-label='\"+getLabel(this.config)+\"'><span class='webix_icon wxi-eye'></span>\");\n\n\t\tconst icon = node.querySelector(\".webix_icon\");\n\t\t_event(icon, \"click\", () => {\n\t\t\tthis.toggleInput();\n\t\t\tthis.getInputNode(this.node).focus();\n\t\t});\n\t\treturn node;\n\t},\n\ttoggleInput:function(){\n\t\tconst input = this.getInputNode(this.node);\n\t\tconst isPassword = input.getAttribute(\"type\") === \"password\";\n\t\tinput.setAttribute(\"type\", isPassword ? \"text\" : \"password\");\n\n\t\tconst icon = input.nextSibling;\n\t\ticon.className = `webix_icon wxi-eye${isPassword ? \"-slash\" : \"\"}`;\n\t},\n\tmasterFormat: function(value){\n\t\treturn !value && value !== 0 ? \"\" : \"&bull;\".repeat(value.toString().length);\n\t}\n}, editors.text);\n\neditors.$popup = {\n\ttext:{\n\t\tview:\"popup\", width:250, height:150,\n\t\tbody:{ view:\"textarea\" }\n\t},\n\tcolor:{\n\t\tview:\"popup\",\n\t\tbody:{ view:\"colorboard\" }\n\t},\n\tdate:{\n\t\tview:\"popup\", width:250, height:250, padding:0,\n\t\tbody:{ view:\"calendar\", icons:true, borderless:true }\n\t},\n\trichselect:{\n\t\tview:\"suggest\",\n\t\tbody:{ view:\"list\", select:true }\n\t},\n\tmultiselect:{\n\t\tview:\"multisuggest\",\n\t\tsuggest:{\n\t\t\tbutton:true\n\t\t}\n\t}\n};\n\nexport default editors;","import {remove, removeCss, addCss} from \"../webix/html\";\nimport UIManager from \"../core/uimanager\";\nimport {extend, bind, delay, isUndefined} from \"../webix/helpers\";\nimport {ui, $$} from \"../ui/core\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {attachEvent, callEvent, detachEvent} from \"../webix/customevents\";\nimport Undo from \"../core/undo\";\n\n\nimport globalState from \"../core/state\";\nimport editors from \"../webix/editors\";\n/*\n\tBehavior:EditAbility - enables item operation for the items\n\t\n\t@export\n\t\tedit\n\t\tstopEdit\n*/\n\nconst EditAbility ={\n\tdefaults:{\n\t\teditaction:\"click\"\n\t},\n\t$init:function(config){\n\t\tthis._editors = {};\n\t\tthis._in_edit_mode = 0;\n\t\tthis._edit_open_time = 0;\n\t\tthis._contentobj.style.position = \"relative\";\n\t\tif (config)\n\t\t\tconfig.onDblClick = config.onDblClick || {};\n\n\t\tthis.attachEvent(\"onAfterRender\", this._refocus_inline_editor);\n\n\t\t//when we call extend the editable prop can be already set\n\t\tif (this._settings.editable)\n\t\t\tthis._init_edit_events_once();\n\n\t\textend(this,Undo);\n\t},\n\t_try_reselecting_text:function(input, start){\n\t\ttry {\t\t\t//Chrome throws an error if selectionStart is not accessible\n\t\t\tif (typeof input.selectionStart === \"number\") {\n\t\t\t\tinput.selectionStart = start >= 0 ? start : input.value.length;\n\t\t\t\tinput.selectionEnd = input.value.length;\n\t\t\t}\n\t\t} catch(e){}\t// eslint-disable-line\n\t},\n\t_refocus_inline_editor:function(){\n\t\tconst editor = this.getEditor();\n\t\tif (editor && editor.$inline && !editor.getPopup){\n\t\t\tconst newnode = this._locateInput(editor);\n\t\t\tif (newnode && newnode != editor.node){\n\t\t\t\teditor.node = newnode;\n\t\t\t\tnewnode.focus();\n\n\t\t\t\tconst justOpened = (new Date())-this._edit_open_time > 200;\n\t\t\t\tthis._try_reselecting_text(newnode, justOpened ? -1 : 0);\n\t\t\t}\n\t\t}\n\t},\n\teditable_setter:function(value){\n\t\tif (value)\n\t\t\tthis._init_edit_events_once();\n\t\treturn value;\n\t},\n\t_init_edit_events_once:function(){\n\t\t//will close editor on any click outside\n\t\tconst e1 = attachEvent(\"onEditEnd\", bind(function(){\n\t\t\tif (this._in_edit_mode)\n\t\t\t\tthis.editStop();\n\t\t}, this));\n\t\tconst e2 = attachEvent(\"onClick\", bind(function(e){\n\t\t\t//but ignore click which opens editor\n\t\t\tif (this._in_edit_mode && (new Date())-this._edit_open_time > 200){\n\t\t\t\tif (!this._last_editor || this._last_editor.popupType || !e || ( !this._last_editor.node || !this._last_editor.node.contains(e.target)))\n\t\t\t\t\tthis.editStop();\n\t\t\t}\n\t\t}, this));\n\n\t\tthis.attachEvent(\"onDestruct\", function(){ detachEvent(e1); detachEvent(e2); });\n\t\t\n\t\t//property sheet has simple data object, without events\n\t\tif (this.data.attachEvent)\n\t\t\tthis.data.attachEvent(\"onIdChange\", bind(function(oldid, newid){\n\t\t\t\tthis._changeEditorId(oldid, newid);\n\t\t\t}, this));\n\n\t\t//when clicking on row - will start editor\n\t\tthis.attachEvent(\"onItemClick\", function(id){\n\t\t\tif (this._settings.editable && this._settings.editaction == \"click\")\n\t\t\t\tthis.edit(id);\n\t\t});\n\t\tthis.attachEvent(\"onItemDblClick\", function(id){\n\t\t\tif (this._settings.editable && this._settings.editaction == \"dblclick\")\n\t\t\t\tthis.edit(id);\n\t\t});\n\t\t//each time when we clicking on input, reset timer to prevent self-closing\n\t\tthis._reset_active_editor = bind(function(){\n\t\t\tthis._edit_open_time = new Date();\n\t\t},this);\n\n\t\tthis._init_edit_events_once = function(){};\n\n\t\tif (this._component_specific_edit_init)\n\t\t\tthis._component_specific_edit_init();\n\t},\n\t_handle_live_edits:function(){\n\t\tdelay(function(){\n\t\t\tvar editor = this.getEditor();\n\t\t\tif (editor && editor.config.liveEdit){\n\t\t\t\tvar state = { value:editor.getValue(), old: editor.value };\n\t\t\t\tif (state.value == state.old) return;\n\n\t\t\t\teditor.value = state.value;\n\t\t\t\tthis._set_new_value(editor, state.value, false);\n\t\t\t\tthis.callEvent(\"onLiveEdit\", [state, editor]);\n\t\t\t}\n\t\t}, this);\n\t},\n\t_show_editor_form:function(id){\n\t\tvar form = this._settings.form;\n\t\tif (typeof form != \"string\")\n\t\t\tthis._settings.form = form = ui(form).config.id;\n\n\t\tform = $$(form);\n\t\tvar realform = form.setValues?form:form.getChildViews()[0];\n\t\t\n\t\trealform.setValues(this.getItem(id.row || id), false, \"auto\");\n\t\tform.config.master = this.config.id;\n\t\tform.show( this.getItemNode(id) );\n\n\t\tvar first = realform.getChildViews()[0];\n\t\tif (first.focus)\n\t\t\tfirst.focus();\n\t},\n\tedit:function(id, preserve, show){\n\t\tif (!this._settings.editable || !this.callEvent(\"onBeforeEditStart\", [id])) return;\n\t\tif (this._settings.form)\n\t\t\treturn this._show_editor_form(id);\n\n\t\tvar editor = this._get_editor_type(id);\n\t\tif (editor){\n\t\t\tif (this.getEditor(id)) return;\n\t\t\tif (!preserve) this.editStop();\n\n\t\t\t//render html input\n\t\t\tassert(editors[editor], \"Invalid editor type: \"+editor);\n\t\t\tvar type = extend({}, editors[editor]);\n\n\t\t\tvar node = this._init_editor(id, type, show);\n\t\t\tif (type.config.liveEdit)\n\t\t\t\tthis._live_edits_handler = this.attachEvent(\"onKeyPress\", this._handle_live_edits);\n\n\t\t\tvar area = type.getPopup?type.getPopup(node)._viewobj:node;\n\n\t\t\tif (area)\n\t\t\t\t_event(area, \"click\", this._reset_active_editor);\n\t\t\tif (node)\n\t\t\t\t_event(node, \"input\", this._on_editor_change, { bind:{ view:this, id:id }});\n\t\t\tif (show !== false)\n\t\t\t\ttype.focus();\n\n\t\t\tif (this.$fixEditor)\n\t\t\t\tthis.$fixEditor(type);\n\n\t\t\t//save time of creation to prevent instant closing from the same click\n\t\t\tthis._edit_open_time = globalState.edit_open_time = new Date();\n\n\t\t\tUIManager.setFocus(this, true);\n\t\t\tthis.callEvent(\"onAfterEditStart\", [id]);\n\t\t\treturn type;\n\t\t}\n\t\treturn null;\n\t},\n\tgetEditor:function(id){\n\t\tif (!id)\n\t\t\treturn this._last_editor;\n\n\t\treturn this._editors[id];\n\t},\n\t_changeEditorId:function(oldid, newid)\t{\n\t\tvar editor = this._editors[oldid];\n\t\tif (editor){\n\t\t\tthis._editors[newid] = editor;\n\t\t\teditor.id = newid;\n\t\t\tdelete this._editors[oldid];\n\t\t}\n\t},\n\t_on_editor_change:function(){\n\t\tif (this.view.hasEvent(\"onEditorChange\"))\n\t\t\tthis.view.callEvent(\"onEditorChange\", [this.id, this.view.getEditorValue(this.id) ]);\n\t},\n\t_get_edit_config:function(){\n\t\treturn this._settings;\n\t},\n\t_init_editor:function(id, type, show){\n\t\ttype.config = this._get_edit_config(id);\n\t\tvar node = type.render();\n\n\t\tif (type.$inline)\n\t\t\tnode = this._locateInput(id);\n\t\ttype.node = node;\n\n\t\tvar item = this.getItem(id);\n\t\t//value can be configured by editValue option\n\t\tvar value = item[this._settings.editValue||\"value\"];\n\t\t//if property was not defined - use empty value\n\t\tif (isUndefined(value))\n\t\t\tvalue = \"\";\n\n\t\ttype.setValue(value, item);\n\t\ttype.value = value;\n\n\t\tthis._addEditor(id, type);\n\n\t\tif(type.getPopup)\n\t\t\ttype.getPopup()._editorMaster = this._settings.id;\n\t\t//show it over cell\n\t\tif (show !== false)\n\t\t\tthis.showItem(id);\n\t\tif (!type.$inline)\n\t\t\tthis._sizeToCell(id, node, true);\n\n\t\tif (type.afterRender)\n\t\t\ttype.afterRender();\n\t\treturn node;\n\t},\n\t_locate_cell:function(id){\n\t\treturn this.getItemNode(id);\n\t},\n\t_locateInput:function(id){\n\t\tvar cell = this._locate_cell(id);\n\t\tif (cell)\n\t\t\tcell = cell.getElementsByTagName(\"input\")[0] || cell;\n\n\t\treturn cell;\n\t},\n\t_get_editor_type:function(){\n\t\treturn this._settings.editor;\n\t},\n\t_addEditor:function(id, type){\n\t\ttype.id = id;\n\t\tthis._editors[id]= this._last_editor = type;\n\t\tthis._in_edit_mode++;\n\t},\n\t_removeEditor:function(editor){\n\t\tif (this._last_editor == editor)\n\t\t\tthis._last_editor = 0;\n\t\t\n\t\tif (editor.destroy)\n\t\t\teditor.destroy();\n\n\t\tdelete editor.popup;\n\t\tdelete editor.node;\n\n\t\tdelete this._editors[editor.id];\n\t\tthis._in_edit_mode--;\n\t},\n\tfocusEditor:function(){\n\t\tvar editor = this.getEditor.apply(this, arguments);\n\t\tif (editor && editor.focus)\n\t\t\teditor.focus();\n\t},\n\teditCancel:function(){\n\t\tthis.editStop(null, null, true);\n\t},\n\t_applyChanges: function(el){\n\t\tif (el){\n\t\t\tvar ed = this.getEditor();\n\t\t\tif (ed && ed.getPopup && ed.getPopup() == el.getTopParentView()) return;\n\t\t}\n\t\tthis.editStop();\n\t},\n\teditStop:function(id){\n\t\tif (this._edit_stop) return;\n\t\tthis._edit_stop = 1;\n\n\n\t\tvar cancel = arguments[2];\n\t\tvar result = 1;\n\t\tif (!id){\n\t\t\tthis._for_each_editor(function(editor){\n\t\t\t\tresult = result * this._editStop(editor, cancel);\n\t\t\t});\n\t\t} else \n\t\t\tresult = this._editStop(this._editors[id], cancel);\n\n\t\tthis._edit_stop = 0;\n\t\treturn result;\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\treturn {\n\t\t\tleft:html.offsetLeft, \n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.offsetHeight,\n\t\t\twidth:html.offsetWidth,\n\t\t\tparent:this._contentobj\n\t\t};\n\t},\n\t_sizeToCell:function(id, node, inline){\n\t\t//fake inputs\n\t\tif (!node.style) return;\n\n\t\tvar pos = this._cellPosition(id, null, true);\n\n\t\tnode.style.top = pos.top + \"px\";\n\t\tnode.style.left = pos.left + \"px\";\n\n\t\tnode.style.width = pos.width-1+\"px\";\n\t\tnode.style.height = pos.height-1+\"px\";\n\n\t\tnode.top = pos.top; //later will be used during y-scrolling\n\n\t\tif (inline) pos.parent.appendChild(node);\n\t\treturn pos;\n\t},\n\t_for_each_editor:function(handler){\n\t\tfor (var editor in this._editors)\n\t\t\thandler.call(this, this._editors[editor]);\n\t},\n\t_editStop:function(editor, ignore){\n\t\tif (!editor || globalState._final_destruction) return;\n\t\tvar state = { \n\t\t\tvalue : this._get_new_value(editor), \n\t\t\told : editor.value\n\t\t};\n\t\tif (this.callEvent(\"onBeforeEditStop\", [state, editor, ignore])){\n\t\t\tif (!ignore){\n\t\t\t\t//special case, state.old = 0, state.value = \"\"\n\t\t\t\t//we need to state.old to string, to detect the change\n\t\t\t\tvar old = state.old;\n\t\t\t\tif (typeof state.value == \"string\") old += \"\";\n\n\t\t\t\tif (old != state.value || editor.config.liveEdit){\n\t\t\t\t\tvar item = this._set_new_value(editor, state.value, true);\t\n\t\t\t\t\tthis.updateItem(editor.row || editor.id, item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (editor.$inline)\n\t\t\t\teditor.node = null;\n\t\t\telse\n\t\t\t\tremove(editor.node);\n\n\t\t\tvar popup = editor.config.suggest;\n\t\t\tif (popup && typeof popup == \"string\")\n\t\t\t\t$$(popup).hide();\n\n\t\t\tthis._removeEditor(editor);\n\t\t\tif (this._live_edits_handler)\n\t\t\t\tthis.detachEvent(this._live_edits_handler);\n\n\t\t\tthis.callEvent(\"onAfterEditStop\", [state, editor, ignore]);\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t},\n\tvalidateEditor:function(id){\n\t\tlet result = true;\n\t\tif (this._settings.rules){\n\t\t\tconst editor = this.getEditor(id);\n\t\t\tconst key = editor.column||this._settings.editValue||\"value\";\n\t\t\tconst rule = this._settings.rules[key];\n\t\t\tconst all = this._settings.rules.$all;\n\t\t\tconst input = editor.getInputNode();\n\n\t\t\tif ((rule || all) && !input._viewobj){ //only for html inputs\n\t\t\t\tconst obj = this.data.getItem(editor.row||editor.id);\n\t\t\t\tconst value = editor.getValue();\n\n\t\t\t\tif (rule)\n\t\t\t\t\tresult = rule.call(this, value, obj, key);\n\t\t\t\tif (all)\n\t\t\t\t\tresult = all.call(this, value, obj, key) && result;\n\t\t\t\n\t\t\t\tif (result)\n\t\t\t\t\tremoveCss(input, \"webix_invalid\");\n\t\t\t\telse\n\t\t\t\t\taddCss(input, \"webix_invalid\");\n\n\t\t\t\tcallEvent(\"onLiveValidation\", [editor, result, obj, value]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tgetEditorValue:function(id){\n\t\tvar editor;\n\t\tif (arguments.length === 0)\n\t\t\teditor = this._last_editor;\n\t\telse\n\t\t\teditor = this.getEditor(id);\n\n\t\tif (editor)\n\t\t\treturn editor.getValue();\n\t},\n\tgetEditState:function(){\n\t\treturn this._last_editor || false;\n\t},\n\teditNext:function(next, from){ \n\t\tnext = next !== false; //true by default\n\t\tif (this._in_edit_mode == 1 || from){\n\t\t\t//only if one editor is active\n\t\t\tvar editor_next = this._find_cell_next((this._last_editor || from), function(id){\n\t\t\t\tif (this._get_editor_type(id))\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t}, next);\n\n\t\t\tif (this.editStop()){\t//if we was able to close previous editor\n\t\t\t\tif (editor_next){\t//and there is a new target\n\t\t\t\t\tthis.edit(editor_next);\t//init new editor\n\t\t\t\t\tthis._after_edit_next(editor_next);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\t//stab, used in datatable\n\t_after_edit_next:function(){},\n\t_find_cell_next:function(start, check, direction){\n\t\tvar row = this.getIndexById(start.id);\n\t\tvar order = this.data.order;\n\t\t\n\t\tif (direction){\n\t\t\tfor (let i=row+1; i<order.length; i++){\n\t\t\t\tif (check.call(this, order[i]))\n\t\t\t\t\treturn order[i];\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row-1; i>=0; i--){\n\t\t\t\tif (check.call(this, order[i]))\n\t\t\t\t\treturn order[i];\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\t_get_new_value(editor){\n\t\treturn editor.getValue();\n\t},\n\t_set_new_value:function(editor, new_value, copy){\n\t\tvar item = copy ? {} : this.getItem(editor.id);\n\t\titem[this._settings.editValue||\"value\"] = new_value;\n\t\treturn item;\n\t}\n};\n\nexport default EditAbility;","\n\nconst GroupMethods = {\n\tsum:function(property, data){\n\t\tdata = data || this;\n\t\tvar summ = 0;\n\t\tfor (var i = 0; i < data.length; i++){\n\t\t\tconst num = parseFloat(property(data[i]), 10);\n\t\t\tif (!isNaN(num))\n\t\t\t\tsumm+=num;\n\t\t}\n\n\t\treturn summ;\n\t},\n\tmin:function(property, data){\n\t\tdata = data || this;\n\t\tvar min = Infinity;\n\n\n\t\tfor (var i = 0; i < data.length; i++){\n\t\t\tconst num = parseFloat(property(data[i]), 10);\n\t\t\tif (isNaN(num)) continue;\n\t\t\tif (num < min) min = num;\n\t\t}\n\n\t\treturn min === Infinity ? 0 : min*1;\n\t},\n\tmax:function(property, data){\n\t\tdata = data || this;\n\t\tvar max = -Infinity;\n\n\t\tfor (var i = 0; i < data.length; i++){\n\t\t\tconst num = parseFloat(property(data[i]), 10);\n\t\t\tif (isNaN(num)) continue;\n\t\t\tif (num > max) max = num;\n\t\t}\n\n\t\treturn max === -Infinity ? 0 : max*1;\n\t},\n\tcount:function(property, data){\n\t\tvar count = 0;\n\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\tvar some = property(data[i]);\n\t\t\tif (some !== null && typeof some !== \"undefined\")\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t},\n\tany:function(property, data){\n\t\treturn property(data[0]);\n\t},\n\tstring:function(property){\n\t\treturn property.$name;\n\t}\n};\n\nexport default GroupMethods;","import {preventEvent} from \"../webix/html\";\nimport {_power_array} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport UIManager from \"./uimanager\";\n\n\n/*aria-style handling for options of multiple-value controls (radio, segmented, tabbar)*/\n\nconst HTMLOptions = {\n\t$init: function(){\n\t\tthis.$ready.push(()=>{\n\t\t\tif(!this.customRadio_setter || this.config.customRadio)\n\t\t\t\t_event( this.$view, \"keydown\", this._moveSelection, {bind:this});\n\t\t});\n\t},\n\t_focus: function(){\n\t\tif(!UIManager.canFocus(this))\n\t\t\treturn false;\n\n\t\tconst input = this._getInputNode();\n\t\tif (input)\n\t\t\tfor (let i=0; i<input.length; i++)\n\t\t\t\tif (input[i].getAttribute(\"tabindex\") == \"0\")\n\t\t\t\t\treturn input[i].focus();\n\t},\n\t_blur: function(){\n\t\tconst input = this._getInputNode();\n\t\tif (input)\n\t\t\tfor (let i=0; i<input.length; i++)\n\t\t\t\tif (input[i].getAttribute(\"tabindex\") == \"0\")\n\t\t\t\t\treturn input[i].blur();\n\t},\n\t_moveSelection: function(e){\n\t\tconst code = e.which || e.keyCode;\n\n\t\tif (code>34 && code <41){\n\t\t\tconst inp = this._getInputNode();\n\t\t\tlet index = false;\n\n\t\t\tif (!inp.length) return;\n\t\t\tpreventEvent(e);\n\n\t\t\tconst dir = (code === 37 || code === 38 || code === 35)?-1:1;\n\t\t\tif (code === 35) index = inp.length-1;\n\t\t\telse if (code === 36 ) index = 0;\n\t\t\telse {\n\t\t\t\tfor (let i=0; i<inp.length; i++)\n\t\t\t\t\tif (inp[i].getAttribute(\"tabindex\") == \"0\"){\n\t\t\t\t\t\tindex = i + dir;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif (index !== false){\n\t\t\t\tlet i = index;\n\t\t\t\tdo {\n\t\t\t\t\tif (i >= inp.length) i = 0;\n\t\t\t\t\tif (i < 0) i = inp.length-1;\n\n\t\t\t\t\tif (!inp[i].getAttribute(\"webix_disabled\")){\n\t\t\t\t\t\tconst id = inp[i].getAttribute(/*@attr*/\"button_id\");\n\n\t\t\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\t\t\tinp[i].focus();\n\t\t\t\t\t\ti = \"success\";\n\t\t\t\t\t}\n\t\t\t\t\telse i += dir;\n\n\t\t\t\t} while(i !== \"success\" && i !== index);\n\t\t\t}\n\t\t}\n\t},\n\t_get_tooltip_data: function(t,e){\n\t\tlet id,\n\t\t\tnode = e.target;\n\t\twhile (node && !node.webix_tooltip){\n\t\t\tid = node.getAttribute(\"webix_t_id\");\n\t\t\tif (id)\n\t\t\t\treturn this.getOption(id);\n\t\t\tnode = node.parentNode;\n\t\t}\n\t\treturn null;\n\t},\n\toptionIndex: function(id){\n\t\tconst options = this._settings.options;\n\t\tfor (let i=0; i<options.length; i++)\n\t\t\tif (options[i].id == id)\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\tgetOption: function(id){\n\t\tconst index = this.optionIndex(id);\n\t\tif (index !== -1)\n\t\t\treturn this._settings.options[index];\n\t\treturn null;\n\t},\n\taddOption: function(id, value, show, index){\n\t\tlet obj = id;\n\t\tif (typeof id != \"object\"){\n\t\t\tvalue = value || id;\n\t\t\tobj = { id:id, value:value };\n\t\t} else {\n\t\t\tid = obj.id;\n\t\t\tindex = show;\n\t\t\tshow = value;\n\t\t}\n\n\t\tif (this.optionIndex(id) === -1){\n\t\t\t_power_array.insertAt.call(this._settings.options, obj, index);\n\t\t\tthis.refresh();\n\n\t\t\tthis.callEvent(\"onOptionAdd\", [id, obj]);\n\t\t}\n\n\t\tif (show){\n\t\t\tif (this._settings.options.length === 1)\n\t\t\t\tthis._settings.value = \"\";\n\t\t\tthis.setValue(id, \"auto\");\n\t\t}\n\t},\n\tremoveOption: function(id){\n\t\tconst index = this.optionIndex(id);\n\n\t\tif (index !== -1){\n\t\t\tconst options = this._settings.options;\n\n\t\t\t_power_array.removeAt.call(options, index);\n\n\t\t\t// if we remove a selected option\n\t\t\tif (this._settings.value == id)\n\t\t\t\tthis._setNextVisible(options, index);\n\n\t\t\tthis.refresh();\n\n\t\t\tthis.callEvent(\"onOptionRemove\", [id, this._settings.value]);\n\t\t}\n\t},\n\t_setNextVisible: function(options, index){\n\t\tconst size = options.length;\n\n\t\tif (size && !this.customRadio_setter){\n\t\t\tindex = Math.min(index, size-1);\n\t\t\t//forward search\n\t\t\tfor (let i=index; i<size; i++)\n\t\t\t\tif (!options[i].hidden)\n\t\t\t\t\treturn this.setValue(options[i].id,\"auto\");\n\t\t\t//backward search\n\t\t\tfor (let i=index; i>=0; i--)\n\t\t\t\tif (!options[i].hidden)\n\t\t\t\t\treturn this.setValue(options[i].id,\"auto\");\n\t\t}\n\n\t\t//nothing found\t\t\n\t\tthis.setValue(\"\",\"auto\");\n\t},\n\t_getFirstActive(first){\n\t\tconst options = this._settings.options;\n\n\t\tif (options.length){\n\t\t\tfor (let i=0; i<options.length; i++)\n\t\t\t\tif (!options[i].hidden && !options[i].disabled)\n\t\t\t\t\treturn options[i].id;\n\t\t\tif (first)\n\t\t\t\treturn options[0].id;\n\t\t}\n\t\treturn \"\";\n\t},\n\t_filterOptions: function(options){\n\t\tconst copy = [];\n\t\tfor(let i=0; i<options.length; i++)\n\t\t\tif(!options[i].hidden)\n\t\t\t\tcopy.push(options[i]);\n\t\treturn copy;\n\t},\n\t_setOptionState: function(id, field, state){\n\t\tconst options = this._settings.options;\n\t\tconst index = this.optionIndex(id);\n\n\t\tif (options[index] && state != !!options[index][field]){\t\t\t\t//new state differs from previous one\n\t\t\toptions[index][field] = state;\n\n\t\t\tif (state && field === \"hidden\" && this._settings.value == id)\t\t//switch to next visible one\n\t\t\t\tthis._setNextVisible(options, index);\n\t\t\tthis.refresh();\n\t\t}\n\t},\n\thideOption: function(id){\n\t\tthis._setOptionState(id, \"hidden\", true);\n\t},\n\tshowOption: function(id){\n\t\tthis._setOptionState(id, \"hidden\", false);\n\t},\n\tdisableOption: function(id){\n\t\tthis._setOptionState(id, \"disabled\", true);\n\t},\n\tenableOption: function(id){\n\t\tthis._setOptionState(id, \"disabled\", false);\n\t}\n};\n\nexport default HTMLOptions;","import {bind} from \"../webix/helpers\";\nimport {ui} from \"../ui/core\";\nimport state from \"./state\";\n\nconst IdSpace = {\n\t$init:function(){\n\t\tthis._elements = {};\n\t\tthis._translate_ids = {};\n\t\tthis.getTopParentView = this._get_self = bind(function(){ return this;}, this);\n\n\t\tthis._run_inner_init_logic();\n\t\tthis.$ready.push(this._run_after_inner_init_logic);\n\t},\n\t$$:function(id){\n\t\treturn this._elements[id];\n\t},\n\tinnerId:function(id){\n\t\treturn this._translate_ids[id];\n\t},\n\t_run_inner_init_logic:function(){\n\t\tthis._prev_global_col = state._global_collection;\n\t\tstate._global_collection = this;\n\t},\n\t_run_after_inner_init_logic:function(){\n\t\tfor (var name in this._elements){\n\t\t\tvar input = this._elements[name];\n\t\t\tif (this.callEvent && input.mapEvent && !input._evs_map.onitemclick)\n\t\t\t\tinput.mapEvent({\n\t\t\t\t\tonitemclick:this\n\t\t\t\t});\n\t\t\tinput.getTopParentView = this._get_self;\n\t\t}\n\n\t\tstate._global_collection = this._prev_global_col;\n\t\tthis._prev_global_col = 0;\n\t},\n\t_destroy_child:function(id){\n\t\tdelete this._elements[id];\n\t},\n\tui:function(){\n\t\tthis._run_inner_init_logic();\n\t\tvar temp = ui.apply(this, arguments);\n\t\tthis._run_after_inner_init_logic();\n\t\treturn temp;\n\t}\n};\n\n\nexport default IdSpace;","import {uid,isArray} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\n\nimport i18n from \"../webix/i18n\";\nimport {use} from \"../services\";\n\nimport template from \"../webix/template\";\nimport editors from \"../webix/editors\";\n\n/*Data collection mapping logic */\n\nconst MapCollection = {\n\t$init:function(){\n\t\tthis.$ready.push(this._create_scheme_init);\n\t\tthis.attachEvent(\"onStructureUpdate\", this._create_scheme_init);\n\t\tthis.attachEvent(\"onStructureLoad\", function(){\n\t\t\tif(!this._scheme_init_order.length)\n\t\t\t\tthis._create_scheme_init();\n\t\t});\n\t},\n\t_create_scheme_init:function(){\n\t\tvar stack = this._scheme_init_order = [];\n\t\tvar config = this._settings;\n\n\t\tif (config.columns)\n\t\t\tthis._build_data_map(config.columns);\n\t\tif (this._settings.map)\n\t\t\tthis._process_field_map(config.map);\n\n\t\tif (stack.length){\n\t\t\tthis.data._scheme_init = function(obj){\n\t\t\t\tfor (var i=0; i<stack.length; i++){\n\t\t\t\t\tstack[i](obj);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t},\n\t_process_field_map:function(map){\n\t\tfor (var key in map)\n\t\t\tthis._scheme_init_order.push(this._process_single_map(key, map[key]));\n\t},\n\t_process_single_map:function(target, map, extra){\n\t\tvar source = map.replace(/^(\\s|)\\((date|number)\\)/, \"\");\n\t\tvar getSource;\n\t\tif (source === \"\"){\n\t\t\tgetSource = a => a[target];\n\t\t} else {\n\t\t\tif (source.indexOf(\"#\") === -1 && source.indexOf(\"{\") === -1){\n\t\t\t\tsource = \"#\"+source+\"#\";\n\t\t\t}\n\t\t\tgetSource = template(source);\n\t\t}\n\n\t\tif (map.indexOf(\"(date)\")===0){\n\t\t\tif (extra && !extra.format) extra.format = i18n.dateFormatStr;\n\n\t\t\treturn function(obj){\n\t\t\t\tconst dateStr = (getSource(obj) || \"\").toString();\n\t\t\t\tobj[target] = i18n.parseFormatDate(dateStr);\n\t\t\t};\n\t\t} else if (map.indexOf(\"(number)\")===0){\n\t\t\treturn function(obj){\n\t\t\t\tobj[target] = getSource(obj)*1;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(obj){\n\t\t\t\tobj[target] = getSource(obj) || \"\";\n\t\t\t};\n\t\t}\n\t},\n\t_build_data_map:function(columns){ //for datatable\n\t\tfor (let i=0; i<columns.length; i++){\n\t\t\tconst col = columns[i];\n\t\t\tif (!col.id) {\n\t\t\t\tcol.id = \"i\" + uid();\n\t\t\t\tif (!col.header)\n\t\t\t\t\tcol.header = \"\";\n\t\t\t}\n\t\t\tif (col.map)\n\t\t\t\tthis._scheme_init_order.push(this._process_single_map(col.id, col.map, columns[i]));\n\n\t\t\tthis._map_options(columns[i]);\n\n\t\t\tif (col.editor && !col.template && !col.format)\n\t\t\t\tthis._map_editor(col.id, columns[i]);\n\t\t}\n\t},\n\t_create_collection:function(options){\n\t\tif (typeof options === \"string\"){\n\t\t\tlet options_view = $$(options);\t\t\t\t\t\t\t\t\t\t//id of some other view\n\n\t\t\tif (!options_view){\t\t\t\t\t\t\t\t\t\t\t\t\t//or url\n\t\t\t\toptions = new (use(\"DataCollection\"))({ url: options });\n\t\t\t\tthis._destroy_with_me.push(options);\n\t\t\t} else options = options_view;\n\t\t\tif (options.getBody)\t\t\t\t\t\t\t\t\t\t\t\t//if it was a view, special check for suggests\n\t\t\t\toptions = options_view.getBody();\n\n\t\t} else if (typeof options === \"function\" || options.$proxy){\t\t\t//proxy or function\n\t\t\toptions = new (use(\"DataCollection\"))({ url:options });\n\t\t\tthis._destroy_with_me.push(options);\n\n\t\t} else if (!options.loadNext){\n\t\t\tlet array = isArray(options);\n\t\t\tlet data = [];\n\n\t\t\tif (array && typeof options[0] !== \"object\"){\t\t\t\t\t\t//[\"one\", \"two\"]\n\t\t\t\tfor (let i=0; i<options.length; i++)\n\t\t\t\t\tdata.push({id:options[i], value:options[i]});\n\t\t\t\toptions = data;\n\t\t\t} else if (!array){\t\t\t\t\t\t\t\t\t\t\t\t\t//{ 1:\"one\", 2:\"two\" }\n\t\t\t\tfor (let i in options)\n\t\t\t\t\tdata.push({id:i, value:options[i]});\n\t\t\t\toptions = data;\n\t\t\t} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// else [{ id:1, value:\"one\"}, ...]\n\n\t\t\toptions = new (use(\"DataCollection\"))({ data:options });\n\t\t\tthis._destroy_with_me.push(options);\n\n\t\t} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// else data collection or view\n\t\treturn options;\n\t},\n\t_map_options:function(column){\n\t\tlet options = column.options||column.collection;\n\t\tif (options){\n\t\t\toptions = this._create_collection(options);\n\t\t\tthis._bind_collection(options, column);\n\t\t}\n\t\tif (column.header){\n\t\t\tthis._map_header_options(column.header);\n\t\t\tthis._map_header_options(column.footer);\n\t\t}\n\t},\n\t_map_header_options:function(arr){\n\t\tarr = arr || [];\n\t\tfor (let i=0; i<arr.length; i++){\n\t\t\tlet config = arr[i];\n\n\t\t\tif (config && config.options){\n\t\t\t\tlet options = config.options;\n\t\t\t\tif (!options.loadNext)\n\t\t\t\t\toptions = config.options = this._create_collection(options);\n\n\t\t\t\tlet id = options.data.attachEvent(\"onStoreUpdated\", () => {\n\t\t\t\t\tif(this.refreshFilter)\n\t\t\t\t\t\tthis.refreshFilter(config.columnId);\n\t\t\t\t});\n\t\t\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\t\t\tif (!options.$destructed) options.data.detachEvent(id);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\t_bind_collection:function(options, column){\n\t\tif (column){\n\t\t\tdelete column.options;\n\t\t\tcolumn.collection = options;\n\t\t\tcolumn.template = column.template || this._bind_template(column.optionslist);\n\t\t\tlet id = options.data.attachEvent(\"onStoreUpdated\", () => {\n\t\t\t\tthis.refresh();\n\t\t\t\tif(this.refreshFilter)\n\t\t\t\t\tthis.refreshFilter(column.id);\n\t\t\t});\n\t\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\t\tif (!options.$destructed) options.data.detachEvent(id);\n\t\t\t});\n\t\t}\n\t},\n\t_bind_template:function(multi){\n\t\tif (multi) {\n\t\t\tconst separator = typeof multi === \"string\" ? multi : \",\";\n\t\t\treturn function(obj, common, value, column){\n\t\t\t\tif (!value) return \"\";\n\n\t\t\t\tconst ids = value.toString().split(separator);\n\t\t\t\tfor (let i = 0; i < ids.length; i++){\n\t\t\t\t\tconst data = column.collection.data.pull[ids[i]];\n\t\t\t\t\tids[i] = data ? (data.value  || \"\") : \"\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn ids.join(\", \");\n\t\t\t};\n\t\t} else {\n\t\t\treturn function(obj, common, value, column){\n\t\t\t\tconst data = column.collection.data.pull[value];\n\t\t\t\tif (data && (data.value || data.value === 0))\n\t\t\t\t\treturn data.value;\n\t\t\t\treturn \"\";\n\t\t\t};\n\t\t}\n\t},\n\t_map_editor: function(id, config){\n\t\tconst editor = editors[config.editor];\n\t\tif(editor && editor.masterFormat)\n\t\t\tconfig.format = editor.masterFormat;\n\t}\n};\n\nexport default MapCollection;","import {create, insertBefore, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport {isUndefined, extend, delay} from \"../webix/helpers\";\n\n\nconst ProgressBar = {\n\t$init:function(){\n\t\tif (isUndefined(this._progress) && this.attachEvent){\n\t\t\tthis.attachEvent(\"onBeforeLoad\", () => this.showProgress());\n\t\t\tthis.attachEvent(\"onAfterLoad\", () => this.hideProgress());\n\t\t\tthis._progress = null;\n\t\t}\n\t},\n\tshowProgress:function(config){\n\t\t// { position: 0 - 1, delay: 2000ms by default, css : name of css class to use }\n\t\tvar width;\n\t\tif (!this._progress){\n\n\t\t\tconfig = extend({\n\t\t\t\tposition:0,\n\t\t\t\tdelay: 2000,\n\t\t\t\ttype:\"icon\",\n\t\t\t\ticon:\"wxi-sync\",\n\t\t\t\thide:false\n\t\t\t}, (config||{}), true);\n\n\t\t\tvar incss = (config.type == \"icon\") ? (config.icon+\" webix_spin\") : \"\";\n\n\t\t\tthis._progress = create(\n\t\t\t\t\"DIV\",\n\t\t\t\t{\n\t\t\t\t\t\"class\":\"webix_progress_\"+config.type,\n\t\t\t\t\t\"role\":\"progressbar\",\n\t\t\t\t\t\"aria-valuemin\":\"0\",\n\t\t\t\t\t\"aria-valuemax\":\"100\",\n\t\t\t\t\t\"tabindex\":\"0\"\n\t\t\t\t},\n\t\t\t\t\"<div class='webix_progress_state \"+incss+\"'></div>\"\n\t\t\t);\n\n\t\t\tif(!this.setPosition)\n\t\t\t\tthis._viewobj.style.position = \"relative\";\n\n\t\t\tinsertBefore(this._progress, this._viewobj.firstChild, this._viewobj);\n\t\t\tthis._viewobj.setAttribute(\"aria-busy\", \"true\");\n\n\t\t\tif(!this._touch_scroll){\n\t\t\t\tif (this.getScrollState){\n\t\t\t\t\tvar scroll = this.getScrollState();\n\t\t\t\t\tif (this._viewobj.scrollWidth != this.$width){\n\t\t\t\t\t\tthis._progress.style.left = scroll.x +\"px\";\n\t\t\t\t\t}\n\t\t\t\t\tif (this._viewobj.scrollHeight != this.$height){\n\t\t\t\t\t\tif(config.type != \"bottom\"){\n\t\t\t\t\t\t\tthis._progress.style.top = scroll.y + \"px\";\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._progress.style.top = scroll.y + this.$height - this._progress.offsetHeight +\"px\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._progress_animate = config.type != \"icon\";\n\t\t}\n\n\t\tif (!config) return;\n\n\t\tif (this._progress_animate){\n\t\t\tvar position = config.position || 1;\n\t\t\tif (config.delay){\n\t\t\t\t// force reflow\n\t\t\t\twidth = this._viewobj.firstChild.offsetWidth;\n\t\t\t\tthis._progress.firstChild.style[env.transitionDuration] = config.delay+\"ms\";\n\t\t\t}\n\n\t\t\t// animate to new value\n\t\t\tthis._progress.firstChild.style.width = position*100+\"%\";\n\t\t}\n\n\t\tif (this._progress_hide)\n\t\t\tclearTimeout(this._progress_hide);\n\n\t\tif (config.hide)\n\t\t\tthis._progress_hide = delay(this.hideProgress, this, [true], config.delay);\n\n\t\t// necessary to prevent code optimization\n\t\treturn width;\n\t},\n\thideProgress:function(now){\n\t\tif (this._progress){\n\t\t\tif (now || !this._progress_animate){\n\t\t\t\tremove(this._progress);\n\t\t\t\tthis._progress = null;\n\t\t\t\tthis._viewobj.removeAttribute(\"aria-busy\");\n\t\t\t} else {\n\t\t\t\tthis.showProgress({ position:1.1, delay:300 , hide:true });\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport default ProgressBar;","import {create} from \"../webix/html\";\nimport {delay} from \"../webix/helpers\";\nimport env from \"../webix/env\";\nimport {_event} from \"../webix/htmlevents\";\n\nimport CustomScroll from \"../core/customscroll\";\n\nconst Scrollable = {\n\t$init:function(config){\n\t\t//do not spam unwanted scroll containers for templates \n\t\tif (config && !config.scroll && this._one_time_scroll) \n\t\t\treturn (this._dataobj = (this._dataobj||this._contentobj));\n\n\t\t(this._dataobj||this._contentobj).appendChild(create(\"DIV\",{ \"class\" : \"webix_scroll_cont\" },\"\"));\n\t\tthis._dataobj = (this._dataobj||this._contentobj).firstChild;\n\n\t\tif (this.callEvent && !this.$hasYScroll)\n\t\t\t_event(this._viewobj, \"scroll\", function(){\n\t\t\t\tdelay(function(){\n\t\t\t\t\tthis.callEvent(\"onAfterScroll\", []);\n\t\t\t\t}, this);\n\t\t\t}, { bind:this });\n\t},\n\tscroll_setter:function(value){\n\t\tif (!value) return false;\n\n\t\tconst auto = value === \"auto\";\n\t\tconst marker = (value==\"x\"?\"x\":(value==\"xy\"?\"xy\":(auto?\"xy\":\"y\")));\n\n\t\tif (env.$customScroll)\n\t\t\tCustomScroll.enable(this, marker);\n\n\t\tconst style = this._dataobj.parentNode.style;\n\t\tif (auto && !env.$customScroll){\n\t\t\tstyle.overflowX = style.overflowY = \"auto\";\n\t\t} else {\n\t\t\tif (marker.indexOf(\"x\") !== -1){\n\t\t\t\tthis._scroll_x = true;\n\t\t\t\tstyle.overflowX = \"scroll\";\n\t\t\t}\n\t\t\tif (marker.indexOf(\"y\") !== -1){\n\t\t\t\tthis._scroll_y = true;\n\t\t\t\tstyle.overflowY = \"scroll\";\n\t\t\t}\n\t\t}\n\t\treturn marker;\n\t},\n\t_onoff_scroll:function(mode, dir){\n\t\tif (!!this._settings.scroll == !!mode) return;\n\n\t\tif (!env.$customScroll){\n\t\t\tvar style = this._dataobj.parentNode.style;\n\t\t\tstyle[dir === \"x\" ? \"overflowX\" : \"overflowY\"] = mode ? \"auto\" : \"hidden\";\n\t\t}\n\n\t\tif (dir === \"x\"){\n\t\t\tthis._scroll_x = mode;\n\t\t} else {\n\t\t\tthis._scroll_y = mode;\n\t\t}\n\t\tthis._settings.scroll = mode?dir:false;\n\t},\n\tgetScrollState:function(){\n\t\treturn { x: this._dataobj.parentNode.scrollLeft, y: this._dataobj.parentNode.scrollTop };\n\t},\n\tscrollTo:function(x,y){\n\t\tthis._dataobj.parentNode.scrollLeft = x;\n\t\tthis._dataobj.parentNode.scrollTop = y;\n\t}\n};\n\nexport default Scrollable;","import {isArray} from \"../webix/helpers\";\nimport {create, remove} from \"../webix/html\";\n\nconst color = {\n\t_toHex:[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"],\n\ttoHex:function(number, length){\n\t\tnumber=parseInt(number,10);\n\t\tvar str = \"\";\n\t\twhile (number>0){\n\t\t\tstr=this._toHex[number%16]+str;\n\t\t\tnumber=Math.floor(number/16);\n\t\t}\n\t\twhile (str.length <length)\n\t\t\tstr = \"0\"+str;\n\t\treturn str;\n\t},\n\trgbToHex:function(rgb){\n\t\tvar arr=[];\n\t\tif(typeof(rgb) === \"string\")\n\t\t\trgb.replace(/[\\d+.]+/g, function(v){ \n\t\t\t\tarr.push(parseFloat(v));\n\t\t\t});\n\t\telse if(isArray(rgb))  arr = rgb;\n\t\t\n\t\t//transparent\n\t\tif(arr[3] === 0) return \"\";\n\n\t\treturn arr.slice(0, 3).map(function(n){\n\t\t\treturn color.toHex(Math.floor(n), 2);\n\t\t}).join(\"\");\n\t},\n\thexToDec:function(hex){\n\t\treturn parseInt(hex, 16);\n\t},\n\ttoRgb:function(rgb){\n\t\tvar r,g,b,rgbArr;\n\n\t\tif (typeof(rgb) != \"string\") {\n\t\t\tr = rgb[0];\n\t\t\tg = rgb[1];\n\t\t\tb = rgb[2];\n\t\t} else if (rgb.indexOf(\"rgb\")!=-1) {\n\t\t\trgbArr = rgb.substr(rgb.indexOf(\"(\")+1,rgb.lastIndexOf(\")\")-rgb.indexOf(\"(\")-1).split(\",\");\n\t\t\tr = rgbArr[0];\n\t\t\tg = rgbArr[1];\n\t\t\tb = rgbArr[2];\n\t\t} else if (rgb.substr(0, 1) == \"#\"){\n\t\t\trgb = rgb.substr(1);\n\t\t\tr = this.hexToDec(rgb.substr(0, 2));\n\t\t\tg = this.hexToDec(rgb.substr(2, 2));\n\t\t\tb = this.hexToDec(rgb.substr(4, 2));\n\t\t} else {\n\t\t\tconst div = create(\"div\", {style:`color:${rgb}`});\n\t\t\tdocument.body.appendChild(div);\n\t\t\tconst color = window.getComputedStyle(div).color; //getComputedStyle returns color as rgb/rgba\n\t\t\tremove(div);\n\t\t\tconst arr = color.slice(\n\t\t\t\tcolor.indexOf(\"(\") + 1,\n\t\t\t\tcolor.indexOf(\")\")\n\t\t\t).split(\", \");\n\t\t\tr = arr[0];\n\t\t\tg = arr[1];\n\t\t\tb = arr[2];\n\t\t}\n\t\tr = (parseInt(r,10)||0);\n\t\tg = (parseInt(g,10)||0);\n\t\tb = (parseInt(b,10)||0);\n\t\tif (r < 0 || r > 255)\n\t\t\tr = 0;\n\t\tif (g < 0 || g > 255)\n\t\t\tg = 0;\n\t\tif (b < 0 || b > 255)\n\t\t\tb = 0;\n\t\treturn [r,g,b];\n\t},\n\thsvToRgb:function(h, s, v){\n\t\tvar hi,f,p,q,t,r,g,b;\n\t\thi = Math.floor((h/60))%6;\n\t\tf = h/60-hi;\n\t\tp = v*(1-s);\n\t\tq = v*(1-f*s);\n\t\tt = v*(1-(1-f)*s);\n\t\tr = 0;\n\t\tg = 0;\n\t\tb = 0;\n\t\tswitch(hi) {\n\t\t\tcase 0:\n\t\t\t\tr = v; g = t; b = p;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tr = q; g = v; b = p;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tr = p; g = v; b = t;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tr = p; g = q; b = v;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tr = t; g = p; b = v;\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tr = v; g = p; b = q;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\tr = Math.floor(r*255);\n\t\tg = Math.floor(g*255);\n\t\tb = Math.floor(b*255);\n\t\treturn [r, g, b];\n\t},\n\trgbToHsv:function(r, g, b){\n\t\tvar r0,g0,b0,min0,max0,s,h,v;\n\t\tr0 = r/255;\n\t\tg0 = g/255;\n\t\tb0 = b/255;\n\t\tmin0 = Math.min(r0, g0, b0);\n\t\tmax0 = Math.max(r0, g0, b0);\n\t\th = 0;\n\t\ts = max0===0?0:(1-min0/max0);\n\t\tv = max0;\n\t\tif (max0 == min0) {\n\t\t\th = 0;\n\t\t} else if (max0 == r0 && g0>=b0) {\n\t\t\th = 60*(g0 - b0)/(max0 - min0)+0;\n\t\t} else if (max0 == r0 && g0 < b0) {\n\t\t\th = 60*(g0 - b0)/(max0 - min0)+360;\n\t\t} else if (max0 == g0) {\n\t\t\th = 60*(b0 - r0)/(max0-min0)+120;\n\t\t} else if (max0 == b0) {\n\t\t\th = 60*(r0 - g0)/(max0 - min0)+240;\n\t\t}\n\t\treturn [h, s, v];\n\t}\n};\n\nexport default color;","import {createCss} from \"../../webix/html\";\nimport {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\n\nvar defaults = {\n\tpaddingX: 6,\n\tpaddingY: 6,\n\tradius: 2,\n\tminHeight: 4,\n\teventRadius: 8\n};\nfunction Line(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\n\nLine.prototype.draw = function(data, width, height){\n\tvar points = this.getPoints(data, width, height);\n\tvar config = this.config;\n\tvar renderer = SVG;\n\tvar styles = config.color?this._applyColor(renderer,config.color):null;\n\t// draw line\n\tvar path = renderer.definePath(this._getLinePoints(points));\n\tvar graph = renderer.group(renderer.getPath(path,\"webix_sparklines_line\"+(styles?\" \"+styles.line:\"\")));\n\t// draw items\n\tgraph += this._drawItems(renderer, points, config.radius, \"webix_sparklines_item\"+(styles?\" \"+styles.item:\"\"));\n\t// draw event items\n\tvar eventRadius = Math.min(data.length?(width-2*(config.paddingX||0))/data.length:0,config.eventRadius);\n\tgraph += this._drawEventItems(renderer, points, eventRadius);\n\treturn  renderer.draw(graph, width, height, \"webix_sparklines_line_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nLine.prototype._applyColor = function(renderer,color){\n\tvar config = {\"line\":{},\"item\":{}},\n\t\tmap = renderer.styleMap;\n\tif(color){\n\t\tconfig.line[map.lineColor] = color;\n\t\tconfig.item[map.color] = color;\n\t\tfor(var name in config)\n\t\t\tconfig[name] = createCss(config[name]);\n\t}\n\treturn config;\n};\nLine.prototype._drawItems = function(renderer,points,radius,css,attrs){\n\tvar items = [];\n\tfor(var i = 0; i< points.length; i++){\n\t\titems.push(renderer.getCircle(points[i], radius, css,attrs));\n\t}\n\treturn renderer.group(items.join(\"\"));\n};\nLine.prototype._drawEventItems = function(renderer,points,radius){\n\tvar items = [];\n\tfor(var i = 0; i< points.length; i++){\n\t\titems.push(renderer.getCircle(points[i], radius, \"webix_sparklines_event_area\", {webix_area:i}));\n\t}\n\treturn renderer.group(items.join(\"\"));\n};\n\nLine.prototype._getLinePoints = function(points){\n\tvar i, type, result =[];\n\tfor( i =0; i< points.length; i++){\n\t\ttype = i?\"L\":\"M\";\n\t\tresult.push([type,points[i]]);\n\t}\n\treturn result;\n};\nLine.prototype.getPoints = function(data, width, height) {\n\tvar config = this.config;\n\tvar minValue = Math.min.apply(null,data);\n\tif (typeof config.origin !== \"undefined\")\n\t\tminValue = Math.min(config.origin, minValue);\n\n\tvar maxValue = Math.max.apply(null,data);\n\tvar result = [];\n\tvar x = config.paddingX||0;\n\tvar y = config.paddingY||0;\n\twidth = (width||100)-x*2;\n\tvar minHeight = config.minHeight||0;\n\theight = (height||100)-y*2;\n\tif(data.length){\n\t\tif(data.length==1)\n\t\t\tresult.push({x: width/2+x, y: height/2+x});\n\t\telse{\n\t\t\tvar unitX = width/(data.length-1);\n\t\t\tvar yNum = config.scale || (maxValue - minValue);\n\t\t\tvar unitY = (height- minHeight)/(yNum?yNum:1);\n\t\t\tif(!yNum)\n\t\t\t\theight /= 2;\n\t\t\tfor(var i=0; i < data.length; i++){\n\t\t\t\tresult.push({x: Math.ceil(unitX*i)+x, y: height-Math.ceil(unitY*(data[i]-minValue))+y-minHeight});\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n};\n\nexport default Line;","import {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\n\nvar defaults = {\n\tpaddingY: 2\n};\n\nfunction Pie(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\nPie.prototype._defColorsCursor = 0;\nPie.prototype._defColors  = [\n\t\"#f55b50\",\"#ff6d3f\",\"#ffa521\",\"#ffc927\",\"#ffee54\",\"#d3e153\",\"#9acb61\",\"#63b967\",\n\t\"#21a497\",\"#21c5da\",\"#3ea4f5\",\"#5868bf\",\"#7b53c0\",\"#a943ba\",\"#ec3b77\",\"#9eb0b8\"\n];\nPie.prototype._getColor = function(i,data){\n\tvar count = data.length;\n\tvar colorsCount = this._defColors.length;\n\tif(colorsCount > count){\n\t\tif(i){\n\t\t\tif(i < colorsCount - count)\n\t\t\t\ti = this._defColorsCursor +2;\n\t\t\telse\n\t\t\t\ti = this._defColorsCursor+1;\n\t\t}\n\t\tthis._defColorsCursor = i;\n\t}\n\telse\n\t\ti = i%colorsCount;\n\treturn this._defColors[i];\n};\nPie.prototype.draw = function(data, width, height){\n\tvar attrs, graph, i, sectors,\n\t\tconfig = this.config,\n\t\tcolor = config.color||this._getColor,\n\t\tpoints = this.getAngles(data),\n\t\trenderer = SVG,\n\t\ty = config.paddingY|| 0,\n\t\t// radius\n\t\tr = height/2 - y,\n\t\t// center\n\t\tx0 = width/2, y0 = height/2;\n\n\t// draw sectors\n\tif(typeof color != \"function\")\n\t\tcolor = function(){return color;};\n\tsectors = \"\";\n\tfor( i =0; i < points.length; i++){\n\t\tattrs = {};\n\t\tattrs[renderer.styleMap[\"color\"]] = color.call(this,i,data,this._context);\n\t\tsectors += renderer.getSector({x:x0,y:y0},r,points[i][0],points[i][1],\"webix_sparklines_sector\", attrs);\n\t}\n\tgraph = renderer.group(sectors);\n\n\t// draw event areas\n\tsectors = \"\";\n\tfor(i =0; i < points.length; i++){\n\t\tsectors += renderer.getSector({x:x0,y:y0},r,points[i][0],points[i][1],\"webix_sparklines_event_area\",{\"webix_area\":i});\n\t}\n\tgraph += renderer.group(sectors);\n\n\tif(config.donut)\n\t\tgraph += SVG.getCircle({x:x0,y:y0}, config.innerRadius || r*0.5, \"webix_sparklines_donut_hole\");\n\n\treturn  renderer.draw(graph, width, height, \"webix_sparklines_pie_chart\"+(config.css?\" \"+config.css:\"\"));\n};\nPie.prototype.getAngles = function(data){\n\tvar a0 = -Math.PI/ 2, a1,\n\t\ti, result = [];\n\n\tvar ratios = this._getRatios(data);\n\n\tfor( i =0; i < data.length; i++){\n\t\ta1= -Math.PI/2+ratios[i]-0.0001;\n\t\tresult.push([a0,a1]);\n\t\ta0 = a1;\n\t}\n\treturn result;\n};\nPie.prototype._getTotalValue = function(data){\n\tvar t=0;\n\tfor(var i = 0; i < data.length;i++)\n\t\tt += data[i]*1;\n\treturn  t;\n};\nPie.prototype._getRatios = function(data){\n\tvar i, value,\n\t\tratios = [],\n\t\tprevSum = 0,\n\t\ttotalValue = this._getTotalValue(data);\n\tfor(i = 0; i < data.length;i++){\n\t\tvalue = data[i]*1;\n\t\tratios[i] = Math.PI*2*(totalValue?((value+prevSum)/totalValue):(1/data.length));\n\t\tprevSum += value;\n\t}\n\treturn ratios;\n};\n\nexport default Pie;","import {extend, copy} from \"../../webix/helpers\";\n\nimport SVG from \"./svg\";\nimport BaseLine from \"./line\";\nimport Area from \"./area\";\n\nconst defaults = {\n\tpadding: 6,\n\tradius: 2,\n\teventRadius: 8\n};\n\nfunction Radar(config){\n\tthis.config = extend(copy(defaults),config||{},true);\n}\n\nRadar.prototype.draw = function(data, width, height){\n\tconst line = BaseLine.prototype;\n\tconst area = Area.prototype;\n\n\tconst config = this.config;\n\tconst renderer = SVG;\n\tconst x0 = width/2;\n\tconst y0 = height/2;\n\n\tconst radius = Math.min(x0,y0) - config.padding;\n\n\tlet origin = \"\";\n\tconst points = [];\n\tconst originPoints = [];\n\tconst ratios = this._getRatios(data.length);\n\n\tdata = data.map(v => isNaN(v) ? 0 : v);\n\tconst max = Math.max(...data);\n\tlet min = Math.min(...data);\n\tif(min > 0)\n\t\tmin = 0;\n\n\tfor (let i = 0; i < data.length; i++) {\n\t\tconst angle = -Math.PI/2 +ratios[i];\n\n\t\toriginPoints.push(this._getPositionByAngle(angle, x0, y0, radius));\n\t\tconst x1 = originPoints[i].x;\n\t\tconst y1 = originPoints[i].y;\n\n\t\torigin += renderer.getLine({x:x0, y:y0},{x: x1, y: y1},\"webix_sparklines_origin\");\n\n\t\tlet x, y;\n\t\tif(data[i] == min){\n\t\t\tx = x0; y = y0;\n\t\t}\n\t\telse if(data[i] == max){\n\t\t\tx = x1; y = y1;\n\t\t}\n\t\telse{\n\t\t\tconst ratio = Math.abs(data[i]-min)/Math.abs(max - data[i]);\n\t\t\tx = (x0 + x1 * ratio) / (1 + ratio);\n\t\t\ty = (y0 + y1 * ratio) / (1 + ratio);\n\t\t}\n\n\t\tpoints.push({x, y});\n\t}\n\n\tconst styles = config.color ? area._applyColor(renderer, config.color) : null;\n\tconst originPath = renderer.definePath(line._getLinePoints(originPoints), true);\n\tconst path = renderer.definePath(line._getLinePoints(points), true);\n\n\tconst graph =\n\t\trenderer.group(origin + renderer.getPath(originPath, \"webix_sparklines_origin\")) +\n\t\trenderer.group(renderer.getPath(path, \"webix_sparklines_area\"+(styles?\" \"+styles.area:\"\"))) +\n\t\trenderer.group(renderer.getPath(path, \"webix_sparklines_line\"+(styles?\" \"+styles.line:\"\"))) +\n\t\tline._drawItems(renderer, points, config.radius, \"webix_sparklines_item\"+(styles?\" \"+styles.item:\"\")) +\n\t\tline._drawEventItems(renderer, points, config.eventRadius);\n\n\treturn  renderer.draw(graph, width, height, \"webix_sparklines_radar_chart\"+(config.css?\" \"+config.css:\"\"));\n};\n\nRadar.prototype._getPositionByAngle = function(a,x,y,r){\n\ta *= (-1);\n\tx = x+Math.cos(a)*r;\n\ty = y-Math.sin(a)*r;\n\treturn {x,y};\n};\n\nRadar.prototype._getRatios = function(count){\n\tconst ratios = [];\n\tfor(let i = 0; i < count; i++){\n\t\tratios[i] = Math.PI*2*(i/count);\n\t}\n\treturn ratios;\n};\n\nexport default Radar;","import {assert} from \"../webix/debug\";\n\n\nconst TreeAPI = {\n\topen: function(id, show) {\n\t\tif (!id) return;\n\t\t//ignore open for leaf items\n\t\tvar item = this.getItem(id);\n\t\tassert(item,\"Incorrect ID to open: \"+id);\n\n\t\tif (!item.$count || item.open) return;\n\n\t\tif (this.callEvent(\"onBeforeOpen\",[id])){\n\t\t\titem.open=true;\n\t\t\tthis.data.callEvent(\"onStoreUpdated\",[id, 0, \"branch\"]);\n\t\t\tthis.callEvent(\"onAfterOpen\",[id]);\n\t\t}\n\n\t\tif (show && id != \"0\")\n\t\t\tthis.open(this.getParentId(id), show);\n\t},\n\tclose: function(id) {\n\t\tif (!id) return;\n\t\tvar item = this.getItem(id);\n\t\tif (!item.open) return;\n\n\t\tif (this.callEvent(\"onBeforeClose\",[id])){\n\t\t\titem.open=false;\n\t\t\tthis.data.callEvent(\"onStoreUpdated\",[id, 0, \"branch\"]);\n\t\t\tthis.callEvent(\"onAfterClose\",[id]);\n\t\t}\n\t},\n\topenAll: function(id){\n\t\tthis.data.eachSubItem((id||0), function(obj, branch){\n\t\t\tif (branch)\n\t\t\t\tobj.open = true;\n\t\t});\n\t\tthis.data.refresh();\n\t},\n\tcloseAll: function(id){\n\t\tthis.data.eachSubItem((id||0), function(obj, branch){\n\t\t\tif (branch)\n\t\t\t\tobj.open = false;\n\t\t});\n\t\tthis.data.refresh();\n\t},\n\t_tree_check_uncheck:function(id,mode,e){\n\t\tif(this._settings.threeState)\n\t\t\treturn this._tree_check_uncheck_3(id,(mode !== null?mode:\"\"));\n\n\t\tvar value,\n\t\t\titem = this.getItem(id),\n\t\t\ttrg = (e?e.target:null);\n\n\t\t//read actual value from HTML tag when possible\n\t\t//as it can be affected by dbl-clicks\n\t\tif(trg && trg.type == \"checkbox\")\n\t\t\tvalue = trg.checked?true:false;\n\t\telse\n\t\t\tvalue = (mode !== null?mode:!item.checked);\n\n\t\titem.checked = value;\n\t\tthis.callEvent(\"onItemCheck\", [id, item.checked, e]);\n\t},\n\tisBranchOpen:function(search_id){\n\t\tif (search_id == \"0\") return true;\n\n\t\tvar item = this.getItem(search_id);\n\t\tif (item.open)\n\t\t\treturn this.isBranchOpen(item.$parent);\n\t\treturn false;\n\t},\n\tgetOpenItems: function() {\n\t\tvar open = [];\n\t\tfor (var id in this.data.branch) {\n\t\t\tif (this.exists(id) && this.getItem(id).open)\n\t\t\t\topen.push(id);\n\t\t}\n\t\treturn open;\n\t},\n\tgetState: function(){\n\t\treturn {\n\t\t\topen: this.getOpenItems(),\n\t\t\tselect: this.getSelectedId(true)\n\t\t};\n\t},\n\t_repeat_set_state:function(tree, open){\n\t\tvar event = this.data.attachEvent(\"onStoreLoad\", function(){\n\t\t\ttree.setState.call(tree,open);\n\t\t\ttree.data.detachEvent(event);\n\t\t\ttree = null;\n\t\t});\n\t},\n\tsetState: function(state){\n\t\tif (state.open){\n\t\t\tthis.closeAll();\t\n\t\t\tvar open = state.open;\n\t\t\tfor (let i = 0; i < open.length; i++){\n\t\t\t\tvar item = this.getItem(open[i]);\n\t\t\t\tif (item && item.$count){\n\t\t\t\t\titem.open=true;\n\t\t\t\t\t//dynamic loading\n\t\t\t\t\tif (item.$count == -1){\n\t\t\t\t\t\t//call the same method after data loading\n\t\t\t\t\t\tthis._repeat_set_state(this, state);\n\t\t\t\t\t\tthis.refresh();\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t//end processing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.refresh();\n\t\t}\n\n\n\t\tif (state.select && this.select){\t\t\t\n\t\t\tvar select = state.select;\n\t\t\tthis.unselect();\n\t\t\tfor (let i = 0; i < select.length; i++)\n\t\t\t\tif (this.exists(select[i]))\n\t\t\t\t\tthis.select(select[i], true);\n\t\t}\n\n\t\treturn 1;\n\t}\n};\n\nexport default TreeAPI;","import {insertBefore, remove, create} from \"../webix/html\";\nimport {assert} from \"../webix/debug\";\n\n\nconst TreeRenderStack ={\n\t$init:function(){\n\t\tassert(this.render,\"TreeRenderStack :: Object must use RenderStack first\");\n\t},\n\t_toHTMLItem:function(obj){\n\t\tvar mark = this.data._marks[obj.id];\n\t\tthis.callEvent(\"onItemRender\",[obj]);\n\t\treturn this.type.templateStart(obj,this.type,mark)+(obj.$template?this.type[\"template\"+obj.$template](obj,this.type,mark):this.type.template(obj,this.type,mark))+this.type.templateEnd();\n\t},\n\t_toHTMLItemObject:function(obj){\n\t\tthis._html.innerHTML = this._toHTMLItem(obj);\n\t\treturn this._html.firstChild;\n\t},\n\t//convert single item to HTML text (templating)\n\t_toHTML:function(obj){\n\t\t//check if related template exist\n\t\tassert((!obj.$template || this.type[\"template\"+obj.$template]),\"RenderStack :: Unknown template: \"+obj.$template);\n\t\tvar html=\"<div role='presentation' class='webix_tree_branch_\"+obj.$level+\"'>\"+this._toHTMLItem(obj);\n\n\t\tif (obj.open)\n\t\t\thtml+=this._toHTMLLevel(obj.id);\n\n\t\thtml+=\"</div>\";\n\n\t\treturn html;\n\t},\n\t_toHTMLLevel:function(id){\n\t\tvar html = \"\";\n\t\tvar leaves = this.data.branch[id];\n\t\tif (leaves){\n\t\t\thtml+=\"<div role='presentation' class='webix_tree_leaves'>\";\n\t\t\tvar last = leaves.length-1;\n\t\t\tfor (var i=0; i <= last; i++){\n\t\t\t\tvar obj = this.getItem(leaves[i]);\n\t\t\t\tvar state = this.type._tree_branch_render_state;\n\t\t\t\tif (state !== 0) state[obj.$level] = (i == last);\n\t\t\t\thtml+=this._toHTML(obj);\n\t\t\t}\n\t\t\thtml+=\"</div>\";\n\t\t}\n\t\treturn html;\n\t},\n\t//return true when some actual rendering done\n\trender:function(id,data,type){\n\t\tTreeRenderStack._obj = this;\t//can be used from complex render\n\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\n\t\tif (id){\n\t\t\tvar cont, node;\n\t\t\tvar item = this.getItem(id);\n\t\t\tif (type!=\"add\"){\n\t\t\t\tcont = this.getItemNode(id);\n\t\t\t\tif (!cont) return;\n\t\t\t}\n\t\t\t\n\t\t\tswitch(type){\n\t\t\t\tcase \"branch\":\n\t\t\t\t\tvar branch = cont.parentNode;\n\t\t\t\t\tnode = this._toHTMLObject(item);\n\t\t\t\t\t\n\t\t\t\t\tinsertBefore(node, branch); \n\t\t\t\t\tremove(branch);\n\t\t\t\t\tthis._htmlmap = null;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"paint\":\n\t\t\t\tcase \"update\":\n\t\t\t\t\tnode = this._htmlmap[id] = this._toHTMLItemObject(item);\n\t\t\t\t\tinsertBefore(node, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"delete\":\n\t\t\t\t\t//deleting not item , but full branch\n\t\t\t\t\tremove(cont.parentNode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"add\":\n\t\t\t\t\tvar parent;\n\t\t\t\t\t//we want process both empty value and 0 as string\n\t\t\t\t\t//jshint -W041:true\n\t\t\t\t\tif (item.$parent == 0){\n\t\t\t\t\t\tparent = this._dataobj.firstChild;\n\t\t\t\t\t} else if(this.getItem(item.$parent).open){\n\t\t\t\t\t\tparent  = this.getItemNode(item.$parent);\n\t\t\t\t\t\tif (parent){\n\t\t\t\t\t\t\t//when item created by the script, it will miss the container for child notes\n\t\t\t\t\t\t\t//create it on demand\n\t\t\t\t\t\t\tif (!parent.nextSibling){\n\t\t\t\t\t\t\t\tvar leafs = create(\"DIV\", { \"class\" : \"webix_tree_leaves\" },\"\");\n\t\t\t\t\t\t\t\tparent.parentNode.appendChild(leafs);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparent = parent.nextSibling;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (parent){\n\t\t\t\t\t\tvar next = this.data.getNextSiblingId(id);\n\t\t\t\t\t\tnext = this.getItemNode(next);\n\t\t\t\t\t\tif (next)\n\t\t\t\t\t\t\tnext = next.parentNode;\n\n\t\t\t\t\t\tnode = this._toHTMLObject(item);\n\t\t\t\t\t\tthis._htmlmap[id] = node.firstChild;\n\t\t\t\t\t\tinsertBefore(node, next, parent);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.callEvent(\"onPartialRender\", [id,data,type]);\n\t\t} else {\n\t\t\t//full reset\n\t\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\t\t//will be used for lines management\n\t\t\t\tthis.type._tree_branch_render_state = [];\n\t\t\t\t//getTopRange - returns all elements on top level\n\t\t\t\tthis._dataobj.innerHTML = this._toHTMLLevel(0);\n\t\t\t\t\t\n\t\t\t\tthis._htmlmap = null; //clear map, it will be filled at first getItemNode\n\t\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t\t}\n\t\t}\n\n\t\t//clear after usage\n\t\tthis.type._tree_branch_render_state = 0;\n\t\tTreeRenderStack._obj = null;\n\t\treturn true;\n\t},\n\tgetItemNode:function(search_id){\n\t\tif (this._htmlmap)\n\t\t\treturn this._htmlmap[search_id];\n\t\t\t\n\t\t//fill map if it doesn't created yet\n\t\tthis._htmlmap={};\n\t\t\n\t\tvar t = this._dataobj.getElementsByTagName(\"DIV\");\n\t\tfor (var i=0; i < t.length; i++){\n\t\t\tvar id = t[i].getAttribute(this._id); //get item's\n\t\t\tif (id) \n\t\t\t\tthis._htmlmap[id]=t[i];\n\t\t}\n\t\t//call locator again, when map is filled\n\t\treturn this.getItemNode(search_id);\n\t},\n\t_branch_render_supported:1\n};\n\nexport default TreeRenderStack;","import {bind, extend, _to_array, copy, clone, isArray, uid, _power_array} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport DataStore from \"../core/datastore\";\nimport DataDriver from \"../load/drivers/index\";\n\n\n// #include core/datastore.js\n// #include core/bind.js\n// #include core/treemove.js\n\nconst TreeStore = {\n\tname:\"TreeStore\",\n\t$init:function() {\n\t\tthis._filterMode={\n\t\t\t//level:1,\n\t\t\tshowSubItems:true\n\t\t};\n\t\tthis.branch = { 0:[] };\n\t\tthis.attachEvent(\"onParse\", function(driver){\n\t\t\tthis._set_child_scheme(driver.child);\n\t\t});\n\t\tthis.attachEvent(\"onClearAll\", bind(function(){\n\t\t\tthis._filter_branch = null;\n\t\t},this));\n\t},\n\tfilterMode_setter:function(mode){\n\t\treturn extend(this._filterMode, mode, true);\n\t},\n\t_filter_reset:function(preserve){\n\t\t//remove previous filtering , if any\n\t\tif (this._filter_branch && !preserve){\n\t\t\tthis.branch = this._filter_branch;\n\t\t\tthis.order = _to_array(copy(this.branch[0]));\n\t\t\tfor (var key in this.branch)\n\t\t\t\tif (key != \"0\")\t//exclude 0 - virtual root\n\t\t\t\t\tthis.getItem(key).$count = this.branch[key].length;\n\t\t\tdelete this._filter_branch;\n\t\t}\n\t},\n\t_filter_core:function(filter, value, preserve, filterMode){\n\t\t//for tree we have few filtering options\n\t\t//- filter leafs only\n\t\t//- filter data on specific level\n\t\t//- filter data on all levels\n\t\t//- in all cases we can show or hide empty folder\n\t\t//- in all cases we can show or hide childs for matched item\n\t\t\n\t\t//set new order of items, store original\n\t\tif (!preserve ||  !this._filter_branch){\n\t\t\tthis._filter_branch = this.branch;\n\t\t\tthis.branch  = clone(this.branch);\n\t\t}\n\n\t\tthis.branch[0] = this._filter_branch_rec(filter, value, this.branch[0], 1, (filterMode||{}));\n\t},\n\t_filter_branch_rec:function(filter, value, branch, level, config){\n\t\t//jshint -W041\n\t\tvar neworder = [];\n\t\t\n\t\tvar allow = (config.level && config.level != level);\n\n\t\tfor (var i=0; i < branch.length; i++){\n\t\t\tvar id = branch[i];\n\t\t\tvar item = this.getItem(id);\n\t\t\tvar child_run = false;\n\t\t\tvar sub = this.branch[id];\n\n\t\t\tif (allow){\n\t\t\t\tchild_run = true;\n\t\t\t} else if (filter(this.getItem(id),value)){\n\t\t\t\tneworder.push(id);\n\t\t\t\t// open all parents of the found item\n\t\t\t\tif (config.openParents !== false){\n\t\t\t\t\tvar parentId = this.getParentId(id);\n\t\t\t\t\twhile(parentId && parentId != \"0\"){\n\t\t\t\t\t\tthis.getItem(parentId).open = 1;\n\t\t\t\t\t\tparentId = this.getParentId(parentId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//in case of of fixed level filtering - do not change child-items\n\t\t\t\tif (config.level || config.showSubItems)\n\t\t\t\t\tcontinue;\n\t\t\t} else {\n\t\t\t\t//filtering level, not match\n\t\t\t\tchild_run = true;\n\t\t\t}\t\n\n\t\t\t//if \"filter by all levels\" - filter childs\n\t\t\tif (allow || !config.level){ \n\t\t\t\tif (sub){\n\t\t\t\t\tvar newsub = this.branch[id] = this._filter_branch_rec(filter, value, sub, level+1, config);\n\t\t\t\t\titem.$count = newsub.length;\n\t\t\t\t\tif (child_run && newsub.length)\n\t\t\t\t\t\tneworder.push(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn neworder;\n\t},\n\tcount:function(){\n\t\tif (this.order.length)\n\t\t\treturn this.order.length;\n\n\t\t//we must return some non-zero value, or logic of selection will think that we have not data at all\n\t\tvar count=0;\n\t\tthis.eachOpen(function(){ count++; });\n\t\treturn count;\n\t},\n\t_change_branch_id:function(branches, parent, old, newid){\n\t\tif (branches[old]){\n\t\t\tvar branch = branches[newid] = branches[old];\n\t\t\tfor (var i = 0; i < branch.length; i++)\n\t\t\t\tthis.getItem(branch[i]).$parent = newid;\n\t\t\tdelete branches[old];\n\t\t}\n\t\tif (branches[parent]){\n\t\t\tvar index = _power_array.find.call(branches[parent], old);\n\t\t\tif (index >= 0)\n\t\t\t\tbranches[parent][index] = newid;\n\t\t}\n\t},\n\tchangeId:function(old, newid){\n\t\tif(old == newid) return;\n\t\t\n\t\tvar parent = this.getItem(old).$parent;\n\t\tthis._change_branch_id(this.branch, parent, old, newid);\n\n\t\t//in case of filter applied, update id in filtered state as well\n\t\tif (this._filter_branch)\n\t\t\tthis._change_branch_id(this._filter_branch, parent, old, newid);\n\n\t\treturn DataStore.prototype.changeId.call(this, old, newid);\n\t},\n\tclearAll:function(soft){\n\t\tthis.branch = { 0:[] };\n\t\tDataStore.prototype.clearAll.call(this, soft);\t\n\t},\n\tgetPrevSiblingId:function(id){\n\t\tvar order = this.branch[this.getItem(id).$parent];\n\t\tvar pos = _power_array.find.call(order, id)-1;\n\t\tif (pos>=0)\n\t\t\treturn order[pos];\n\t\treturn null;\n\t},\n\tgetNextSiblingId:function(id){\n\t\tvar order = this.branch[this.getItem(id).$parent];\n\t\tvar pos = _power_array.find.call(order, id)+1;\n\t\tif (pos<order.length)\n\t\t\treturn order[pos];\n\t\treturn null;\n\t},\n\tgetParentId:function(id){\n\t\treturn this.getItem(id).$parent;\n\t},\n\tgetFirstChildId:function(id){\n\t\tvar order = this.branch[id];\n\t\tif (order && order.length)\n\t\t\treturn order[0];\n\t\treturn null;\n\t},\n\tisBranch:function(parent){\n\t\treturn !!this.branch[parent];\n\t},\n\tgetBranchIndex:function(child){\n\t\tvar t = this.branch[this.pull[child].$parent];\n\t\treturn _power_array.find.call(t, child);\n\t},\n\t_set_child_scheme:function(parse_name){\n\n\t\tif (typeof parse_name == \"string\")\n\t\t\tthis._datadriver_child = function(obj){\n\t\t\t\tvar t = obj[parse_name];\n\t\t\t\tif (t)\n\t\t\t\t\tdelete obj[parse_name];\n\t\t\t\treturn t;\n\t\t\t};\n\t\telse \n\t\t\tthis._datadriver_child = parse_name;\n\t},\n\t_inner_parse:function(info, recs){ \n\t\tvar parent  = info.parent || 0;\n\t\t\n\t\tfor (var i=0; i<recs.length; i++){\n\t\t\t//get hash of details for each record\n\t\t\tvar temp = this.driver.getDetails(recs[i]);\n\t\t\tvar id = this.id(temp); \t//generate ID for the record\n\t\t\tvar update = !!this.pull[id]; //update mode\n\n\t\t\tif (update){\n\t\t\t\ttemp = extend(this.pull[id], temp, true);\n\t\t\t\tif (this._scheme_update)\n\t\t\t\t\tthis._scheme_update(temp);\n\t\t\t} else {\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(temp);\n\t\t\t\tthis.pull[id]=temp;\n\t\t\t}\n\n\t\t\tthis._extraParser(temp, parent, 0, update, info.from ? info.from*1+i : 0);\n\t\t}\n\n\t\t//fix state of top item after data loading\n\t\tvar pItem = this.pull[parent] || {};\n\t\tvar pBranch = this.branch[parent] || [];\n\t\tpItem.$count = pBranch.length;\n\t\tdelete pItem.webix_kids;\n\n\t\tif (info.size && info.size != pBranch.length)\n\t\t\tpBranch[info.size-1] = undefined;\n\t},\n\t_extraParser:function(obj, parent, level, update, from){\n\t\t//processing top item\n\t\tobj.$count = 0;\n\t\t//using soft check, as parent can be a both 0 and \"0\" ( second one in case of loading from server side ) \n\t\tobj.$parent = parent!=\"0\"?parent:0;\n\t\tobj.$level = level||(parent!=\"0\"?this.pull[parent].$level+1:1);\n\t\t\n\t\tvar parent_branch = this.branch[obj.$parent];\n\t\tif (!parent_branch)\n\t\t\tparent_branch = this.branch[obj.$parent] = [];\n\t\tif (this._filter_branch)\n\t\t\tthis._filter_branch[obj.$parent] = parent_branch;\n\n\t\tif (!update){\n\t\t\tvar pos = from || parent_branch.length;\n\t\t\tparent_branch[pos] = obj.id;\n\t\t}\n\n\t\tvar child = this._datadriver_child(obj);\n\n\t\tif (obj.webix_kids){\n\t\t\treturn (obj.$count = -1);\n\t\t}\n\n\t\tif (!child) //ignore childless\n\t\t\treturn (obj.$count = 0);\t\n\n\t\t//when loading from xml we can have a single item instead of an array\n\t\tif (!isArray(child))\n\t\t\tchild = [child];\n\t\t\n\n\t\tfor (var i=0; i < child.length; i++) {\n\t\t\t//extra processing to convert strings to objects\n\t\t\tvar item = DataDriver.json.getDetails(child[i]);\n\t\t\tvar itemid = this.id(item);\n\t\t\tupdate = !!this.pull[itemid];\n\t\t\t\n\t\t\tif (update){\n\t\t\t\titem = extend(this.pull[itemid], item, true);\n\t\t\t\tif (this._scheme_update)\n\t\t\t\t\tthis._scheme_update(item);\n\t\t\t} else {\n\t\t\t\tif (this._scheme_init)\n\t\t\t\t\tthis._scheme_init(item);\n\t\t\t\tthis.pull[itemid]=item;\n\t\t\t}\n\t\t\tthis._extraParser(item, obj.id, obj.$level+1, update);\n\t\t}\n\n\t\t//processing childrens\n\t\tvar branch = this.branch[obj.id];\n\t\tif (branch)\n\t\t\tobj.$count = branch.length;\n\t}, \n\t_sync_to_order:function(master){\n\t\tthis.order = _to_array();\n\n\t\t// send current order to prevent simultaneous use in sync mode\n\t\tthis._sync_each_child(this.order, 0, master);\n\t},\n\t_sync_each_child:function(order, start, master){\n\t\tvar branch = this.branch[start];\n\t\tfor (var i=0; i<branch.length; i++){\n\t\t\tvar id = branch[i];\n\t\t\torder.push(id);\n\t\t\tvar item = this.pull[id];\n\t\t\tif (item && item.open){\n\t\t\t\tif (item.$count == -1)\n\t\t\t\t\tmaster.loadBranch(id);\n\t\t\t\telse if (item.$count)\n\t\t\t\t\tthis._sync_each_child(order, id, master);\n\t\t\t}\n\t\t}\n\t},\n\tprovideApi:function(target,eventable){\n\t\tvar list = [\"getPrevSiblingId\",\"getNextSiblingId\",\"getParentId\",\"getFirstChildId\",\"isBranch\",\"getBranchIndex\",\"filterMode_setter\"];\n\t\tfor (var i=0; i < list.length; i++)\n\t\t\ttarget[list[i]]=this._methodPush(this,list[i]);\n\n\t\tif (!target.getIndexById)\n\t\t\tDataStore.prototype.provideApi.call(this, target, eventable);\n\t},\n\tgetTopRange:function(){\n\t\treturn _to_array([].concat(this.branch[0])).map(function(id){\n\t\t\treturn this.getItem(id);\n\t\t}, this);\n\t},\n\teachChild:function(id, functor, master, all){\n\t\tvar branch = this.branch;\n\t\tif (all && this._filter_branch)\n\t\t\tbranch = this._filter_branch;\n\n\t\tvar stack = branch[id];\n\t\tif (stack)\n\t\t\tfor (var i=0; i<stack.length; i++){\n\t\t\t\tif(stack[i])\n\t\t\t\t\tfunctor.call((master||this), this.getItem(stack[i]));\n\t\t\t}\n\t},\n\teach:function(method,master, all, id){\n\t\tthis.eachChild((id||0), function(item){\n\t\t\tvar branch = this.branch;\n\n\t\t\tmethod.call((master||this), item);\n\n\t\t\tif (all && this._filter_branch)\n\t\t\t\tbranch = this._filter_branch;\n\n\t\t\tif (item && branch[item.id])\n\t\t\t\tthis.each(method, master, all, item.id);\n\t\t}, this, all);\n\t},\t\n\teachOpen:function(method,master, id){\n\t\tthis.eachChild((id||0), function(item){\n\t\t\tmethod.call((master||this), item);\n\t\t\tif (this.branch[item.id] && item.open)\n\t\t\t\tthis.eachOpen(method, master, item.id);\n\t\t});\n\t},\n\teachSubItem:function(id, functor){\n\t\tvar top = this.branch[id||0];\n\t\tif (top)\n\t\t\tfor (var i=0; i<top.length; i++){\n\t\t\t\tvar key = top[i];\n\t\t\t\tif (this.branch[key]){\n\t\t\t\t\tfunctor.call(this, this.getItem(key),true);\n\t\t\t\t\tthis.eachSubItem(key, functor);\n\t\t\t\t} else\n\t\t\t\t\tfunctor.call(this, this.getItem(key), false);\n\t\t\t}\n\t},\n\teachLeaf:function(id, functor){\n\t\tvar top = this.branch[id||0];\n\t\tif (top)\n\t\t\tfor (var i=0; i<top.length; i++){\n\t\t\t\tvar key = top[i];\n\t\t\t\tif (this.branch[key]){\n\t\t\t\t\tthis.eachLeaf(key, functor);\n\t\t\t\t} else\n\t\t\t\t\tfunctor.call(this, this.getItem(key), false);\n\t\t\t}\n\t},\n\t_sort_core:function(sorter, order, branch){\n\t\tbranch = branch || this.branch;\n\n\t\tfor (let key in branch){\n\t\t\tconst bset = branch[key];\n\n\t\t\tconst newbranch = [];\n\t\t\tfor (let i = bset.length-1; i>=0; i--)\n\t\t\t\tnewbranch[i] = this.pull[bset[i]];\n\n\t\t\tnewbranch.sort(sorter);\n\t\t\tbranch[key] = newbranch.map(a => a.id);\n\t\t}\n\t\treturn order;\n\t},\n\tadd:function(obj, index, pid){\n\t\tvar refresh_parent = false;\n\n\t\tvar parent = this.getItem(pid||0);\n\t\tif(parent){\n\t\t\t//when adding items to leaf item - it need to be repainted\n\t\t\tif (!this.branch[parent.id])\n\t\t\t\trefresh_parent = true;\n\n\t\t\tparent.$count++;\n\t\t\t//fix for the adding into dynamic loading branch\n\t\t\t//dynamic branch has $count as -1\n\t\t\tif (!parent.$count) parent.$count = 1;\n\t\t}\n\n\t\tthis.branch[pid||0] = this.order = _to_array(this.branch[pid||0]);\n\n\t\tobj.$count = obj.webix_kids ? -1 : 0; \n\t\tobj.$level= (parent?parent.$level+1:1); \n\t\tobj.$parent = (parent?parent.id:0);\n\n\t\tif (this._filter_branch){\t//adding during filtering\n\t\t\tvar origin = this._filter_branch[pid||0];\n\t\t\t//newly created branch\n\t\t\tif (!origin) origin = this._filter_branch[pid] = this.order;\n\n\t\t\t//branch can be shared bettwen collections, ignore such cases\n\t\t\tif (this.order !== origin){\n\t\t\t\t//we can't know the location of new item in full dataset, making suggestion\n\t\t\t\t//put at end by default\n\t\t\t\tvar original_index = origin.length;\n\t\t\t\t//put at start only if adding to the start and some data exists\n\t\t\t\tif (!index && this.branch[pid||0].length)\n\t\t\t\t\toriginal_index = 0;\n\n\t\t\t\torigin = _to_array(origin);\n\t\t\t\tobj.id = obj.id || uid();\n\t\t\t\torigin.insertAt(obj.id,original_index);\n\t\t\t}\n\t\t}\n\n\t\t//call original adding logic\n\t\tvar result = DataStore.prototype.add.call(this, obj, index);\n\n\n\t\tif (refresh_parent)\n\t\t\tthis.refresh(pid);\n\n\t\treturn result;\n\t},\n\t_rec_remove:function(id){\n\t\tvar obj = this.pull[id];\n\t\tif(this.branch[obj.id] && this.branch[obj.id].length > 0){\n\t\t\tvar branch = this.branch[id];\n\t\t\tfor(var i=0;i<branch.length;i++)\n\t\t\t\tthis._rec_remove(branch[i], true);\n\t\t}\n\t\tdelete this.branch[id];\n\t\tif(this._filter_branch)\n\t\t\tdelete this._filter_branch[id];\n\t\tdelete this.pull[id];\n\t\tif (this._marks[id])\n\t\t\tdelete this._marks[id];\n\t},\n\t_filter_removed:function(pull, parentId, id){\n\t\tvar branch = pull[parentId];\n\t\tif (branch.length == 1 && branch[0] == id && parentId){\n\t\t\tdelete pull[parentId];\n\t\t} else\n\t\t\t_to_array(branch).remove(id);\n\t},\n\tremove:function(id){\n\t\t//id can be an array of IDs - result of getSelect, for example\n\t\tif (isArray(id)){\n\t\t\tfor (var i=0; i < id.length; i++)\n\t\t\t\tthis.remove(id[i]);\n\t\t\treturn;\n\t\t}\n\n\t\tassert(this.exists(id), \"Not existing ID in remove command\"+id);\n\t\tvar obj = this.pull[id];\n\t\tvar parentId = (obj.$parent||0);\n\n\t\tif (this.callEvent(\"onBeforeDelete\",[id]) === false) return false;\n\t\tthis._rec_remove(id);\n\t\tthis.callEvent(\"onAfterDelete\",[id]);\n\n\t\tvar parent = this.pull[parentId];\n\t\tthis._filter_removed(this.branch, parentId, id);\n\t\tif (this._filter_branch)\n\t\t\tthis._filter_removed(this._filter_branch, parentId, id);\n\n\t\tvar refresh_parent = 0;\n\t\tif (parent){\n\t\t\tparent.$count--;\n\t\t\tif (parent.$count<=0){\n\t\t\t\tparent.$count=0;\n\t\t\t\tparent.open = 0;\n\t\t\t\trefresh_parent = 1;\n\t\t\t}\n\t\t}\n\n\t\t//repaint signal\n\t\tthis.callEvent(\"onStoreUpdated\",[id,obj,\"delete\"]);\n\t\tif (refresh_parent)\n\t\t\tthis.refresh(parent.id);\n\t},\n\t/*\n\t\tserializes data to a json object\n\t*/\n\tgetBranch:function(id){\n\t\tvar out = [];\n\t\tvar items = (this._filter_branch || this.branch)[id];\n\t\tif (items)\n\t\t\tfor (var i = 0; i < items.length; i++) out[i] = this.pull[items[i]];\n\n\t\treturn out;\n\t},\n\tserialize: function(id, all){\n\t\tvar coll = this.branch;\n\t\t//use original collection of branches\n\t\tif (all && this._filter_branch) coll = this._filter_branch;\n\n\t\tvar ids = coll[id||0];\n\t\tvar result = [];\n\t\tfor(var i=0; i< ids.length;i++) {\n\t\t\tvar obj = this.pull[ids[i]];\n\t\t\tvar rel;\n\n\t\t\tif (this._scheme_serialize){\n\t\t\t\trel = this._scheme_serialize(obj);\n\t\t\t\tif (rel===false) continue;\n\t\t\t} else \n\t\t\t\trel = copy(obj);\n\t\t\t\t\n\t\t\tif (coll[obj.id])\n\t\t\t\trel.data = this.serialize(obj.id, all);\n\n\t\t\tresult.push(rel);\n\t\t}\n\t\treturn result;\n\t}\n};\n\nexport default TreeStore;","import {create, preventEvent} from \"../webix/html\";\nimport {bind, extend} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\nimport env from \"../webix/env\";\nimport DataDriver from \"../load/drivers/index\";\n\n\nconst UploadDriver = {\n\t$render: function() {\n\t\tif (this._upload_area){\n\t\t\t//firstChild is webix_el_box container, which have relative position\n\t\t\t//as result, file control is placed under the button and not in the top corner\n\t\t\tthis._contentobj.firstChild.appendChild(this._upload_area);\n\t\t\treturn;\n\t\t}\n\t\tthis.files.attachEvent(\"onBeforeDelete\", this._stop_file);\n\n\t\tvar input_config =  {\n\t\t\t\"type\": \"file\",\n\t\t\t\"class\": \"webix_hidden_upload\",\n\t\t\ttabindex:-1\n\t\t};\n\n\t\tif (this._settings.accept)\n\t\t\tinput_config.accept = this._settings.accept;\n\n\t\tif (this._settings.multiple)\n\t\t\tinput_config.multiple = \"true\";\n\n\t\tif (this._settings.directory) {\n\t\t\tinput_config.webkitdirectory = \"true\";\n\t\t\tinput_config.mozdirectory = \"true\";\n\t\t\tinput_config.directory = \"true\";\n\t\t}\n\n\t\tvar f = create(\"input\", input_config);\n\t\tthis._upload_area = this._contentobj.firstChild.appendChild(f);\n\n\t\t_event(this._viewobj, \"drop\", bind(function(e) {\n\t\t\tthis.$drop(e);\n\t\t\tpreventEvent(e);\n\t\t}, this));\n\t\t_event(f, \"change\", bind(function() {\n\t\t\tthis._add_files(f.files);\n\n\t\t\tif (env.isIE) {\n\t\t\t\tvar t = document.createElement(\"form\");\n\t\t\t\tt.appendChild(this._upload_area);\n\t\t\t\tt.reset();\n\t\t\t\tthis._contentobj.firstChild.appendChild(f);\n\t\t\t} else\n\t\t\t\tf.value = \"\";\n\t\t}, this));\n\t\t_event(this._viewobj, \"click\", bind(function() {\n\t\t\tvar now_date = new Date();\n\t\t\tif (now_date - (this._upload_timer_click || 0) > 250) {\n\t\t\t\tthis.fileDialog();\n\t\t\t}\n\t\t}, this));\n\n\t\t_event(this._viewobj, \"dragenter\", preventEvent);\n\t\t_event(this._viewobj, \"dragexit\", preventEvent);\n\t\t_event(this._viewobj, \"dragover\", preventEvent);\n\t},\n\t_directoryEntry: function(value) {\n\t\treturn value.isDirectory;\n\t},\n\t_directoryDrop: function(item, state, path) {\n\t\tif (item.isFile){\n\t\t\titem.file(function(file){\n\t\t\t\tstate.addFile(file, null, null, { name : path+\"/\"+file.name });\n\t\t\t});\n\t\t} else if (item.isDirectory) {\n\t\t\t// Get folder contents\n\t\t\tvar dirReader = item.createReader();\n\t\t\tdirReader.readEntries(function(entries){\n\t\t\t\tfor (var i = 0; i < entries.length; i++){\n\t\t\t\t\tstate._directoryDrop(entries[i], state, (path ? (path + \"/\") : \"\") + item.name);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\t// adding files by drag-n-drop\n\t$drop: function(e) {\n\t\tvar files = e.dataTransfer.files;\n\t\tvar items = e.dataTransfer.items;\n\n\t\t// non-file drop\n\t\tif (!files.length) return;\n\n\t\tif (this.callEvent(\"onBeforeFileDrop\", [files, e])) {\n\t\t\titems = items || files; //IE10+\n\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\t//https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item.webkitGetAsEntry){\n\t\t\t\t\titem = item.webkitGetAsEntry();\n\t\t\t\t\tif (item.isDirectory){\n\t\t\t\t\t\tthis._directoryDrop(item, this, \"\");\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.addFile(files[i]);\n\t\t\t}\n\t\t}\n\t\tthis.callEvent(\"onAfterFileDrop\", [files, e]);\n\t},\n\tfileDialog:function(context){\n\t\tthis._upload_timer_click = new Date();\n\t\tthis._last_file_context = context;\n\t\tvar inputs = this._viewobj.getElementsByTagName(\"INPUT\");\n\t\tinputs[inputs.length-1].click();\n\t},\n\tsend: function(id){\n\t\t//alternative syntx send(callback)\n\t\tif (typeof id == \"function\"){\n\t\t\tthis._last_assigned_upload_callback = id;\n\t\t\tid = 0;\n\t\t}\n\n\t\tif (!id){\n\t\t\tvar order = this.files.data.order;\n\t\t\tvar complete = true;\n\n\t\t\tif (order.length)\n\t\t\t\tfor (var i=0; i<order.length; i++)\n\t\t\t\t\tcomplete = (!this.send(order[i])) && complete;\n\n\t\t\tif (complete)\n\t\t\t\tthis._upload_complete();\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar item = this.files.getItem(id);\n\t\tif (item.status !== \"client\") return false;\n\n\t\tassert(this._settings.upload, \"You need to define upload url for uploader component\");\n\t\titem.status = \"transfer\";\n\n\t\tvar formData = new FormData();\n\n\t\tformData.append(this.config.inputName, item.file, item.name);\n\t\tformData.append(this.config.inputName+\"_fullpath\", item.name);\n\n\t\tvar headers = {};\n\t\tvar globalData = this._settings.formData || {};\n\t\tif (typeof globalData === \"function\")\n\t\t\tglobalData = globalData.call(this);\n\t\tvar details = extend(item.formData||{} , globalData);\n\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar url = this._get_active_url(item);\n\t\tif(callEvent(\"onBeforeAjax\",[\"POST\", url, details, xhr, headers, formData])){\n\t\t\tfor (let key in details)\n\t\t\t\tformData.append(key, details[key]);\n\n\t\t\titem.xhr = xhr;\n\n\t\t\txhr.upload.addEventListener(\"progress\", bind(function(e){ this.$updateProgress(id, e.loaded/e.total*100); }, this), false);\n\t\t\txhr.onload = bind(function(){ if (!xhr.aborted) this._file_complete(id); }, this);\n\t\t\txhr.open(\"POST\", url, true);\n\n\t\t\tfor (let key in headers)\n\t\t\t\txhr.setRequestHeader(key, headers[key]);\n\n\t\t\txhr.send(formData);\n\t\t}\n\n\t\tthis.$updateProgress(id, 0);\n\t\treturn true;\n\t},\n\n\t\n\t_file_complete: function(id) {\n\t\tvar item = this.files.getItem(id);\n\t\tif (item){\n\t\t\tvar response = null;\n\t\t\tif(item.xhr.status < 400){\n\t\t\t\tvar driver = DataDriver[this._settings.datatype||\"json\"];\n\t\t\t\tresponse = driver.toObject(item.xhr.responseText);\n\t\t\t\tif (response)\n\t\t\t\t\tresponse = driver.getDetails(response);\n\t\t\t}\n\t\t\tif (!response || response.status == \"error\"){\n\t\t\t\t// file upload error\n\t\t\t\titem.status = \"error\";\n\t\t\t\tdelete item.percent;\n\t\t\t\tthis.files.updateItem(id);\n\t\t\t\tthis.callEvent(\"onFileUploadError\", [item, response]);\n\t\t\t} else {\n\t\t\t\t// file upload complete\n\t\t\t\tassert(\n\t\t\t\t\t(!response.status || response.status == \"server\"),\n\t\t\t\t\t\"Not supported status value, use 'error' or 'server'\"\n\t\t\t\t);\n\t\t\t\tthis._complete(id, response);\n\t\t\t}\n\t\t\tdelete item.xhr;\n\t\t}\n\t},\n\tstopUpload: function(id){\n\t\tbind(this._stop_file,this.files)(id);\n\t},\n\t_stop_file: function(id) {\n\t\tvar item = this.getItem(id);\n\t\tif (typeof(item.xhr) !== \"undefined\"){\n\t\t\titem.xhr.aborted = true;\n\t\t\titem.xhr.abort();\n\t\t\tdelete item.xhr;\n\t\t\titem.status = \"client\";\n\t\t}\n\t}\n\n};\n\nexport default UploadDriver;","import {insertBefore, remove} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport {bind} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\n\n\n/*\n\tRenders collection of items\n\tAlways shows y-scroll\n\tCan be used with huge datasets\n\t\n\t@export\n\t\tshow\n\t\trender\n*/\n\nconst VirtualRenderStack ={\n\t$init:function(){\n\t\tassert(this.render,\"VirtualRenderStack :: Object must use RenderStack first\");\n\n\t\tthis._htmlmap={}; //init map of rendered elements\n\n\t\t//we need to repaint area each time when view resized or scrolling state is changed\n\t\t_event(this._viewobj,\"scroll\",bind(this._render_visible_rows,this));\n\n\t\t//here we store IDs of elemenst which doesn't loadede yet, but need to be rendered\n\t\tthis._unrendered_area=[];\n\t},\n\t//return html object by item's ID. Can return null for not-rendering element\n\tgetItemNode:function(search_id){\n\t\t//collection was filled in _render_visible_rows\n\t\treturn this._htmlmap[search_id];\n\t},\n\t//adjust scrolls to make item visible\n\tshowItem:function(id){\n\t\tvar range = this._getVisibleRange();\n\t\tvar ind = this.data.getIndexById(id);\n\t\t//we can't use DOM method for not-rendered-yet items, so fallback to pure math\n\t\tvar dy = Math.floor(ind/range._dx)*range._y;\n\t\tvar state = this.getScrollState();\n\t\tif (dy<state.y || dy + this._settings.height >= state.y + this._content_height)\n\t\t\tthis.scrollTo(0, dy);\n\t},\n\t//repain self after changes in DOM\n\t//for add, delete, move operations - render is delayed, to minify performance impact\n\trender:function(id,data,type){\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\t\t\n\t\tif (id){\n\t\t\tvar cont = this.getItemNode(id);\t//old html element\n\t\t\tswitch(type){\n\t\t\t\tcase \"update\":\n\t\t\t\t\tif (!cont) return;\n\t\t\t\t\t//replace old with new\n\t\t\t\t\tvar t = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tinsertBefore(t, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: // \"move\", \"add\", \"delete\"\n\t\t\t\t\t/*\n\t\t\t\t\t\tfor all above operations, full repainting is necessary\n\t\t\t\t\t\tbut from practical point of view, we need only one repainting per thread\n\t\t\t\t\t\tcode below initiates double-thread-rendering trick\n\t\t\t\t\t*/\n\t\t\t\t\tthis._render_delayed();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t//full repainting\n\t\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\t\tthis._htmlmap = {}; \t\t\t\t\t//nulify links to already rendered elements\n\t\t\t\tthis._render_visible_rows(null, true);\t\n\t\t\t\t// clear delayed-rendering, because we already have repaint view\n\t\t\t\tthis._wait_for_render = false;\t\t\t\n\t\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t\t}\n\t\t}\n\t},\n\t//implement double-thread-rendering pattern\n\t_render_delayed:function(){\n\t\t//this flag can be reset from outside, to prevent actual rendering \n\t\tif (this._wait_for_render) return;\n\t\tthis._wait_for_render = true;\t\n\t\t\n\t\twindow.setTimeout(bind(function(){\n\t\t\tthis.render();\n\t\t},this),1);\n\t},\n\t//create empty placeholders, which will take space before rendering\n\t_create_placeholder:function(height){\n\t\tif(env.maxHTMLElementSize)\n\t\t\theight = Math.min(env.maxHTMLElementSize, height);\n\t\tvar node = document.createElement(\"DIV\");\n\t\tnode.style.cssText = \"height:\"+height+\"px; width:100%; overflow:hidden;\";\n\t\treturn node;\n\t},\n\t/*\n\t\tMethods get coordinatest of visible area and checks that all related items are rendered\n\t\tIf, during rendering, some not-loaded items was detected - extra data loading is initiated.\n\t\treset - flag, which forces clearing of previously rendered elements\n\t*/\n\t_render_visible_rows:function(e,reset){\n\t\tthis._unrendered_area=[]; //clear results of previous calls\n\t\t\n\t\tvar viewport = this._getVisibleRange();\t//details of visible view\n\n\t\tif (!this._dataobj.firstChild || reset){\t//create initial placeholder - for all view space\n\t\t\tthis._dataobj.innerHTML=\"\";\n\t\t\tthis._dataobj.appendChild(this._create_placeholder(viewport._max));\n\t\t\t//register placeholder in collection\n\t\t\tthis._htmlrows = [this._dataobj.firstChild];\n\t\t}\n\t\t\n\t\t/*\n\t\t\tvirtual rendering breaks all view on rows, because we know widht of item\n\t\t\twe can calculate how much items can be placed on single row, and knowledge \n\t\t\tof that, allows to calculate count of such rows\n\t\t\t\n\t\t\teach time after scrolling, code iterate through visible rows and render items \n\t\t\tin them, if they are not rendered yet\n\t\t\t\n\t\t\tboth rendered rows and placeholders are registered in _htmlrows collection\n\t\t*/\n\n\t\t//position of first visible row\n\t\tvar t = viewport._from;\n\t\t\t\n\t\twhile(t<=viewport._height){\t//loop for all visible rows\n\t\t\t//skip already rendered rows\n\t\t\twhile(this._htmlrows[t] && this._htmlrows[t]._filled && t<=viewport._height){\n\t\t\t\tt++; \n\t\t\t}\n\t\t\t//go out if all is rendered\n\t\t\tif (t>viewport._height) break;\n\t\t\t\n\t\t\t//locate nearest placeholder\n\t\t\tvar holder = t;\n\t\t\twhile (!this._htmlrows[holder]) holder--;\n\t\t\tvar holder_row = this._htmlrows[holder];\n\t\t\t\n\t\t\t//render elements in the row\t\t\t\n\t\t\tvar base = t*viewport._dx+(this.data.$min||0);\t//index of rendered item\n\t\t\tif (base > (this.data.$max||Infinity)) break;\t//check that row is in virtual bounds, defined by paging\n\t\t\tvar nextpoint =  Math.min(base+viewport._dx-1,(this.data.$max?this.data.$max-1:Infinity));\n\t\t\tvar node = this._create_placeholder(viewport._y);\n\t\t\t//all items in rendered row\n\t\t\tvar range = this.data.getIndexRange(base, nextpoint);\n\t\t\tif (!range.length) break; \n\t\t\t\n\t\t\tvar loading = { $template:\"Loading\" };\n\t\t\tfor (let i=0; i<range.length; i++){\n\t\t\t\tif (!range[i])\n\t\t\t\t\tthis._unrendered_area.push(base+i);\n\t\t\t\trange[i] = this._toHTML(range[i]||loading);\n\t\t\t}\n\n\t\t\tnode.innerHTML=range.join(\"\"); \t//actual rendering\n\t\t\tfor (let i=0; i < range.length; i++)\t\t\t\t\t//register all new elements for later usage in getItemNode\n\t\t\t\tthis._htmlmap[this.data.getIdByIndex(base+i)]=node.childNodes[i];\n\t\t\t\n\t\t\t//correct placeholders\n\t\t\tvar h = parseFloat(holder_row.style.height,10);\n\t\t\tvar delta = (t-holder)*viewport._y;\n\t\t\tvar delta2 = (h-delta-viewport._y);\n\t\t\t\n\t\t\t//add new row to the DOOM\n\t\t\tinsertBefore(node,delta?holder_row.nextSibling:holder_row,this._dataobj);\n\t\t\tthis._htmlrows[t]=node;\n\t\t\tnode._filled = true;\n\t\t\t\n\t\t\t/*\n\t\t\t\tif new row is at start of placeholder - decrease placeholder's height\n\t\t\t\telse if new row takes whole placeholder - remove placeholder from DOM\n\t\t\t\telse \n\t\t\t\t\twe are inserting row in the middle of existing placeholder\n\t\t\t\t\tdecrease height of existing one, and add one more, \n\t\t\t\t\tbefore the newly added row\n\t\t\t*/\n\t\t\tif (delta <= 0 && delta2>0){\n\t\t\t\tholder_row.style.height = delta2+\"px\";\n\t\t\t\tthis._htmlrows[t+1] = holder_row;\n\t\t\t} else {\n\t\t\t\tif (delta<0)\n\t\t\t\t\tremove(holder_row);\n\t\t\t\telse\n\t\t\t\t\tholder_row.style.height = delta+\"px\";\n\t\t\t\tif (delta2>0){ \n\t\t\t\t\tvar new_space = this._htmlrows[t+1] = this._create_placeholder(delta2);\n\t\t\t\t\tinsertBefore(new_space,node.nextSibling,this._dataobj);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tt++;\n\t\t}\n\t\t\n\t\t//when all done, check for non-loaded items\n\t\tif (this._unrendered_area.length){\n\t\t\t//we have some data to load\n\t\t\t//detect borders\n\t\t\tvar from = this._unrendered_area[0];\n\t\t\tvar to = this._unrendered_area.pop()+1;\n\t\t\tif (to>from){\n\t\t\t\t//initiate data loading\n\t\t\t\tvar count = to - from;\n\t\t\t\tif (this._maybe_loading_already(count, from)) return;\n\n\t\t\t\tcount = Math.max(count, (this._settings.datafetch||this._settings.loadahead||0));\n\t\t\t\tthis.loadNext(count, from);\n\t\t\t}\n\t\t}\n\t},\n\t//calculates visible view\n\t_getVisibleRange:function(){\n\t\tvar state = this.getScrollState();\n\t\tvar top = Math.max(0, state.y);\n\t\tvar tpadding = this._tilesPadding||0;\n\t\tvar width = this._content_width - tpadding; \n\t\tvar height = this._content_height - tpadding/2;\n\n\t\t//size of single item\n\t\tvar t = this.type;\n\n\t\tvar dx = Math.floor(width/t.width)||1; //at least single item per row\n\t\t\n\t\tvar min = Math.floor(top/t.height);\t\t\t\t//index of first visible row\n\t\tvar dy = Math.ceil((height+top)/t.height)-1;\t\t//index of last visible row\n\t\t//total count of items, paging can affect this math\n\t\tvar count = this.data.$max?(this.data.$max-this.data.$min):this.data.count();\n\t\tvar max = Math.ceil(count/dx)*t.height;\t\t\t//size of view in rows\n\n\t\treturn { _from:min, _height:dy, _top:top, _max:max, _y:t.height, _dx:dx};\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\tif (!html){\n\t\t\tthis.showItem(id);\n\t\t\tthis._render_visible_rows();\n\t\t\thtml = this.getItemNode(id);\n\t\t}\n\t\treturn {\n\t\t\tleft:html.offsetLeft, \n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.offsetHeight,\n\t\t\twidth:html.offsetWidth,\n\t\t\tparent:this._contentobj\n\t\t};\n\t}\n};\n\nexport default VirtualRenderStack;","import {offset, insertBefore, remove} from \"../webix/html\";\nimport {bind, copy, _to_array} from \"../webix/helpers\";\nimport base from \"../views/view\";\nimport {_event} from \"../webix/htmlevents\";\n\nimport DragControl from \"../core/dragcontrol\";\n\n/*\n\tRenders collection of items on demand\n*/\nconst VRenderStack = {\n\t$init:function(){\n\t\tthis._htmlmap = {};\n\t\t_event(this._viewobj, \"scroll\", bind(function(){\n\t\t\tthis.render(null, null, \"paint\");\n\t\t}, this));\n\t},\n\t//return html container by its ID\n\t//can return undefined if container doesn't exists\n\tgetItemNode:function(search_id){\n\t\treturn this._htmlmap && this._htmlmap[search_id];\n\t},\n\t/*change scrolling state of top level container, so related item will be in visible part*/\n\tshowItem:function(id){\n\t\tconst index = this.data.getIndexById(id);\n\t\tif (index > -1){\n\t\t\tconst top = index * this.type.height;\n\t\t\tconst bottom = top + this.type.height;\n\t\t\tconst scroll = this.getScrollState();\n\t\t\tconst box = offset(this.$view);\n\t\t\tif (top < scroll.y)\n\t\t\t\tthis.scrollTo(0, top);\n\t\t\telse if (bottom > scroll.y+box.height)\n\t\t\t\tthis.scrollTo(0, bottom-box.height);\n\t\t}\n\t},\n\t//update view after data update\n\t//when called without parameters - all view refreshed\n\trender:function(id,data,type){\n\t\tif (!this.isVisible(this._settings.id) || this.$blockRender)\n\t\t\treturn;\n\t\t\n\t\tconst parent = (this._renderobj||this._dataobj);\n\n\t\tif (id){\n\t\t\tif (type == \"paint\" || type == \"update\"){\n\t\t\t\tconst cont = this.getItemNode(id); //get html element of updated item\n\t\t\t\tif (cont){\n\t\t\t\t\tconst t = this._htmlmap[id] = this._toHTMLObject(data);\n\t\t\t\t\tt.style.top = cont.style.top;\n\t\t\t\t\tt.style.position = \"absolute\";\n\t\t\t\t\tt.style.left = 0; t.style.width = \"100%\";\n\n\t\t\t\t\tinsertBefore(t, cont); \n\t\t\t\t\tremove(cont);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//updating not rendered yet item\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tlet isDrag, source, marked = this._marked_item_id;\n\t\tif (DragControl.active && type != \"drag-end\"){\n\t\t\tconst context = DragControl.getContext();\n\t\t\tisDrag = this._init_drop_area && context.from === this;\t\t//move and order modes\n\t\t\tsource = isDrag && _to_array(copy(context.source||[]));\n\t\t}\n\n\t\tif (type != \"paint\" || isDrag){\n\t\t\t//repaint all\n\t\t\tthis._htmlmap = {};\n\t\t\tparent.innerHTML = \"\";\n\t\t}\n\n\t\t//full reset\n\t\tif (this.callEvent(\"onBeforeRender\",[this.data])){\n\t\t\tconst count = this.data.count();\n\t\t\tconst scroll = this.getScrollState();\n\t\t\tconst box = offset(this._viewobj);\n\n\t\t\tlet top = Math.floor(scroll.y / this.type.height)-2;\n\t\t\tlet bottom = Math.ceil((scroll.y + box.height) / this.type.height)+2;\n\n\t\t\ttop = Math.max(0, top);\n\t\t\tbottom = Math.min(count-1, bottom+(isDrag?source.length-1:0));\n\n\t\t\tconst html = [];\n\t\t\tfor (let i=top; i<=bottom; i++){\n\t\t\t\tconst sid = this.data.order[i];\n\t\t\t\tif (isDrag && source.find(sid) !== -1){\n\t\t\t\t\tif (sid == marked) marked = this.data.order[i+1];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (!this._htmlmap[sid]){\n\t\t\t\t\tconst item = this.data.getItem(sid);\n\t\t\t\t\tif (!item){\n\t\t\t\t\t\tthis._run_load_next({ \n\t\t\t\t\t\t\tcount:bottom-i+(this._settings.loadahead || 0),\n\t\t\t\t\t\t\tstart:i \n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\thtml.push(this._toHTML(item));\n\t\t\t\t} else {\n\t\t\t\t\thtml.push(`<div webix_skip=\"true\" ${this._id}=\"${sid}\"></div>`);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._html.innerHTML = html.join(\"\");\n\n\t\t\tif (this._init_drop_area && type == \"drag-in\"){\t\t\t// can be external\n\t\t\t\tconst node = this._html.querySelector(`[${this._id}=\"${marked}\"]`);\n\t\t\t\tif (node) {\n\t\t\t\t\tthis._html.insertBefore(DragControl._dropHTML[0], node);\n\t\t\t\t} else this._html.appendChild(DragControl._dropHTML[0]);\n\t\t\t}\n\n\t\t\tparent.style.position = \"relative\";\n\t\t\tparent.style.height = count*this.type.height+\"px\";\n\n\t\t\tconst kids = this._html.childNodes;\n\t\t\tfor (let i=kids.length-1; i>=0; i--){\n\t\t\t\tconst child = kids[i];\n\t\t\t\tif (child.getAttribute(\"webix_skip\")) continue;\n\n\t\t\t\tconst cid = child.getAttribute(this._id);\n\t\t\t\tif (cid){\n\t\t\t\t\tchild.style.position = \"absolute\";\n\t\t\t\t\tchild.style.top = (top+i)*this.type.height+\"px\";\n\t\t\t\t\tchild.style.left = 0; child.style.width = \"100%\";\n\n\t\t\t\t\tparent.appendChild(child);\n\t\t\t\t\tthis._htmlmap[cid] = child;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tthis.callEvent(\"onAfterRender\",[]);\n\t\t}\n\t},\n\t$setSize:function(){\n\t\tif (base.api.$setSize.apply(this, arguments)){\n\t\t\tthis.render(null, null, \"paint\");\n\t\t}\n\t},\n\t_run_load_next:function(conf){\n\t\tconst count = Math.max(conf.count, (this._settings.datafetch||this._settings.loadahead||0));\n\t\tif (this._maybe_loading_already(conf.count, conf.start)) return;\n\t\tthis.loadNext(count, conf.start);\n\t},\n\t_set_drop_area:function(){\n\t\tthis.render(null, null, \"drag-in\");\n\t},\n\t_remove_drop_area:function(){\n\t\tremove(DragControl._dropHTML);\n\t\tthis.render(null, null, \"drag-out\");\n\t},\n};\n\nexport default VRenderStack;","import {$active} from \"../../webix/skin\";\nimport {extend, isUndefined} from \"../../webix/helpers\";\n\nexport const errorMessage = \"non-existing view for export\";\n\nfunction getDataHelper(key, column, raw){\n\tif (!raw && column.format)\n\t\treturn function(obj){ return column.format(obj[key]); };\n\n\treturn function(obj){ return obj[key]; };\n}\n\nfunction getHeaderText(view, header){\n\tlet text = header.text;\n\tif (header.contentId){\n\t\tconst content = view.getHeaderContent(header.contentId);\n\t\tif (content && !content.type.$icon)\n\t\t\ttext = content.getValue(true);\n\t}\n\treturn (text||\"\").toString().replace( /<[^>]*>/gi, \"\");\n}\n\nexport function getStyles(r, c, styles){\n\t//row index, column index, styles array\n\tif(styles[r] && styles[r][c])\n\t\treturn styles[r][c];\n\treturn {};\n}\n\nexport function getExportScheme(view, options){\n\tconst scheme = [];\n\tlet h_count = 0, f_count = 0;\n\tconst isTable = view.getColumnConfig;\n\tlet columns = options.columns;\n\tconst raw = !!options.rawValues;\n\tconst isTree = view.data.name == \"TreeStore\";\n\n\tlet treeLines = options.treeLines;\n\tif(treeLines === true || isUndefined(treeLines))\n\t\ttreeLines = \"value\";\n\n\tscheme.heights = {};\n\n\tif(options.hidden || options.hide){\n\t\tscheme.hiddenCols = {};\n\t\tscheme.hiddenRows = {};\n\t}\n\n\tif (!columns){\n\t\tcolumns = [];\n\t\tif (isTable){\n\t\t\tconst order = view._hidden_column_order;\n\t\t\tif(options.hidden && order.length){\n\t\t\t\tfor (let i = 0; i < order.length; i++){\n\t\t\t\t\tconst col = view.getColumnConfig(order[i]);\n\t\t\t\t\tif(!view.isColumnVisible(col.id))\n\t\t\t\t\t\tscheme.hiddenCols[col.id] = 1;\n\t\t\t\t\tcolumns.push(col);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tcolumns = columns.concat(view._columns);\n\t\t}\n\t\telse {\n\t\t\tconst obj = view.data.pull[view.data.order[0]];\n\t\t\tfor (let key in obj)\n\t\t\t\tif(key !== \"id\" && key[0] != \"$\")\n\t\t\t\t\tcolumns.push({id:key, isTree: isTree && key === treeLines});\n\t\t}\n\t}\n\telse if(!columns.length){\n\t//export options are set as - columns:{ rank:true, title:{ header:\"custom\"}}\n\t\tconst arr = [];\n\t\tfor(let key in columns)\n\t\t\tarr.push(extend({ id:key}, extend({}, columns[key])));\n\t\tcolumns = arr;\n\t}\n\n\tif (options.ignore)\n\t\tfor (let i=columns.length-1; i>=0; i--)\n\t\t\tif (options.ignore[columns[i].id])\n\t\t\t\tcolumns.splice(i,1);\n\n\tif (options.id)\n\t\tscheme.push({ id:\"id\", width:50, header:\" \", template:function(obj){ return obj.id; }});\n\n\tif (options.flatTree){\n\t\tconst flatKey = options.flatTree.id;\n\t\tconst copy = [].concat(options.flatTree.columns);\n\t\tconst fill = [];\n\t\tconst fillMode = !!options.flatTree.fill;\n\t\tfor (let i = 1; i <= copy.length; i++)\n\t\t\tcopy[i-1].template = (function(i){ \n\t\t\t\treturn function(obj){ \n\t\t\t\t\treturn obj.$level == i ? (fill[i]=obj[flatKey]) : ((fillMode && i<obj.$level)?fill[i]:\"\"); \n\t\t\t\t};\n\t\t\t})(i);\n\n\t\tlet index = 0;\n\t\tfor (let i = columns.length-1; i >= 0; i--)\n\t\t\tif (columns[i].id === flatKey)\n\t\t\t\tindex = i;\n\n\t\tcolumns = [].concat(columns.slice(0,index)).concat(copy).concat(columns.slice(index+1));\n\t}\n\n\tlet treeColumn;\n\n\tfor (let j = 0; j < columns.length; j++) {\n\t\tlet column = columns[j];\n\t\tlet key = column.id;\n\n\t\tif (column.noExport) continue;\n\n\t\t// raw mode has sense only for datatable\n\t\t// in other cases we don't have built-in data templates\n\t\tlet rawColumn = raw && isTable;\n\t\tif (isTable){\n\t\t\tconst sourceColumn = view.getColumnConfig(key);\n\t\t\t// when these's no column to take raw data from, or custom template defined - ignore raw mode\n\t\t\tif (column.template && (!sourceColumn || sourceColumn.template != column.template))\n\t\t\t\trawColumn = false;\n\t\t\tif(sourceColumn)\n\t\t\t\tcolumn = extend(extend({}, column), sourceColumn);\n\t\t}\n\n\t\tconst record = {\n\t\t\tid:         column.id,\n\t\t\ttemplate:   (( rawColumn || !column.template) ? getDataHelper(key, column, raw)  : column.template ),\n\t\t\twidth:      ((column.width   || 200) * (options.export_mode===\"excel\"?8.43/70:1 )),\n\t\t\theader:     (column.header!==false?(column.header||key)  : \"\")\n\t\t};\n\n\t\tif (column.collection) record.collection = column.collection;\n\n\t\tif(isTree && key === treeLines)\n\t\t\trecord.isTree = treeColumn = true;\n\n\t\tif(options.export_mode === \"excel\"){\n\t\t\textend(record, {\n\t\t\t\ttype: column.exportType || \"\",\n\t\t\t\tformat:column.exportFormat || \"\"\n\t\t\t});\n\t\t\tif(column.hidden){\n\t\t\t\tif(!scheme.hiddenCols)\n\t\t\t\t\tscheme.hiddenCols = {};\n\t\t\t\tscheme.hiddenCols[column.id] = 1;\n\t\t\t}\n\t\t}\n\n\t\tif(typeof record.header === \"string\") record.header = [{text:record.header}];\n\t\telse record.header = [].concat(record.header);\n\n\t\tfor(let i = 0; i<record.header.length; i++)\n\t\t\trecord.header[i] = record.header[i] ? getHeaderText(view, record.header[i]) : \"\";\n\n\t\th_count = Math.max(h_count, record.header.length);\n\n\t\tif(view.config.footer){\n\t\t\tlet footer = column.footer || \"\";\n\t\t\tif(typeof footer == \"string\") footer = [{text:footer}];\n\t\t\telse footer = [].concat(footer);\n\n\t\t\tfor(let i = 0; i<footer.length; i++)\n\t\t\t\tfooter[i] = footer[i] ? getHeaderText(view, footer[i]) : \"\";\n\n\t\t\trecord.footer = footer;\n\t\t\tf_count = Math.max(f_count, record.footer.length);\n\t\t}\n\t\tscheme.push(record);\n\t}\n\n\n\tif(!treeColumn && isTree && options.treeLines != treeLines && scheme[0])\n\t\tscheme[0].isTree = true;\n\n\tfor(let i =0; i<scheme.length; i++){\n\n\t\tlet diff = h_count-scheme[i].header.length;\n\t\tfor(let d=0; d<diff; d++)\n\t\t\tscheme[i].header.push(\"\");\n\n\t\tif(view.config.footer){\n\t\t\tdiff = f_count-scheme[i].footer.length;\n\t\t\tfor(let d=0; d<diff; d++)\n\t\t\t\tscheme[i].footer.push(\"\");\n\t\t}\n\t}\n\n\treturn scheme;\n}\n\nexport function getFileName(name, extension){\n\tif(name)\n\t\tname = name.replace(/[/?\\\\<>:*|\"]/g, \"\").substring(0, 150);\n\treturn `${name || \"Data\"}.${extension}`;\n}\n\nexport function getExportData(view, options, scheme){\n\tconst filterHTML = !!options.filterHTML;\n\tconst htmlFilter = /<[^>]*>/gi;\n\tlet data = [];\n\tlet header, headers;\n\tconst mode = options.export_mode;\n\n\tif((mode === \"excel\" || mode == \"csv\") && options.docHeader){\n\t\tdata = [[(options.docHeader.text || options.docHeader).toString()], [\"\"]];\n\t\tif(mode === \"excel\" && options.docHeader.height)\n\t\t\tscheme.heights[0] = options.docHeader.height;\n\t}\n\n\tif( options.header !== false && scheme.length){\n\t\tfor(let h=0; h < scheme[0].header.length; h++){\n\t\t\theaders = [];\n\t\t\tfor (let i = 0; i < scheme.length; i++){ \n\t\t\t\theader = \"\";\n\t\t\t\tif(scheme[i].header[h]){\n\t\t\t\t\theader = scheme[i].header[h];\n\t\t\t\t\tif (filterHTML)\n\t\t\t\t\t\theader = scheme[i].header[h] = header.replace(htmlFilter, \"\");\n\t\t\t\t}\n\t\t\t\theaders.push(header);\n\t\t\t}\n\n\t\t\tif(mode ==\"excel\" && view._columns && options.heights !==false &&\n\t\t\t(view._headers[h] !== $active.barHeight || options.heights == \"all\")\n\t\t\t) scheme.heights[data.length] = view._headers[h];\n\n\t\t\tif (mode !== \"pdf\")\n\t\t\t\tdata[data.length] = headers;\n\t\t}\n\t}\n\toptions.yCorrection = (options.yCorrection||0)-data.length;\n\n\tconst treeline = (options.flatTree || options.plainOutput) ? \"\" : \"-\";\n\n\tview.data.each(function(item, index){\n\t\tif(!options.filter || options.filter(item)){\n\t\t\tconst reallyHidden = options.hidden && view.data._filter_order && view.getIndexById(item.id) == -1;\n\t\t\tif((options.hide && options.hide(item)) || reallyHidden){\n\t\t\t\tconst header = (options.docHeader?2:0)+(options.header===false?0:scheme[0].header.length);\n\t\t\t\tscheme.hiddenRows[header+index] = 1;\n\t\t\t}\n\n\t\t\tif(this.data._scheme_export){\n\t\t\t\titem = view.data._scheme_export(item);\n\t\t\t}\n\n\t\t\tlet line = [];\n\t\t\tfor (let i = 0; i < scheme.length; i++){\n\t\t\t\tlet column = scheme[i], cell = null;\n\t\t\t\t//spreadsheet use muon to store data, get value via $getExportValue\n\t\t\t\tif(view.$getExportValue)\n\t\t\t\t\tcell = view.$getExportValue(item.id, column.id, options);\n\t\t\t\telse {\n\t\t\t\t\t//datatable math\n\t\t\t\t\tlet formula;\n\t\t\t\t\tif(options.math && item[\"$\"+column.id] && item[\"$\"+column.id].charAt(0) ==\"=\"){\n\t\t\t\t\t\tif(mode == \"excel\")\n\t\t\t\t\t\t\tformula = item[\"$\"+column.id];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tcell = item[\"$\"+column.id];\n\t\t\t\t\t}\n\n\t\t\t\t\tif(this._spans_pull){\n\t\t\t\t\t\tlet span = this.getSpan(item.id, column.id);\n\t\t\t\t\t\tif(span && span[4] && span[0] == item.id && span[1] == column.id){\n\t\t\t\t\t\t\tcell = span[4];\n\t\t\t\t\t\t\tif(filterHTML && typeof cell === \"string\")\n\t\t\t\t\t\t\t\tcell = cell.replace(htmlFilter, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(!cell){\n\t\t\t\t\t\tcell = column.template(item, view.type, item[column.id], column, i);\n\t\t\t\t\t\tif (!cell && cell !== 0) cell = \"\";\n\t\t\t\t\t\tif(column.isTree && treeline)\n\t\t\t\t\t\t\tcell = \" \"+Array(item.$level).join(treeline)+\" \"+cell;\n\t\t\t\t\t\tif (filterHTML && typeof cell === \"string\"){\n\t\t\t\t\t\t\tcell = cell.replace(htmlFilter, \"\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//remove end/start spaces(ex.hierarchy data)\n\t\t\t\t\t\tif (typeof cell === \"string\" && mode === \"csv\")\n\t\t\t\t\t\t\tcell = cell.trim();\n\t\t\t\t\t\t//for multiline data\n\t\t\t\t\t\tif (typeof cell === \"string\" && (mode === \"excel\" || mode === \"csv\")){\n\t\t\t\t\t\t\tcell = cell.replace(/<br\\s*\\/?>/mg,\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(formula)\n\t\t\t\t\t\tcell = { formula, value: cell };\n\t\t\t\t}\n\n\t\t\t\tline.push(cell);\n\t\t\t}\n\n\t\t\tif(mode ==\"excel\" && view._columns && options.heights !== false &&\n\t\t\t((item.$height && item.$height !== $active.rowHeight) || options.heights == \"all\")\n\t\t\t) scheme.heights[data.length] = item.$height || this.config.rowHeight;\n\n\t\t\tdata.push(line);\n\t\t}\n\t}, view, options.hidden);\n\n\tif( options.footer !==false ){\n\t\tlet f_count = scheme[0].footer?scheme[0].footer.length:0;\n\t\tfor (let f = 0; f < f_count; f++){\n\t\t\tlet footers  = [];\n\t\t\tfor(let i = 0; i<scheme.length; i++){\n\t\t\t\tlet footer = scheme[i].footer[f];\n\t\t\t\tif (filterHTML) footer = scheme[i].footer[f] = footer.toString().replace(htmlFilter, \"\");\n\t\t\t\tfooters.push(footer);\n\t\t\t}\n\n\t\t\tif(mode ==\"excel\" && view._columns && options.heights !==false &&\n\t\t\t(view._footers[f] !== $active.barHeight || options.heights==\"all\")\n\t\t\t) scheme.heights[data.length] = view._footers[f];\n\n\t\t\tif(mode !== \"pdf\")\n\t\t\t\tdata.push(footers);\n\t\t}\n\t}\n\n\tif(mode ===\"excel\" && options.docFooter){\n\t\tdata = data.concat([[], [(options.docFooter.text || options.docFooter).toString()]]);\n\t\tif(options.docFooter.height)\n\t\t\tscheme.heights[data.length-1] = options.docFooter.height;\n\t}\n\n\treturn data;\n}","import {errorMessage, getExportScheme, getExportData, getStyles, getFileName} from \"./common\";\n\nimport i18n from \"../../webix/i18n\";\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {download} from \"../../webix/html\";\nimport {isArray} from \"../../webix/helpers\";\nimport {extend, isUndefined} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\n\nlet font = {};\nexport const toPDF = function(id, options){\n\toptions = options || {};\n\n\toptions.export_mode = \"pdf\";\n\n\tconst fontFiles = {\n\t\tfontName: \"pt-sans.regular\",\n\t\tboldFontName: \"pt-sans.bold\",\n\t\titalicFontName: \"pt-sans.italic\",\n\t\titalicBoldFontName: \"pt-sans.italic-bold\"\n\t};\n\n\textend(options, fontFiles);\n\n\tid = isArray(id)?id:[id];\n\tlet views = [];\n\n\tfor (let i = 0; i < id.length; i++) {\n\t\tif(!id[i].id) id[i]  = { id:id[i] }; \n\n\t\tlet view = $$(id[i].id);\n\n\t\tif(view){\n\t\t\tconst viewOptions = extend(id[i].options || {}, options);\n\t\t\tconst display = viewOptions.display || \"table\";\n\t\t\tif(viewOptions.display == \"image\")\n\t\t\t\tdelete viewOptions.styles;\n\n\t\t\tif(view.$exportView)\n\t\t\t\tview = view.$exportView(viewOptions);\n\n\t\t\t//$exportView returns array\n\t\t\tif(isArray(view)){\n\t\t\t\tviews = views.concat(view);\n\t\t\t\tif(options.autowidth)\n\t\t\t\t\tgetAutowidth(viewOptions, options);\n\t\t\t}\n\t\t\telse{\n\t\t\t\t//display table should be first (in case of styles:true $exportView adds styles to the first view)\n\t\t\t\tif(display == \"table\" || display == \"all\"){\n\t\t\t\t\tif(view.data && view.data.pull){\n\t\t\t\t\t\tconst scheme = getExportScheme(view, viewOptions);\n\t\t\t\t\t\tviews.push({\n\t\t\t\t\t\t\tscheme, \n\t\t\t\t\t\t\texportData: getExportData(view, viewOptions, scheme),\n\t\t\t\t\t\t\tviewOptions\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif(options.autowidth)\n\t\t\t\t\t\t\tgetAutowidth(view, options, scheme);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(display == \"image\" || display == \"all\"){\n\t\t\t\t\tconst node = viewOptions._hidden ? cloneNodeWithStyles(view.$view) : view.$view;\n\n\t\t\t\t\tviews.push({ node, viewOptions });\n\t\t\t\t\tif(options.autowidth)\n\t\t\t\t\t\tgetAutowidth(view, options);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tassert(view, errorMessage);\n\t}\n\n\tif(options.dataOnly)\n\t\treturn views;\n\n\treturn require([\n\t\tenv.cdn + \"/extras/pdfjs.js\", env.cdn + \"/extras/html2canvas-1.0.min.js\"\n\t]).then(function(){\n\t\tif(views.length == 0)\n\t\t\treturn promise.reject(errorMessage);\n\n\t\tlet allFontsLoaded = true;\n\n\t\tfor(let name in fontFiles)\n\t\t\tif(!font[name]){\n\t\t\t\tallFontsLoaded = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\tif(allFontsLoaded){\n\t\t\treturn getPdfData(views, options).then(function(pdf){\n\t\t\t\treturn getBlob(pdf, options);\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconst defer = promise.defer();\n\t\t\t/* global pdfjs */\n\t\t\tpdfjs.load(options.fontURL||env.cdn + \"/extras/\"+options.fontName+\".ttf\", function(err, regular){\n\t\t\t\tif(err)\n\t\t\t\t\treturn defer.reject(err);\n\t\t\t\tpdfjs.load(options.italicBoldFontURL||env.cdn + \"/extras/\"+options.italicBoldFontName+\".ttf\", function(errIB, ib){\n\t\t\t\t\tpdfjs.load(options.italicFontURL||env.cdn + \"/extras/\"+options.italicFontName+\".ttf\", function(errI, i){\n\t\t\t\t\t\tpdfjs.load(options.boldFontURL||env.cdn + \"/extras/\"+options.boldFontName+\".ttf\", function(errB, b){\n\t\t\t\t\t\t\tfont[options.fontName] = new pdfjs.TTFFont(regular);\n\t\t\t\t\t\t\tfont[options.boldFontName] = errB ? null : new pdfjs.TTFFont(b);\n\t\t\t\t\t\t\tfont[options.italicFontName] = errI ? null : new pdfjs.TTFFont(i);\n\t\t\t\t\t\t\tfont[options.italicBoldFontName] = errIB ? null : new pdfjs.TTFFont(ib);\n\n\t\t\t\t\t\t\tdefer.resolve(\n\t\t\t\t\t\t\t\tgetPdfData(views, options).then(function(pdf){\n\t\t\t\t\t\t\t\t\treturn getBlob(pdf, options);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn defer;\n\t\t}\n\t});\n};\n\nfunction getBlob(pdf, options){\n\tconst filename = getFileName(options.filename, \"pdf\");\n\tconst blob = new Blob([pdf.toString()], { type: \"application/pdf\" });\n\n\tif(options.download !== false)\n\t\tdownload(blob, filename);\n\treturn blob;\n}\n\nfunction getPdfData(views, options){\n\tconst doc = addPDFDoc(options);\n\tlet promises = [];\n\tfor (let i = 0; i < views.length; i++) {\n\t\tif(views[i].node)\n\t\t\tpromises.push(getPDFImage(views[i].node));\n\t\telse\n\t\t\tpromises.push(promise.resolve());\n\t}\n\n\treturn promise.all(promises).then(function(images){\n\t\tfor(let i = 0; i < promises.length; i++){\n\t\t\tconst viewOptions = views[i].viewOptions;\n\t\t\tif(viewOptions.textBefore)\n\t\t\t\taddText(doc, \"before\", viewOptions.textBefore);\n\n\t\t\tif(images[i])\n\t\t\t\tdoc.image(images[i], {align:\"center\"});\n\t\t\telse\n\t\t\t\taddPDFTable(views[i], doc);\n\n\t\t\tif(viewOptions.textAfter)\n\t\t\t\taddText(doc, \"after\", viewOptions.textAfter);\n\t\t\tif(i != views.length - 1)\n\t\t\t\tdoc.pageBreak();\n\t\t}\n\t\treturn addPDFHeader(doc, options);\n\t});\n}\n\nfunction addText(doc, type, text){\n\tif(type == \"after\")\n\t\tdoc.text().br();\n\tif(typeof text == \"string\")\n\t\ttext = {text:text};\n\n\tdoc.text(text.text, text.options || {});\n\tif(type == \"before\")\n\t\tdoc.text().br();\n}\n\nfunction getPDFImage(node){\n\tconst hidden = !document.body.contains(node);\n\tif(hidden){\n\t\t//node is a cloneNode of the real view, so it shouldn't be visible\n\t\tdocument.body.appendChild(node);\n\t\tnode.style.position = \"absolute\";\n\t\tnode.style.left = \"-9999px\";\n\t}\n\n\treturn window.html2canvas(\n\t\tnode,\n\t\t{\n\t\t\tbackground:\"#fff\",\n\t\t\tlogging:false,\n\t\t\tuseCORS:true\n\t\t})\n\t\t.then(function(canvas){\n\t\t\tconst image = canvas.toDataURL(\"image/jpeg\");\n\t\t\tconst binary_string =  window.atob(image.split(\"base64,\")[1]);\n\t\t\tconst length = binary_string.length;\n\t\t\tconst bytes = new Uint8Array(length);\n\t\t\tfor (let i = 0; i < length; i++)\n\t\t\t\tbytes[i] = binary_string.charCodeAt(i);\n\t\t\treturn new pdfjs.Image(bytes.buffer);\n\t\t})\n\t\t.finally(function(){\n\t\t\tif(hidden)\n\t\t\t\tdocument.body.removeChild(node);\n\t\t});\n}\n\nexport function getAutowidth(view, options, scheme){\n\tconst prop = options.orientation && options.orientation == \"landscape\" ? \"height\" : \"width\";\n\tlet width;\n\n\tif(scheme){\n\t\twidth = 80; //paddings\n\t\tfor(let i = 0; i<scheme.length; i++)\n\t\t\twidth += scheme[i].width;\n\t}\n\telse if(view.$width)\n\t\twidth = view.$width;\n\telse //'view' can be local settings and we need to compare them with common ones\n\t\twidth = view[prop];\n\n\toptions[prop] = Math.max(options[prop] || 0, width || 0);\n}\n\nfunction addPDFDoc(options){\n\tlet width = options.width||595.296, height = options.height || 841.896;// default A4 size\n\n\tif(options.orientation && options.orientation ===\"landscape\")\n\t\theight = [width, width = height][0];\n\n\treturn new pdfjs.Document({\n\t\tpadding: 40,\n\t\tfont: font[options.fontName],\n\t\tthreshold:256,\n\t\twidth,\n\t\theight\n\t});\n}\n\nfunction addPDFTable(view, doc){\n\tconst scheme = view.scheme;\n\tconst data = view.exportData;\n\tconst options = view.viewOptions;\n\tconst styles = view.styles;\n\n\toptions.header = (isUndefined(options.header) || options.header === true) ? {} : options.header;\n\toptions.footer = (isUndefined(options.footer) || options.footer === true) ? {} : options.footer;\n\toptions.table = options.table || {};\n\n\t//render table\n\tconst h_count = options.header === false ? 0: scheme[0].header.length;\n\tconst f_count = (options.footer === false || !scheme[0].footer) ? 0: scheme[0].footer.length;\n\n\tconst colWidths = [];\n\tfor(let i = 0; i<scheme.length; i++)\n\t\tcolWidths[i] = scheme[i].width;\n\n\tconst tableOps = extend(options.table, {\n\t\tborderWidth: 1,height:20, lineHeight:1.1,\n\t\tborderColor: 0xEEEEEE, backgroundColor: 0xFFFFFF, color:0x666666,\n\t\ttextAlign:\"left\", paddingRight:10, paddingLeft:10,\n\t\theaderRows:h_count, widths: colWidths.length?colWidths:[\"100%\"]\n\t});\n\n\tconst table = doc.table(tableOps);\n\n\t//render table header\n\tif(h_count){\n\t\tconst headerOps = extend(options.header, {\n\t\t\tborderRightColor:0xB0CEE3, borderBottomColor:0xB0CEE3,\n\t\t\tcolor:0x4A4A4A, backgroundColor:0xD2E3EF,\n\t\t\theight:27, lineHeight:1.2\n\t\t});\n\n\t\tfor(let i = 0; i<h_count; i++){\n\t\t\tconst header = table.tr(headerOps);\n\t\t\tfor(let s=0; s<scheme.length; s++){\n\t\t\t\tconst cellStyle = styles ? getStyles(i, s, styles) : {};\n\t\t\t\tsetFont(cellStyle, options);\n\t\t\t\theader.td(scheme[s].header[i].toString(), cellStyle);\n\t\t\t}\n\t\t}\n\t}\n\n\t//render table data\n\tfor(let r=0; r<data.length;r++){\n\t\tlet row = table.tr({});\n\t\tfor(let c=0; c< data[r].length; c++){\n\t\t\tconst cellStyle = styles ? getStyles(r+h_count, c, styles) : {};\n\t\t\tsetFont(cellStyle, options);\n\t\t\trow.td(data[r][c], cellStyle);\n\t\t}\n\t}\n\n\t//render table footer\n\tif(f_count){\n\t\tlet footerOps = extend(options.footer, {\n\t\t\tborderRightColor:0xEEEEEE, borderBottomColor:0xEEEEEE,\n\t\t\tbackgroundColor: 0xFAFAFA, color:0x666666,\n\t\t\theight:27, lineHeight:1.2\n\t\t});\n\n\t\tfor(let i = 0; i<f_count; i++){\n\t\t\tconst beforeCount = h_count + data.length;\n\t\t\tlet footer = table.tr(footerOps);\n\t\t\tfor(let s=0; s<scheme.length; s++){\n\t\t\t\tconst cellStyle = styles ? getStyles(i+beforeCount, s, styles) : {};\n\t\t\t\tsetFont(cellStyle, options);\n\t\t\t\tfooter.td(scheme[s].footer[i].toString(), cellStyle);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction setFont(cellStyle, options){\n\tconst boldFont = font[options.boldFontName];\n\tconst italicFont = font[options.italicFontName];\n\tconst italicBoldFont = font[options.italicBoldFontName];\n\n\tif(cellStyle.bold && boldFont) {\n\t\tif(cellStyle.italic && italicBoldFont)\n\t\t\tcellStyle.font = italicBoldFont;\n\t\telse\n\t\t\tcellStyle.font = boldFont;\n\t}\n\telse if(cellStyle.italic && italicFont)\n\t\tcellStyle.font = italicFont;\n}\n\nfunction addPDFHeader(doc, options){\n\t//doc footer\n\tif (options.docFooter !== false){\n\t\toptions.docFooter = extend(options.docFooter||{}, {\n\t\t\tcolor: 0x666666, textAlign:\"center\"\n\t\t});\n\t\tdoc.footer().text(options.docFooter).append((i18n.dataExport.page||\"Page\")).pageNumber().append(\"  \"+(i18n.dataExport.of||\"of\")+\"  \").pageCount();\n\t}\n\n\tconst horder = { text:0, image:1};\n\n\t//doc header, configurable\n\tif (options.docHeader){\n\t\tif (typeof options.docHeader == \"string\") options.docHeader = { text:options.docHeader };\n\t\textend(options.docHeader, {\n\t\t\tcolor: 0x666666, textAlign:\"right\", order:0\n\t\t});\n\t\thorder.text = options.docHeader.order;\n\t}\n\n\tif (options.docHeaderImage){\n\t\tif(typeof options.docHeaderImage == \"string\") options.docHeaderImage = {url:options.docHeaderImage};\n\t\textend(options.docHeaderImage, {\n\t\t\talign:\"right\", order:1\n\t\t});\n\t\thorder.image = options.docHeaderImage.order;\n\t}\n\n\tif (options.docHeader && horder.image > horder.text)\n\t\tdoc.header({paddingBottom:10}).text(options.docHeader.text, options.docHeader);\n\n\tif (options.docHeaderImage){\n\t\tconst defer = promise.defer();\n\t\tpdfjs.load(options.docHeaderImage.url, function(err, buffer){\n\t\t\tif (!err){\n\t\t\t\tconst img = new pdfjs.Image(buffer);\n\t\t\t\tdoc.header({paddingBottom:10}).image(img, options.docHeaderImage);\n\n\t\t\t\tif(options.docHeader && horder.image < horder.text)\n\t\t\t\t\tdoc.header({paddingBottom:10}).text(options.docHeader.text, options.docHeader);\n\t\t\t}\n\t\t\t//render pdf and show in browser\n\t\t\tdefer.resolve(doc.render());\n\t\t});\n\t\treturn defer;\n\t} else\n\t\treturn promise.resolve(doc.render());\n}\n\nfunction cloneNodeWithStyles(node){\n\tconst clone = node.cloneNode(false);\n\n\tif(node.tagName){\n\t\tconst styles = window.getComputedStyle(node);\n\t\tclone.style.cssText = styles.cssText;\n\t}\n\n\tfor (let i = 0; i < node.childNodes.length; i++)\n\t\tclone.appendChild(cloneNodeWithStyles(node.childNodes[i]));\n\n\treturn clone;\n}","import {errorMessage, getExportScheme, getExportData, getStyles, getFileName} from \"./common\";\n\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {download} from \"../../webix/html\";\nimport {extend, isArray} from \"../../webix/helpers\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\n\nexport const toExcel = function(id, options){\n\toptions = options || {};\n\toptions.export_mode = \"excel\";\n\n\tid = isArray(id)?id:[id];\n\tlet views = [];\n\n\tfor(let i = 0; i<id.length; i++){\n\t\tif(!id[i].id) id[i]  = { id:id[i] }; \n\t\tlet view = $$(id[i].id);\n\t\tconst viewOptions = extend(id[i].options || {}, options);\n\t\tif (view && view.$exportView)\n\t\t\tview = view.$exportView(viewOptions);\n\n\t\tassert(view, errorMessage);\n\n\t\t//$exportView returns array\n\t\tif(isArray(view))\n\t\t\tviews = views.concat(view);\n\t\telse if(view.data && view.data.pull){\n\t\t\t//spreadsheet and excelviewer require plain data output first\n\t\t\tconst scheme = getExportScheme(view, viewOptions);\n\t\t\tviews.push({\n\t\t\t\tscheme : scheme,\n\t\t\t\texportData:getExportData(view, viewOptions, scheme),\n\t\t\t\tspans:(viewOptions.spans ? getSpans(view, viewOptions) : []),\n\t\t\t\tviewOptions: viewOptions\n\t\t\t});\n\t\t}\n\t}\n\tif(options.dataOnly) return views;\n\n\tconst defer = promise.defer(); \n\n\treturn require(env.cdn + \"/extras/xlsx.core.styles.min.js\").then(function(){\n\t\tif(!views.length) return defer.reject(errorMessage);\n\n\t\tconst wb = { SheetNames:[], Sheets:{}, Workbook:{ WBProps :{}, Names:[], Sheets:[] }};\n\n\t\tfor(let i = 0; i<views.length; i++){\n\t\t\tconst viewOptions = views[i].viewOptions;\n\t\t\tconst scheme = views[i].scheme;\n\t\t\tconst result = views[i].exportData;\n\t\t\tconst spans  = views[i].spans;\n\t\t\tconst ranges =  views[i].ranges || [];\n\t\t\tconst styles = views[i].styles || [];\n\t\t\tconst data   = getExcelData(result, scheme, spans, styles, viewOptions);\n\t\t\tlet sname  = (viewOptions.name || \"Data\"+(i+1)).replace(/[*?:[\\]\\\\/]/g,\"\").replace(/&/g, \"&amp;\").substring(0, 31);\n\n\t\t\t//avoid name duplication\n\t\t\tlet k = i;\n\t\t\twhile(wb.SheetNames.indexOf(sname) != -1)\n\t\t\t\tsname = \"Data\"+(++k);\n\n\t\t\twb.SheetNames.push(sname);\n\t\t\twb.Sheets[sname] = data;\n\t\t\twb.Workbook.Names = wb.Workbook.Names.concat(ranges);\n\t\t\twb.Workbook.Sheets.push({ state: views[i].state || \"visible\" });\n\t\t}\n\n\t\t/* global XLSX */\n\t\tconst xls = XLSX.write(wb, {bookType:\"xlsx\", bookSST:false, type: \"binary\"});\n\t\tconst filename =  getFileName(options.filename, \"xlsx\");\n\n\t\tconst blob = new Blob([str2array(xls)], { type: \"application/xlsx\" });\n\t\tif(options.download !== false)\n\t\t\tdownload(blob, filename);\n\t\tdefer.resolve(blob);\n\t\treturn defer;\n\t});\n};\n\nfunction str2array(s) {\n\tconst buf = new ArrayBuffer(s.length);\n\tconst view = new Uint8Array(buf);\n\tfor (let i=0; i!=s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;\n\treturn buf;\n}\n\nconst types = { number:\"n\", date:\"n\", string:\"s\", boolean:\"b\"};\nconst table = \"_table\";\nfunction getExcelData(data, scheme, spans, styles, options) {\n\tconst ws = {};\n\tconst range = {s: {c:10000000, r:10000000}, e: {c:0, r:0 }};\n\tfor(let R = 0; R != data.length; ++R) {\n\t\tfor(let C = 0; C != data[R].length; ++C) {\n\t\t\tif(range.s.r > R) range.s.r = R;\n\t\t\tif(range.s.c > C) range.s.c = C;\n\t\t\tif(range.e.r < R) range.e.r = R;\n\t\t\tif(range.e.c < C) range.e.c = C;\n\n\t\t\tconst cell = {v: data[R][C]};\n\t\t\tif(cell.v === null) continue;\n\t\t\tconst cell_ref = XLSX.utils.encode_cell({c:C,r:R});\n\n\t\t\tconst isFormula = typeof cell.v == \"object\" && cell.v.formula;\n\t\t\tconst stringValue = (isFormula ? cell.v.value : cell.v).toString();\n\n\t\t\tif(styles){\n\t\t\t\tconst cellStyle = getStyles(R, C, styles);\n\t\t\t\tif(cellStyle.format){\n\t\t\t\t\tcell.z = cellStyle.format;\n\t\t\t\t\tdelete cellStyle.format;\n\t\t\t\t}\n\t\t\t\tif(cellStyle.type){\n\t\t\t\t\tcell.t = types[cellStyle.type];\n\t\t\t\t\tdelete cellStyle.type;\n\t\t\t\t}\n\t\t\t\tcell.s = cellStyle;\n\t\t\t}\n\n\t\t\t// set type based on column's config\n\t\t\t// skip headers and formula based cells\n\t\t\tconst header = (options.docHeader?2:0)+scheme[0].header.length;\n\t\t\tif(R>=header && !isFormula){\n\t\t\t\tconst column = scheme[C];\n\t\t\t\tif(column.type && !cell.t) cell.t = (types[column.type] || \"\");\n\t\t\t\tif(column.format && !cell.z) cell.z = column.format;\n\t\t\t}\n\t\t\t// set type based on cell's value\n\t\t\tif(options.stubCells && !stringValue)\n\t\t\t\tcell.t = \"z\";\n\t\t\telse if(cell.v instanceof Date){\n\t\t\t\tcell.t = cell.t || \"n\";\n\t\t\t\tcell.z = cell.z || XLSX.SSF[table][14];\n\t\t\t\tcell.v = excelDate(cell.v);\n\t\t\t}\n\t\t\telse if(isFormula){\n\t\t\t\tif(!cell.t)\n\t\t\t\t\tcell.t = isNaN(stringValue) ? \"s\" : \"n\";\n\n\t\t\t\tcell.f = cell.v.formula.substring(1);\n\t\t\t\tcell.v = stringValue;\n\t\t\t}\n\t\t\telse if(!cell.t){\n\t\t\t\tif(typeof cell.v === \"boolean\")\n\t\t\t\t\tcell.t = \"b\";\n\t\t\t\telse if(typeof cell.v === \"number\" || parseFloat(cell.v) == cell.v){\n\t\t\t\t\tcell.v = cell.v*1;\n\t\t\t\t\tcell.t = \"n\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// convert any other object to a string\n\t\t\t\t\tcell.v = stringValue;\n\t\t\t\t\tcell.t = \"s\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tws[cell_ref] = cell;\n\t\t}\n\t}\n\tif(range.s.c < 10000000) ws[\"!ref\"] = XLSX.utils.encode_range(range);\n\n\tws[\"!rows\"] = getRowHeights(scheme);\n\tws[\"!cols\"] = getColumnsWidths(scheme);\n\tif(spans.length)\n\t\tws[\"!merges\"] = spans;\n\n\treturn ws;\n}\n\nfunction getRowHeights(scheme){\n\tconst heights = scheme.heights;\n\tfor(const i in heights)\n\t\theights[i] = {hpx:heights[i], hpt:heights[i]*0.75 };\n\n\tconst hidden = scheme.hiddenRows;\n\tif(hidden)\n\t\tfor(const i in hidden){\n\t\t\tif(!heights[i])\n\t\t\t\theights[i] = {};\n\t\t\theights[i].hidden = 1;\n\t\t}\n\n\treturn heights;\n}\n\nfunction getSpans(view, options){\n\tconst isTable = view.getColumnConfig;\n\tconst pull = view._spans_pull;\n\tlet spans = [];\n\n\tif(isTable){\n\t\tif(options.header!==false)\n\t\t\tspans = getHeaderSpans(view, options, \"header\", spans); \n\n\t\tif(pull){\n\t\t\tconst xc = options.xCorrection || 0;\n\t\t\tconst yc = options.yCorrection || 0;\n\t\t\tfor(const row in pull){\n\t\t\t\t//{ s:{c:1, r:0}, e:{c:3, r:0} }\n\t\t\t\tconst cols = pull[row];\n\t\t\t\tfor(const col in cols){\n\t\t\t\t\tlet colIndex = view.getColumnIndex(col);\n\n\t\t\t\t\tconst rowId = view.getItem(row).id;\n\t\t\t\t\tlet rowIndex = view.getIndexById(rowId);\n\n\t\t\t\t\tif(options.hidden){\n\t\t\t\t\t\tconst hiddenColsOrder = view._hidden_column_order;\n\t\t\t\t\t\tif(hiddenColsOrder.length){\n\t\t\t\t\t\t\tconst colId = view.getColumnConfig(col).id;\n\t\t\t\t\t\t\tcolIndex = hiddenColsOrder.indexOf(colId);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst hiddenRowsOrder = view.data._filter_order;\n\t\t\t\t\t\tif(hiddenRowsOrder && hiddenRowsOrder.length)\n\t\t\t\t\t\t\trowIndex = hiddenRowsOrder.indexOf(rowId);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst sc = colIndex - xc;\n\t\t\t\t\tconst sr = rowIndex - yc;\n\t\t\t\t\tif(sc<0||sr<0) //hidden cols/rows\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tconst ec = sc+cols[col][0]-1;\n\t\t\t\t\tconst er = sr+(cols[col][1]-1);\n\n\t\t\t\t\tspans.push({ s:{c:sc, r:sr}, e:{c:ec, r:er} });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(options.footer!==false)\n\t\t\tspans = getHeaderSpans(view, options, \"footer\", spans);\n\t}\n\n\treturn spans;\n}\n\nfunction getHeaderSpans(view, options, group, spans){\n\tconst columns = view.config.columns;\n\tconst delta = (options.docHeader?2:0)+(group == \"header\" ? 0 :((options.header!==false?view._headers.length:0)+view.count()));\n\n\tfor(let i=0; i<columns.length; i++){\n\t\tconst header = columns[i][group];\n\t\tfor(let h = 0; h<header.length; h++){\n\t\t\tif(header[h] && (header[h].colspan || header[h].rowspan)){\n\t\t\t\tspans.push({\n\t\t\t\t\ts:{ c:i, r:h+delta},\n\t\t\t\t\te:{ c:i+(header[h].colspan||1)-1, r:h+(header[h].rowspan ||1)-1+delta }\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn spans;\n}\n\nfunction excelDate(date) {\n\tconst returnDateTime = 25569 + ((date.getTime() - (date.getTimezoneOffset() * 60 * 1000)) / (1000 * 60 * 60 * 24));\n\treturn returnDateTime.toString().substr(0,20);\n}\n\nfunction getColumnsWidths(scheme){\n\tconst wscols = [];\n\tfor (let i = 0; i < scheme.length; i++){\n\t\tconst col = scheme[i];\n\t\twscols.push({\n\t\t\twch: col.width,\n\t\t\thidden: scheme.hiddenCols ? scheme.hiddenCols[ col.id ] : 0\n\t\t});\n\t}\n\n\treturn wscols;\n}","const en = {\n\tgroupDelimiter:\",\",\n\tgroupSize:3,\n\tdecimalDelimiter:\".\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%m/%d/%Y\",\n\ttimeFormat:\"%h:%i %A\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%m/%d/%Y %h:%i %A\",\n\tam:[\"am\",\"AM\"],\n\tpm:[\"pm\",\"PM\"],\n\n\tprice:\"${obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\",\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\".\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\",\n\t},\n\tfileSize: [\"b\",\"Kb\",\"Mb\",\"Gb\",\"Tb\",\"Pb\",\"Eb\"],\n\t\n\tcalendar: {\n\t\tmonthFull:[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\tmonthShort:[\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\tdayFull:[\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t\tdayShort:[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t\thours: \"Hours\",\n\t\tminutes: \"Minutes\",\n\t\tdone:\"Done\",\n\t\tclear: \"Clear\",\n\t\ttoday: \"Today\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Page\",\n\t\tof:\"of\"\n\t},\n\tPDFviewer:{\n\t\tof:\"of\",\n\t\tautomaticZoom:\"Automatic Zoom\",\n\t\tactualSize:\"Actual Size\",\n\t\tpageFit:\"Page Fit\",\n\t\tpageWidth:\"Page Width\",\n\t\tpageHeight:\"Page Height\",\n\t\tenterPassword:\"Enter password\",\n\t\tpasswordError:\"Wrong password\"\n\t},\n\taria:{\n\t\tcalendar:\"Calendar\",\n\t\tincreaseValue:\"Increase value\",\n\t\tdecreaseValue:\"Decrease value\",\n\t\tnavMonth:[\"Previous month\", \"Next month\"],\n\t\tnavYear:[\"Previous year\", \"Next year\"],\n\t\tnavDecade:[\"Previous decade\", \"Next decade\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Hours: %h %A\",\n\t\tminuteFormat:\"Minutes: %i\",\n\t\tremoveItem:\"Remove item\",\n\t\tpages:[\"First page\", \"Previous page\", \"Next page\", \"Last page\"],\n\t\tpage:\"Page\",\n\t\theadermenu:\"Header menu\",\n\t\topenGroup:\"Open column group\",\n\t\tcloseGroup:\"Close column group\",\n\t\tcloseTab:\"Close tab\",\n\t\tshowTabs:\"Show more tabs\",\n\t\tresetTreeMap:\"Reset tree map\",\n\t\tnavTreeMap:\"Level up\",\n\t\tnextTab:\"Next tab\",\n\t\tprevTab:\"Previous tab\",\n\t\tmultitextSection:\"Add section\",\n\t\tmultitextextraSection:\"Remove section\",\n\t\tshowChart:\"Show chart\",\n\t\thideChart:\"Hide chart\",\n\t\tresizeChart:\"Resize chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Underline\",\n\t\tbold: \"Bold\",\n\t\titalic: \"Italic\"\n\t},\n\tcombo:{\n\t\tselect:\"Select\",\n\t\tselectAll:\"Select all\",\n\t\tunselectAll:\"Unselect all\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Cancel\"\n\t},\n\tcomments:{\n\t\tsend: \"Send\",\n\t\tconfirmMessage: \"The comment will be removed. Are you sure?\",\n\t\tedit: \"Edit\",\n\t\tremove: \"Remove\",\n\t\tplaceholder: \"Type here..\",\n\t\tmoreComments:\"More comments\"\n\t},\n\tfilter:{\n\t\tless: \"less\",\n\t\tlessOrEqual: \"less or equal\",\n\t\tgreater: \"greater\",\n\t\tgreaterOrEqual: \"greater or equal\",\n\t\tcontains: \"contains\",\n\t\tnotContains: \"not contains\",\n\t\tequal: \"equal\",\n\t\tnotEqual: \"not equal\",\n\t\tbeginsWith: \"begins with\",\n\t\tnotBeginsWith: \"not begins with\",\n\t\tendsWith: \"ends with\",\n\t\tnotEndsWith: \"not ends with\",\n\t\tbetween: \"between\",\n\t\tnotBetween: \"not between\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Seconds\"\n\t}\n};\n\nexport default en;","import env from \"../webix/env\";\nimport i18n from \"../webix/i18n\";\n\n\nconst wDate = {\n\tstartOnMonday:false,\n\n\ttoFixed:function(num, ms){\n\t\tif( num<10)\tnum = \"0\"+num;\n\t\tif( ms && num <100 ) num = \"0\"+num;\n\t\treturn num;\n\t},\n\tweekStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tvar shift=date.getDay();\n\t\tif (this.startOnMonday){\n\t\t\tif (shift===0) shift=6;\n\t\t\telse shift--;\n\t\t}\n\t\treturn this.datePart(this.add(date,-1*shift,\"day\"));\n\t},\n\tmonthStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tdate.setDate(1);\n\t\treturn this.datePart(date);\n\t},\n\tyearStart:function(date){\n\t\tdate = this.copy(date);\n\n\t\tdate.setMonth(0);\n\t\treturn this.monthStart(date);\n\t},\n\tdayStart:function(date){\n\t\treturn this.datePart(date, true);\n\t},\n\tdateToStr:function(format,utc){\n\t\tif (typeof format == \"function\") return format;\n\n\t\tif(env.strict){\n\t\t\treturn function(date){\n\t\t\t\tif (!date)\n\t\t\t\t\treturn \"\";\n\t\t\t\tif (!date.getMonth)\n\t\t\t\t\tdate = i18n.parseFormatDate(date);\n\n\t\t\t\tvar str = \"\";\n\t\t\t\tvar lastPos = 0;\n\t\t\t\tformat.replace(/%[a-zA-Z]/g,function(s,pos){\n\t\t\t\t\tstr += format.slice(lastPos,pos);\n\t\t\t\t\tvar fn = function(date){\n\t\t\t\t\t\tif( s == \"%d\")  return wDate.toFixed(date.getDate());\n\t\t\t\t\t\tif( s == \"%m\")  return wDate.toFixed((date.getMonth()+1));\n\t\t\t\t\t\tif( s == \"%j\")  return date.getDate();\n\t\t\t\t\t\tif( s == \"%n\")  return (date.getMonth()+1);\n\t\t\t\t\t\tif( s == \"%y\")  return wDate.toFixed(date.getFullYear()%100);\n\t\t\t\t\t\tif( s == \"%Y\")  return date.getFullYear();\n\t\t\t\t\t\tif( s == \"%D\")  return i18n.calendar.dayShort[date.getDay()];\n\t\t\t\t\t\tif( s == \"%l\")  return i18n.calendar.dayFull[date.getDay()];\n\t\t\t\t\t\tif( s == \"%M\")  return i18n.calendar.monthShort[date.getMonth()];\n\t\t\t\t\t\tif( s == \"%F\")  return i18n.calendar.monthFull[date.getMonth()];\n\t\t\t\t\t\tif( s == \"%h\")  return wDate.toFixed((date.getHours()+11)%12+1);\n\t\t\t\t\t\tif( s == \"%g\")  return ((date.getHours()+11)%12+1);\n\t\t\t\t\t\tif( s == \"%G\")  return date.getHours();\n\t\t\t\t\t\tif( s == \"%H\")  return wDate.toFixed(date.getHours());\n\t\t\t\t\t\tif( s == \"%i\")  return wDate.toFixed(date.getMinutes());\n\t\t\t\t\t\tif( s == \"%a\")  return (date.getHours()>11?i18n.pm[0]:i18n.am[0]);\n\t\t\t\t\t\tif( s == \"%A\")  return (date.getHours()>11?i18n.pm[1]:i18n.am[1]);\n\t\t\t\t\t\tif( s == \"%s\")  return wDate.toFixed(date.getSeconds());\n\t\t\t\t\t\tif( s == \"%S\")\treturn wDate.toFixed(date.getMilliseconds(), true);\n\t\t\t\t\t\tif( s == \"%W\")  return wDate.toFixed(Date.getISOWeek(date));\n\t\t\t\t\t\tif( s == \"%c\"){\n\t\t\t\t\t\t\tvar str = date.getFullYear();\n\t\t\t\t\t\t\tstr += \"-\"+wDate.toFixed((date.getMonth()+1));\n\t\t\t\t\t\t\tstr += \"-\"+wDate.toFixed(date.getDate());\n\t\t\t\t\t\t\tstr += \"T\";\n\t\t\t\t\t\t\tstr += wDate.toFixed(date.getHours());\n\t\t\t\t\t\t\tstr += \":\"+wDate.toFixed(date.getMinutes());\n\t\t\t\t\t\t\tstr += \":\"+wDate.toFixed(date.getSeconds());\n\t\t\t\t\t\t\treturn str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn s;\n\t\t\t\t\t};\n\t\t\t\t\tstr += fn(date);\n\t\t\t\t\tlastPos = pos + 2;\n\t\t\t\t});\n\t\t\t\tstr += format.slice(lastPos,format.length);\n\t\t\t\treturn str;\n\t\t\t};\n\n\t\t}\n\n\t\tformat=format.replace(/%[a-zA-Z]/g,function(a){\n\t\t\tswitch(a){\n\t\t\t\tcase \"%d\": return \"\\\"+wDate.toFixed(date.getDate())+\\\"\";\n\t\t\t\tcase \"%m\": return \"\\\"+wDate.toFixed((date.getMonth()+1))+\\\"\";\n\t\t\t\tcase \"%j\": return \"\\\"+date.getDate()+\\\"\";\n\t\t\t\tcase \"%n\": return \"\\\"+(date.getMonth()+1)+\\\"\";\n\t\t\t\tcase \"%y\": return \"\\\"+wDate.toFixed(date.getFullYear()%100)+\\\"\"; \n\t\t\t\tcase \"%Y\": return \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\tcase \"%D\": return \"\\\"+i18n.calendar.dayShort[date.getDay()]+\\\"\";\n\t\t\t\tcase \"%l\": return \"\\\"+i18n.calendar.dayFull[date.getDay()]+\\\"\";\n\t\t\t\tcase \"%M\": return \"\\\"+i18n.calendar.monthShort[date.getMonth()]+\\\"\";\n\t\t\t\tcase \"%F\": return \"\\\"+i18n.calendar.monthFull[date.getMonth()]+\\\"\";\n\t\t\t\tcase \"%h\": return \"\\\"+wDate.toFixed((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\tcase \"%g\": return \"\\\"+((date.getHours()+11)%12+1)+\\\"\";\n\t\t\t\tcase \"%G\": return \"\\\"+date.getHours()+\\\"\";\n\t\t\t\tcase \"%H\": return \"\\\"+wDate.toFixed(date.getHours())+\\\"\";\n\t\t\t\tcase \"%i\": return \"\\\"+wDate.toFixed(date.getMinutes())+\\\"\";\n\t\t\t\tcase \"%a\": return \"\\\"+(date.getHours()>11?i18n.pm[0]:i18n.am[0])+\\\"\";\n\t\t\t\tcase \"%A\": return \"\\\"+(date.getHours()>11?i18n.pm[1]:i18n.am[1])+\\\"\";\n\t\t\t\tcase \"%s\": return \"\\\"+wDate.toFixed(date.getSeconds())+\\\"\";\n\t\t\t\tcase \"%S\": return \"\\\"+wDate.toFixed(date.getMilliseconds(), true)+\\\"\";\n\t\t\t\tcase \"%W\": return \"\\\"+wDate.toFixed(wDate.getISOWeek(date))+\\\"\";\n\t\t\t\tcase \"%c\":\n\t\t\t\t\tvar str = \"\\\"+date.getFullYear()+\\\"\";\n\t\t\t\t\tstr += \"-\\\"+wDate.toFixed((date.getMonth()+1))+\\\"\";\n\t\t\t\t\tstr += \"-\\\"+wDate.toFixed(date.getDate())+\\\"\";\n\t\t\t\t\tstr += \"T\";\n\t\t\t\t\tstr += \"\\\"+wDate.toFixed(date.getHours())+\\\"\";\n\t\t\t\t\tstr += \":\\\"+wDate.toFixed(date.getMinutes())+\\\"\";\n\t\t\t\t\tstr += \":\\\"+wDate.toFixed(date.getSeconds())+\\\"\";\n\t\t\t\t\tif(utc === true)\n\t\t\t\t\t\tstr += \"Z\";\n\t\t\t\t\treturn str;\n\n\t\t\t\tdefault: return a;\n\t\t\t}\n\t\t});\n\t\tif (utc===true) format=format.replace(/date\\.get/g,\"date.getUTC\");\n\t\tconst temp = new Function(\"date\", \"i18n\", \"wDate\", \"if (!date) return ''; if (!date.getMonth) date=i18n.parseFormatDate(date);  return \\\"\"+format+\"\\\";\");\n\t\treturn function(v){ return temp(v, i18n, wDate); };\n\t},\n\tstrToDate:function(format,utc){\n\t\tif (typeof format == \"function\") return format;\n\n\t\tvar mask=format.match(/%[a-zA-Z]/g);\n\t\tvar splt=\"var temp=date.split(/[\\\\s\\\\./\\\\-\\\\:\\\\,]+/g); if(!temp.join('')){return ''}\";\n\t\tvar i,t,s;\n\n\t\tif(!i18n.calendar.monthShort_hash){\n\t\t\ts = i18n.calendar.monthShort;\n\t\t\tt = i18n.calendar.monthShort_hash = {};\n\t\t\tfor (i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]]=i;\n\n\t\t\ts = i18n.calendar.monthFull;\n\t\t\tt = i18n.calendar.monthFull_hash = {};\n\t\t\tfor (i = 0; i < s.length; i++)\n\t\t\t\tt[s[i]]=i;\n\t\t}\n\n\t\tif(env.strict){\n\t\t\treturn function(date){\n\t\t\t\tif (!date) return \"\";\n\t\t\t\tif (typeof date == \"object\") return date;\n\t\t\t\tvar temp=date.split(/[\\s./\\-:,]+/g);\n\n\t\t\t\tif(!temp.join(\"\"))\n\t\t\t\t\treturn \"\";\n\n\t\t\t\tvar set=[0,0,1,0,0,0,0];\n\t\t\t\tfor (i=0; i<mask.length; i++){\n\t\t\t\t\tvar a = mask[i];\n\t\t\t\t\tif( a ==  \"%y\")\n\t\t\t\t\t\tset[0]=temp[i]*1+(temp[i]>30?1900:2000);\n\t\t\t\t\telse if( a ==  \"%Y\"){\n\t\t\t\t\t\tset[0]=(temp[i]||0)*1; if (set[0]<30) set[0]+=2000;\n\t\t\t\t\t}\n\t\t\t\t\telse if( a == \"%n\" || a == \"%m\")\n\t\t\t\t\t\tset[1]=(temp[i]||1)-1;\n\t\t\t\t\telse if( a ==  \"%M\")\n\t\t\t\t\t\tset[1]=i18n.calendar.monthShort_hash[temp[i]]||0;\n\t\t\t\t\telse if( a ==  \"%F\")\n\t\t\t\t\t\tset[1]=i18n.calendar.monthFull_hash[temp[i]]||0;\n\t\t\t\t\telse if( a == \"%j\" || a == \"%d\")\n\t\t\t\t\t\tset[2]=temp[i]||1;\n\t\t\t\t\telse if( a == \"%g\" || a == \"%G\" || a == \"%h\" || a == \"%H\")\n\t\t\t\t\t\tset[3]=temp[i]||0;\n\t\t\t\t\telse if( a == \"%a\")\n\t\t\t\t\t\tset[3]=set[3]%12+((temp[i]||\"\")==i18n.am[0]?0:12);\n\t\t\t\t\telse if( a == \"%A\")\n\t\t\t\t\t\tset[3]=set[3]%12+((temp[i]||\"\")==i18n.am[1]?0:12);\n\t\t\t\t\telse if( a ==  \"%i\")\n\t\t\t\t\t\tset[4]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%s\")\n\t\t\t\t\t\tset[5]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%S\")\n\t\t\t\t\t\tset[6]=temp[i]||0;\n\t\t\t\t\telse if( a ==  \"%c\"){\n\t\t\t\t\t\tvar reg = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+):(\\d+)(\\+.*|)/g;\n\t\t\t\t\t\tvar res = reg.exec(date);\n\t\t\t\t\t\tset[0]= (res[1]||0)*1; if (set[0]<30) set[0]+=2000;\n\t\t\t\t\t\tset[1]= (res[2]||1)-1;\n\t\t\t\t\t\tset[2]= res[3]||1;\n\t\t\t\t\t\tset[3]= res[4]||0;\n\t\t\t\t\t\tset[4]= res[5]||0;\n\t\t\t\t\t\tset[5]= res[6]||0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(utc)\n\t\t\t\t\treturn new Date(Date.UTC(set[0],set[1],set[2],set[3],set[4],set[5], set[6]));\n\t\t\t\treturn new Date(set[0],set[1],set[2],set[3],set[4],set[5], set[6]);\n\t\t\t};\n\t\t}\n\n\t\tfor (i=0; i<mask.length; i++){\n\t\t\tswitch(mask[i]){\n\t\t\t\tcase \"%j\":\n\t\t\t\tcase \"%d\": splt+=\"set[2]=temp[\"+i+\"]||1;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%n\":\n\t\t\t\tcase \"%m\": splt+=\"set[1]=(temp[\"+i+\"]||1)-1;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%y\": splt+=\"set[0]=temp[\"+i+\"]*1+(temp[\"+i+\"]>30?1900:2000);\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%g\":\n\t\t\t\tcase \"%G\":\n\t\t\t\tcase \"%h\": \n\t\t\t\tcase \"%H\":\n\t\t\t\t\tsplt+=\"set[3]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%i\":\n\t\t\t\t\tsplt+=\"set[4]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%Y\":  splt+=\"set[0]=(temp[\"+i+\"]||0)*1; if (set[0]<30) set[0]+=2000;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%a\":\n\t\t\t\t\tsplt+= \"set[3]=set[3]%12+(temp[\"+i+\"]==i18n.am[0]?0:12);\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%A\":\n\t\t\t\t\tsplt+= \"set[3]=set[3]%12+(temp[\"+i+\"]==i18n.am[1]?0:12);\";\n\t\t\t\t\tbreak;\t\t\t\t\t\n\t\t\t\tcase \"%s\":  splt+=\"set[5]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%S\":  splt+=\"set[6]=temp[\"+i+\"]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%M\":  splt+=\"set[1]=i18n.calendar.monthShort_hash[temp[\"+i+\"]]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%F\":  splt+=\"set[1]=i18n.calendar.monthFull_hash[temp[\"+i+\"]]||0;\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"%c\":\n\t\t\t\t\tsplt+= \"var res = date.split('T');\";\n\t\t\t\t\tsplt+= \"if(res[0]){ var d = res[0].split('-');\";\n\t\t\t\t\tsplt+= \"set[0]= (d[0]||0)*1; if (set[0]<30) set[0]+=2000;\";\n\t\t\t\t\tsplt+= \"set[1]= (d[1]||1)-1;\";\n\t\t\t\t\tsplt+= \"set[2]= d[2]||1;}\";\n\t\t\t\t\tsplt+= \"if(res[1]){ var t = res[1].split(':');\";\n\t\t\t\t\tsplt+= \"set[3]= t[0]||0;\";\n\t\t\t\t\tsplt+= \"set[4]= t[1]||0;\";\n\t\t\t\t\tsplt+= \"set[5]= parseInt(t[2])||0;}\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar code =\"set[0],set[1],set[2],set[3],set[4],set[5],set[6]\";\n\t\tif (utc) code =\" Date.UTC(\"+code+\")\";\n\t\tconst temp = new Function(\"date\", \"i18n\", \"if (!date) return ''; if (typeof date == 'object') return date; var set=[0,0,1,0,0,0,0]; \"+splt+\" return new Date(\"+code+\");\");\n\t\treturn function(v){ return temp(v, i18n ); };\n\t},\n\t\t\n\tgetISOWeek: function(ndate) {\n\t\tif(!ndate) return false;\n\t\tvar nday = ndate.getDay();\n\t\tif (nday === 0) {\n\t\t\tnday = 7;\n\t\t}\n\t\tvar first_thursday = new Date(ndate.valueOf());\n\t\tfirst_thursday.setDate(ndate.getDate() + (4 - nday));\n\t\tvar year_number = first_thursday.getFullYear(); // year of the first Thursday\n\t\tvar ordinal_date = Math.floor( (first_thursday.getTime() - new Date(year_number, 0, 1).getTime()) / 86400000); //ordinal date of the first Thursday - 1 (so not really ordinal date)\n\t\tvar weekNumber = 1 + Math.floor( ordinal_date / 7);\t\n\t\treturn weekNumber;\n\t},\n\t\n\tgetUTCISOWeek: function(ndate){\n\t\treturn this.getISOWeek(ndate);\n\t},\n\t_correctDate: function(d,d0,inc,checkFunc){\n\t\tif(!inc)\n\t\t\treturn;\n\t\tvar incorrect = checkFunc(d,d0);\n\t\tif(incorrect){\n\t\t\tvar i = (inc>0?1:-1);\n\n\t\t\twhile(incorrect){\n\t\t\t\td.setHours(d.getHours()+i);\n\t\t\t\tincorrect = checkFunc(d,d0);\n\t\t\t\ti += (inc>0?1:-1);\n\t\t\t}\n\t\t}\n\t},\n\tadd:function(date,inc,mode,copy){\n\t\tif (copy) date = this.copy(date);\n\t\tvar d = wDate.copy(date);\n\t\tswitch(mode){\n\t\t\tcase \"day\":\n\t\t\t\tdate.setDate(date.getDate()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \twDate.datePart(d0,true).valueOf()== wDate.datePart(d,true).valueOf();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"week\":\n\t\t\t\tdate.setDate(date.getDate()+7*inc);\n\t\t\t\tthis._correctDate(date,d,7*inc,function(d,d0){\n\t\t\t\t\treturn \twDate.datePart(d0,true).valueOf()== wDate.datePart(d,true).valueOf();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"month\":\n\t\t\t\tdate.setMonth(date.getMonth()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getMonth() == d.getMonth() && d0.getYear() == d.getYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"quarter\":\n\t\t\t\tdate.setMonth(date.getMonth() + inc * 3);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getMonth() == d.getMonth() && d0.getYear() == d.getYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"year\":\n\t\t\t\tdate.setYear(date.getFullYear()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getFullYear() == d.getFullYear();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"hour\":\n\t\t\t\tdate.setHours(date.getHours()+inc);\n\t\t\t\tthis._correctDate(date,d,inc,function(d,d0){\n\t\t\t\t\treturn \td0.getHours() == d.getHours() && Date.datePart(d0,true)== Date.datePart(d,true);\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase \"minute\": \tdate.setMinutes(date.getMinutes()+inc); break;\n\t\t\tdefault:\n\t\t\t\twDate.add[mode](date, inc, mode);\n\t\t\t\tbreak;\n\t\t}\n\t\treturn date;\n\t},\n\tdatePart:function(date, copy){\n\t\tif (copy) date = this.copy(date);\n\n\t\t// workaround for non-existent hours\n\t\tvar d = this.copy(date);\n\t\td.setHours(0);\n\t\tif(d.getDate()!=date.getDate()){\n\t\t\tdate.setHours(1);\n\t\t}\n\t\telse{\n\t\t\tdate.setHours(0);\n\t\t}\n\n\t\tdate.setMinutes(0);\n\t\tdate.setSeconds(0);\n\t\tdate.setMilliseconds(0);\n\t\treturn date;\n\t},\n\ttimePart:function(date, copy){\n\t\tif (copy) date = this.copy(date);\n\t\treturn (date.valueOf()/1000 - date.getTimezoneOffset()*60)%86400;\n\t},\n\tcopy:function(date){\n\t\treturn new Date(date.valueOf());\n\t},\n\tequal:function(a,b){\n\t\tif (!a || !b) return false;\n\t\treturn a.valueOf() === b.valueOf();\n\t},\n\tisHoliday:function(day){ \n\t\tday = day.getDay();\n\t\tif (day === 0 || day==6) return \"webix_cal_event\"; \n\t}\n};\n\nexport default wDate;","import env from \"../webix/env\";\nimport {stringify} from \"./stringify\";\nimport DataDriver from \"../load/drivers/index\";\n\n\nconst storage = {};\n\nstorage.prefix = function(scope, storage){\n\tscope = scope + \".\";\n\treturn {\n\t\tput:function(name, data){\n\t\t\treturn storage.put(scope+name, data);\n\t\t},\n\t\tget:function(name){\n\t\t\treturn storage.get(scope+name);\n\t\t},\n\t\tremove:function(name){\n\t\t\treturn storage.remove(scope+name);\n\t\t}\n\t};\n};\n\nstorage.local = {\n\tput:function(name, data){\n\t\tif(name && window.JSON && window.localStorage){\n\t\t\twindow.localStorage.setItem(name, stringify(data));\n\t\t}\n\t},\n\tget:function(name){\n\t\tif(name && window.JSON && window.localStorage){\n\t\t\tvar json = window.localStorage.getItem(name);\n\t\t\tif(!json)\n\t\t\t\treturn null;\n\t\t\treturn DataDriver.json.toObject(json);\n\t\t}else\n\t\t\treturn null;\n\t},\n\tremove:function(name){\n\t\tif(name && window.JSON && window.localStorage){\n\t\t\twindow.localStorage.removeItem(name);\n\t\t}\n\t},\n\tclear:function(){\n\t\twindow.localStorage.clear();\n\t}\n};\n\nstorage.session = {\n\tput:function(name, data){\n\t\tif(name && window.JSON && window.sessionStorage){\n\t\t\twindow.sessionStorage.setItem(name, stringify(data));\n\t\t}\n\t},\n\tget:function(name){\n\t\tif(name && window.JSON && window.sessionStorage){\n\t\t\tvar json = window.sessionStorage.getItem(name);\n\t\t\tif(!json)\n\t\t\t\treturn null;\n\t\t\treturn DataDriver.json.toObject(json);\n\t\t}else\n\t\t\treturn null;\n\t},\n\tremove:function(name){\n\t\tif(name && window.JSON && window.sessionStorage){\n\t\t\twindow.sessionStorage.removeItem(name);\n\t\t}\n\t},\n\tclear:function(){\n\t\twindow.sessionStorage.clear();\n\t}\n};\n\nstorage.cookie = {\n\tput:function(name, data, domain, expires ){\n\t\tif(name && window.JSON){\n\t\t\tdocument.cookie = name + \"=\" + escape(stringify(data)) +\n\t\t\t(( expires && (expires instanceof Date)) ? \";expires=\" + expires.toUTCString() : \"\" ) +\n\t\t\t(( domain ) ? \";domain=\" + domain : \"\" ) + \n\t\t\t(( env.https ) ? \";secure\" : \"\");\n\t\t}\n\t},\n\tgetRaw:function(check_name){\n\t\t// first we'll split this cookie up into name/value pairs\n\t\t// note: document.cookie only returns name=value, not the other components\n\t\tvar a_all_cookies = document.cookie.split( \";\" );\n\t\tvar a_temp_cookie = \"\";\n\t\tvar cookie_name = \"\";\n\t\tvar cookie_value = \"\";\n\t\tvar b_cookie_found = false; // set boolean t/f default f\n\n\t\tfor (var i = 0; i < a_all_cookies.length; i++ ){\n\t\t\t// now we'll split apart each name=value pair\n\t\t\ta_temp_cookie = a_all_cookies[i].split( \"=\" );\n\n\t\t\t// and trim left/right whitespace while we're at it\n\t\t\tcookie_name = a_temp_cookie[0].replace(/^\\s+|\\s+$/g, \"\");\n\n\t\t\t// if the extracted name matches passed check_name\n\t\t\tif (cookie_name == check_name ){\n\t\t\t\tb_cookie_found = true;\n\t\t\t\t// we need to handle case where cookie has no value but exists (no = sign, that is):\n\t\t\t\tif ( a_temp_cookie.length > 1 ){\n\t\t\t\t\tcookie_value = unescape( a_temp_cookie[1].replace(/^\\s+|\\s+$/g, \"\") );\n\t\t\t\t}\n\t\t\t\t// note that in cases where cookie is initialized but no value, null is returned\n\t\t\t\treturn cookie_value;\n\t\t\t}\n\t\t\ta_temp_cookie = null;\n\t\t\tcookie_name = \"\";\n\t\t}\n\t\tif ( !b_cookie_found ){\n\t\t\treturn null;\n\t\t}\n\t\treturn null;\n\t},\n\tget:function(name){\n\t\tif(name && window.JSON){\n\t\t\tvar json = this.getRaw(name);\n\t\t\tif(!json)\n\t\t\t\treturn null;\n\t\t\treturn DataDriver.json.toObject(unescape(json));\n\t\t}else\n\t\t\treturn null;\n\t},\n\tremove:function(name, domain){\n\t\tif(name && this.getRaw(name)) \n\t\t\tdocument.cookie = name + \"=\" + (( domain ) ? \";domain=\" + domain : \"\") + \";expires=Thu, 01-Jan-1970 00:00:01 GMT\";\n\t},\n\tclear:function(domain){\n\t\tvar cookies = document.cookie.split(\";\");\n\t\tfor (var i = 0; i < cookies.length; i++)\n\t\t\tdocument.cookie = /^[^=]+/.exec(cookies[i])[0] + \"=\" + (( domain ) ? \";domain=\" + domain : \"\") + \";expires=Thu, 01-Jan-1970 00:00:01 GMT\";\t\t\n\t}\n};\n\nexport default storage;","import {ajax} from \"../load/ajax\";\nimport promise from \"../thirdparty/promiz\";\nimport {bind} from \"../webix/helpers\";\nimport {callEvent} from \"../webix/customevents\";\n\n\nvar error_key = \"__webix_remote_error\";\n\nfunction RemoteContext(url, config){\n\tthis._proxy = {};\n\tthis._queue = [];\n\tthis._url = url;\n\tthis._key = \"\";\n\n\tif (config)\n\t\tthis._process(config);\n\telse\n\t\tthis._ready = ajax(url)\n\t\t\t.then(function(data){\n\t\t\t\treturn data.text();\n\t\t\t})\n\t\t\t.then(bind(function(text){\n\t\t\t\ttext = text.split(\"/*api*/\")[1];\n\t\t\t\tthis._process(JSON.parse(text));\n\t\t\t\treturn this._proxy;\n\t\t\t}, this));\n}\nRemoteContext.prototype = {\n\t_process:function(config){\n\t\tif (config.$key)\n\t\t\tthis._key = config.$key;\n\t\tif (config.$vars)\n\t\t\tfor (var key in config.$vars)\n\t\t\t\tthis._proxy[key] = config.$vars[key];\n\n\t\tthis._parse(config, this._proxy, \"\");\n\t},\n\t_parse:function(api, obj, prefix){\n\t\tfor (var key in api){\n\t\t\tif (key === \"$key\" || key === \"$vars\") continue;\n\t\t\tvar val = api[key];\n\t\t\tif (typeof val == \"object\"){\n\t\t\t\tvar sub = obj[key] = {};\n\t\t\t\tthis._parse(val, sub, prefix+key+\".\");\n\t\t\t} else\n\t\t\t\tobj[key] = this._proxy_call(this, prefix+key);\n\t\t}\n\t},\n\t_call:function(name, args){\n\t\tvar def = this._deffer(this, name, args);\n\t\tthis._queue.push(def);\n\t\tthis._start_queue();\n\t\treturn def;\n\t},\n\t_start_queue:function(){\n\t\tif (!this._timer)\n\t\t\tthis._timer = setTimeout(bind(this._run_queue, this), 1);\n\t},\n\t_run_queue:function(){\n\t\tvar data = [], defs = this._queue;\n\t\tfor (var i=0; i<this._queue.length; i++){\n\t\t\tvar def = this._queue[i];\n\t\t\tif (def.$sync){\n\t\t\t\tdefs.splice(i,1); i--;\n\t\t\t} else\n\t\t\t\tdata.push({ name: def.$name, args: def.$args });\t\n\t\t}\n\n\t\tif (defs.length){\n\t\t\tvar request = ajax();\n\t\t\tvar pack = this._pack(data);\n\t\t\tcallEvent(\"onBeforeRemoteCall\", [request, pack, {}]);\n\t\t\tvar promise = request.post(this._url, pack)\n\t\t\t\t.then(function(response){\n\t\t\t\t\tvar data = response.json();\n\t\t\t\t\tvar results = data.data;\n\t\t\t\t\tfor (var i=0; i<results.length; i++){\n\t\t\t\t\t\tlet res = results[i];\n\t\t\t\t\t\tlet error = results[i] && results[i][error_key];\n\t\t\t\t\t\tif (error){\n\t\t\t\t\t\t\tcallEvent(\"onRemoteError\", [error]);\n\t\t\t\t\t\t\tdefs[i].reject(error);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdefs[i].resolve(res);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\t\n\t\t\t\t}, function(res){\n\t\t\t\t\tfor (var i=0; i<defs.length; i++)\n\t\t\t\t\t\tdefs[i].reject(res);\n\t\t\t\t\tthrow res;\n\t\t\t\t});\n\t\t\tcallEvent(\"onAfterRemoteCall\", [promise]);\n\t\t}\n\n\t\tthis._queue = [];\n\t\tthis._timer = null;\n\t},\n\t_sync:function(){\n\t\tvar value = null;\n\t\tthis.$sync = true;\n\t\tvar data = [{ name: this.$name, args: this.$args }];\n\n\t\ttry {\n\t\t\tvar request = ajax();\n\t\t\tvar pack = this.$context._pack(data);\n\t\t\tcallEvent(\"onBeforeRemoteCall\", [request, pack, { sync: true }]);\n\t\t\tvar xhr = request.sync().post(this.$context._url, pack);\n\t\t\tcallEvent(\"onAfterRemoteCall\", [null]);\n\t\t\tvalue = JSON.parse(xhr.responseText).data[0];\n\t\t\tif (value[error_key])\n\t\t\t\tvalue = null;\n\t\t} catch(e){} //eslint-disable-line\n\n\t\treturn value;\n\t},\n\t_deffer:function(master, name, args){\n\t\tvar pr = promise.defer();\n\t\tpr.sync = master._sync;\n\t\tpr.$name = name;\n\t\tpr.$args = args;\n\t\tpr.$context = this;\n\n\t\treturn pr;\n\t},\n\t_proxy_call:function(master, name){\n\t\treturn function(){\n\t\t\treturn master._call(name, [].slice.call(arguments));\n\t\t};\n\t},\n\t_getProxy:function(){\n\t\treturn this._ready || this._proxy;\n\t},\n\t_pack:function(obj){\n\t\treturn {\n\t\t\tkey: this._key,\n\t\t\tpayload:obj\n\t\t};\n\t}\n};\n\nfunction getApi(url, config){\n\tvar ctx = new RemoteContext(url, config);\n\tvar proxy = ctx._getProxy();\n\tfor (var key in proxy)\n\t\tremote[key] = proxy[key];\n\n\treturn proxy;\n}\n\nconst remote = function(url, config){\n\tif (typeof url === \"object\"){\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tconfig = url;\n\t\turl = scripts[scripts.length - 1].src;\n\t\treturn getApi(url, config);\n\t} else \n\t\treturn getApi(url, config);\n};\n\nexport default remote;","import {preventEvent} from \"../webix/html\";\nimport template from \"../webix/template\";\nimport {extend} from \"../webix/helpers\";\nimport {$$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\nimport {_event} from \"../webix/htmlevents\";\nimport wDate from \"../core/date\";\n\n\nconst datafilter = {\n\ttextWaitDelay:500,\n\t\"summColumn\":{\n\t\tgetValue:function(node){ return node.innerText; },\n\t\tsetValue: function(){},\n\t\trefresh:function(master, node, value){ \n\t\t\tvar result = 0;\n\t\t\tmaster.mapCells(null, value.columnId, null, 1, function(value){\n\t\t\t\tvalue = value*1;\n\t\t\t\tif (!isNaN(value))\n\t\t\t\t\tresult+=value;\n\t\t\t}, true);\n\n\t\t\tif (value.format)\n\t\t\t\tresult = value.format(result);\n\t\t\tif (value.template)\n\t\t\t\tresult = value.template({value:result});\n\n\t\t\tnode.innerHTML = result;\n\t\t},\n\t\ttrackCells:true,\n\t\trender:function(master, config){ \n\t\t\tif (config.template)\n\t\t\t\tconfig.template = template(config.template);\n\t\t\treturn \"\"; \n\t\t}\n\t},\n\t\"masterCheckbox\":{\n\t\tgetValue:function(){},\n\t\tsetValue:function(){},\n\t\tgetHelper:function(node, config){\n\t\t\treturn {\n\t\t\t\tcheck:function(){ config.checked = false; node.onclick(); },\n\t\t\t\tuncheck:function(){ config.checked = true; node.onclick(); },\n\t\t\t\tisChecked:function(){ return config.checked; }\n\t\t\t};\n\t\t},\n\t\trefresh:function(master, node, config){\n\t\t\tnode.onclick = function(){\n\t\t\t\tthis.getElementsByTagName(\"input\")[0].checked = config.checked = !config.checked;\n\t\t\t\tvar column = master.getColumnConfig(config.columnId);\n\t\t\t\tvar checked = config.checked ? column.checkValue : column.uncheckValue;\n\t\t\t\tmaster.data.each(function(obj){\n\t\t\t\t\tobj[config.columnId] = checked;\n\t\t\t\t\tmaster.callEvent(\"onCheck\", [obj.id, config.columnId, checked]);\n\t\t\t\t\tthis.callEvent(\"onStoreUpdated\", [obj.id, obj, \"save\"]);\n\t\t\t\t});\n\t\t\t\tmaster.refresh();\n\t\t\t};\n\t\t},\n\t\trender:function(master, config){ \n\t\t\treturn \"<input type='checkbox' \"+(config.checked?\"checked='1'\":\"\")+\">\"; \n\t\t}\n\t},\n\t\"textFilter\":{\n\t\tgetInputNode:function(node){ return node.querySelector(\"input\") || { value: null }; },\n\t\tgetValue:function(node){ return this.getInputNode(node).value;  },\n\t\tsetValue:function(node, value){ this.getInputNode(node).value = value;  },\n\t\trefresh:function(master, node, value){\n\t\t\tnode.component = master._settings.id;\n\t\t\tmaster.registerFilter(node, value, this);\n\t\t\tnode._comp_id = master._settings.id;\n\t\t\tif (value.value && this.getValue(node) != value.value) this.setValue(node, value.value);\n\t\t\tnode.onclick = preventEvent;\n\t\t\t_event(node, \"keydown\", this._on_key_down);\n\t\t},\n\t\trender:function(master, config){\n\t\t\tif (this.init) this.init(config);\n\t\t\tconfig.css = (config.css||\"\") + \" webix_ss_filter\";\n\t\t\treturn \"<input \"+(config.placeholder?(\"placeholder=\\\"\"+config.placeholder+\"\\\" \"):\"\")+\"type='text'>\"; \n\t\t},\n\t\t_on_key_down:function(e){\n\t\t\tvar id = this._comp_id;\n\n\t\t\t//tabbing through filters must not trigger filtering\n\t\t\t//we can improve this functionality by preserving initial filter value\n\t\t\t//and comparing new one with it\n\t\t\tif ((e.which || e.keyCode) == 9) return;\n\n\t\t\tif (this._filter_timer) window.clearTimeout(this._filter_timer);\n\t\t\tthis._filter_timer=window.setTimeout(function(){\n\t\t\t\tvar ui = $$(id);\n\t\t\t\t//ensure that ui is not destroyed yet\n\t\t\t\tif (ui) ui.filterByAll();\n\t\t\t},datafilter.textWaitDelay);\n\t\t}\n\t},\n\t\"selectFilter\":{\n\t\tgetInputNode:function(node){ return node.querySelector(\"select\") || { value: null}; },\n\t\tgetValue:function(node){ return this.getInputNode(node).value;  },\n\t\tsetValue:function(node, value){ this.getInputNode(node).value = value;  },\n\t\trefresh:function(master, node, value){\n\t\t\t//value - config from header { contet: }\n\t\t\tvalue.compare = value.compare || function(a,b){ return a == b; };\n\n\t\t\tnode.component = master._settings.id;\n\t\t\tmaster.registerFilter(node, value, this);\n\n\t\t\tconst data = datafilter._get_data(master, value);\n\t\t\tif (value.emptyOption !== false)\n\t\t\t\tdata.unshift({id:\"\", value:value.emptyOption||\"\"});\n\n\t\t\t//slow in IE\n\t\t\t//http://jsperf.com/select-options-vs-innerhtml\n\n\t\t\tlet select = document.createElement(\"select\");\n\t\t\tfor (let i = 0; i < data.length; i++){\n\t\t\t\tlet option = document.createElement(\"option\");\n\t\t\t\toption.value = data[i].id;\n\t\t\t\toption.text = data[i].value;\n\t\t\t\tselect.add(option);\n\t\t\t}\n\n\t\t\tnode.innerHTML = \"\";\n\t\t\tnode.appendChild(select);\n\n\t\t\tif (value.value) this.setValue(node, value.value);\n\t\t\tnode.onclick = preventEvent;\n\n\t\t\tselect._comp_id = master._settings.id;\n\t\t\t_event(select, \"change\", this._on_change);\n\t\t},\n\t\trender:function(master, config){\n\t\t\tif (this.init) this.init(config);\n\t\t\tconfig.css = (config.css||\"\") + \" webix_ss_filter\";\n\t\t\treturn \"\";\n\t\t},\n\t\t_on_change:function(){ \n\t\t\t$$(this._comp_id).filterByAll();\n\t\t}\n\t},\n\t_get_data:function(master, value){\n\t\tlet data;\n\t\tlet options = value.options;\n\n\t\tif (options){\n\t\t\tdata = master._collectValues.call(options, \"id\", \"value\");\n\t\t} else\n\t\t\tdata = master.collectValues(value.columnId, value.collect);\n\n\t\treturn data;\n\t}\n};\n\ndatafilter.serverFilter = extend({\n\t$server: true,\n\t_on_key_down:function(e){\n\t\tvar id = this._comp_id,\n\t\t\tcode = (e.which || e.keyCode);\n\n\t\t//ignore tab and navigation keys\n\t\tif (code == 9 || ( code >= 33 &&  code <= 40)) return;\n\t\tif (this._filter_timer) window.clearTimeout(this._filter_timer);\n\t\tthis._filter_timer=window.setTimeout(function(){\n\t\t\t$$(id).filterByAll();\n\t\t},datafilter.textWaitDelay);\n\t}\n}, datafilter.textFilter);\n\ndatafilter.serverSelectFilter = extend({\n\t$server: true,\n\t_on_change:function(){\n\t\tvar id = this._comp_id;\n\t\t$$(id).filterByAll();\n\t}\n}, datafilter.selectFilter);\n\ndatafilter.numberFilter = extend({\n\tinit:function(config){\n\t\tconfig.prepare = function(value){\n\t\t\tvar equality = (value.indexOf(\"=\") != -1);\n\t\t\tvar intvalue = this.format(value);\n\t\t\tif (intvalue === \"\") return \"\";\n\n\t\t\tvar compare;\n\t\t\tif (value.indexOf(\">\") != -1){\n\t\t\t\tcompare = this._greater;\n\t\t\t}\n\t\t\telse if (value.indexOf(\"<\") != -1){\n\t\t\t\tcompare = this._lesser;\n\t\t\t}\n\n\t\t\tif (compare && equality) {\n\t\t\t\tconfig.compare = (a,b) => this._equal(a,b) || compare(a,b);\n\t\t\t} else {\n\t\t\t\tconfig.compare = compare || this._equal; \n\t\t\t}\n\n\t\t\treturn intvalue;\n\t\t};\n\t},\n\tformat:function(value){\n\t\treturn value.replace(/[^\\-.0-9]/g,\"\");\n\t},\n\t_greater:function(a,b){ return a*1>b; },\n\t_lesser:function(a,b){ return a!==\"\" && a*1<b; },\n\t_equal:function(a,b){ return a !== \"\" && a*1==b; }\n}, datafilter.textFilter);\n\ndatafilter.dateFilter = extend({\n\tformat:function(value){\n\t\tif (value === \"\") return \"\";\n\t\tvar date = new Date();\n\n\t\tif (value.indexOf(\"today\") != -1){\n\t\t\tdate = wDate.dayStart(date);\n\t\t} else if (value.indexOf(\"now\") == -1){\n\t\t\tvar parts = value.match(/[0-9]+/g);\n\t\t\tif (!parts||!parts.length) return \"\";\n\t\t\tif (parts.length < 3){\n\t\t\t\tparts.reverse();\n\t\t\t\tdate = new Date(parts[0], (parts[1]||1)-1, 1);\n\t\t\t} else\n\t\t\t\tdate = i18n.dateFormatDate(value.replace(/^[>< =]+/,\"\"));\n\t\t}\n\t\treturn date.valueOf();\n\t}\n}, datafilter.numberFilter);\n\nexport default datafilter;","import {assert} from \"../webix/debug\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\nimport {callEvent} from \"../webix/customevents\";\nimport {insertBefore, remove} from \"../webix/html\";\nimport {extend, _power_array, isUndefined, copy} from \"../webix/helpers\";\nimport {_each} from \"../ui/helpers\";\n\nimport {$$,ui,protoUI} from \"../ui/core\";\n\nimport state from \"../core/state\";\nimport IdSpace from \"../core/idspace\";\nimport EventSystem from \"../core/eventsystem\";\n\nimport base from \"./baseview\";\n\nconst api = {\n\tname:\"baselayout\",\n\trestore:function(state, factory, configOnly){\n\t\tvar out = this._restore(copy(state), factory);\n\t\tif (configOnly)\n\t\t\treturn out;\n\t\telse\n\t\t\tui((out.cols || out.rows), this);\n\t},\n\t_restore:function(state, factory){\n\t\tif (state.$layout){\n\t\t\tvar sub = state.cols || state.rows;\n\t\t\tfor (var i = 0; i < sub.length; i++) {\n\t\t\t\tsub[i] = this._restore(sub[i], factory);\n\t\t\t}\n\t\t} else {\n\t\t\treturn factory.call(this, state);\n\t\t}\n\n\t\treturn state;\n\t},\n\tserialize:function(serializer){\n\t\tvar out = [];\n\t\tvar childs = this.getChildViews();\n\n\t\tfor (var i=0; i<childs.length; i++){\n\t\t\tvar sub = childs[i];\n\t\t\tif (sub.movePortlet){\n\t\t\t\tvar child = sub.getChildViews();\n\t\t\t\tout.push(serializer.call(this, child[child.length-1]));\n\t\t\t} else if (sub.serialize){\n\t\t\t\t// some kind of layout\n\t\t\t\tout.push(sub.serialize(serializer, true));\n\t\t\t} else {\n\t\t\t\t// leaf view\n\t\t\t\tout.push(serializer.call(this, sub));\n\t\t\t}\n\t\t}\n\n\t\tvar obj = { $layout: true, type: this.config.type };\n\t\tif (this.config.rows)\n\t\t\tobj.rows = out;\n\t\telse\n\t\t\tobj.cols = out;\n\n\t\treturn obj;\n\t},\n\t$init:function(config){\n\t\tthis.$ready.push(this._parse_cells);\n\t\tthis._dataobj  = this._contentobj;\n\t\tthis._layout_sizes = [];\n\t\tthis._responsive = [];\n\t\tthis._padding = { top:0, left:0, right:0, bottom:0 };\n\n\t\tif (config.$topView){\n\t\t\tconfig.borderless = true;\n\t\t\tconfig._inner = { top:true, left:true, bottom:true, right:true };\n\t\t}\n\n\t\tif (config.isolate)\n\t\t\textend(this, IdSpace);\n\t},\n\trows_setter:function(value){\n\t\tthis._vertical_orientation = 1;\n\t\tthis._collection = value;\n\t\treturn true;\n\t},\n\tcols_setter:function(value){\n\t\tthis._vertical_orientation = 0;\n\t\tthis.$view.style.whiteSpace = \"nowrap\";\n\t\tthis._collection = value;\n\t\treturn true;\n\t},\n\t_remove:function(view){\n\t\tvar index = _power_array.find.call(this._cells, view);\n\t\tif(this._beforeRemoveView)\n\t\t\tthis._beforeRemoveView(index);\n\t\t_power_array.removeAt.call(this._cells, index);\n\t\tthis._fix_hidden_cells(true);\n\t},\n\t_fix_hidden_cells(resize){\n\t\tthis._hiddencells = 0;\n\t\tfor (let i = 0; i < this._cells.length; i++){\n\t\t\tconst cell = this._cells[i];\n\t\t\tif (cell._settings.hidden || cell.$nospace)\n\t\t\t\tthis._hiddencells++;\n\t\t}\n\n\t\tif (resize)\n\t\t\tthis.resizeChildren(true);\n\t},\n\t_replace:function(new_view,target_id){\n\t\tif (isUndefined(target_id)){\n\t\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\t\tthis._cells[i].destructor();\n\t\t\tthis._collection = new_view;\n\t\t\tthis._parse_cells();\n\t\t} else {\n\t\t\tvar source;\n\t\t\tif (typeof target_id == \"number\"){\n\t\t\t\tif (target_id<0 || target_id > this._cells.length)\n\t\t\t\t\ttarget_id = this._cells.length;\n\t\t\t\t_power_array.insertAt.call(this._cells, new_view, target_id);\n\t\t\t\tif (!new_view._settings.hidden)\n\t\t\t\t\tthis._insertBeforeView(new_view, this._cells[target_id]);\n\t\t\t} else {\n\t\t\t\tsource = $$(target_id);\n\t\t\t\ttarget_id = _power_array.find.call(this._cells, source);\n\t\t\t\tassert(target_id!=-1, \"Attempt to replace the non-existing view\");\n\t\t\t\tif (!new_view._settings.hidden)\n\t\t\t\t\tthis._insertBeforeView(new_view, source);\n\t\t\t\tsource.destructor();\t\n\t\t\t\tthis._cells[target_id] = new_view;\n\t\t\t}\n\n\t\t\tif (!this._vertical_orientation)\n\t\t\t\tthis._fix_vertical_layout(new_view);\n\t\t}\n\t\tthis._fix_hidden_cells(true);\n\n\t\tvar form = this.elements ? this : this.getFormView();\n\t\tif (form && !this._fill_data) form._recollect_elements();\n\n\t\tcallEvent(\"onReconstruct\",[this]);\n\t},\n\t_fix_vertical_layout:function(cell){\n\t\tcell._viewobj.style.display = \"inline-block\";\n\t\tcell._viewobj.style.verticalAlign = \"top\";\n\t},\n\taddView:function(view, index){\n\t\tif (isUndefined(index))\n\t\t\tindex = this._cells.length;\n\t\tvar top = this.$$ ? this : this.getTopParentView();\n\t\t\n\t\tstate._parent_cell = this;\n\t\tvar newui = (top && top.ui) ? top.ui(view, this, index) : ui(view, this, index);\n\t\tstate._parent_cell = null;\n\n\t\treturn newui._settings.id;\n\t},\n\tremoveView:function(id){\n\t\tvar view;\n\t\tif (typeof id != \"object\")\n\t\t\tview = $$(id) || (this.$$ ? this.$$(id) : null);\n\t\telse\n\t\t\tview = id;\n\n\t\tvar target = _power_array.find.call(this._cells, view);\n\t\tif (target >= 0){\n\t\t\tif (this._beforeRemoveView)\n\t\t\t\tthis._beforeRemoveView(target, view);\n\n\t\t\tvar form = this.elements ? this : this.getFormView();\n\n\t\t\tthis._cells.splice(target, 1);\n\t\t\tif (form)\n\t\t\t\t_each(view, function(sub){\n\t\t\t\t\tif (sub.name)\n\t\t\t\t\t\tdelete form.getCleanValues()[sub.config.name];\n\t\t\t\t}, form, true);\t\t\t\t\n\n\t\t\t\t\n\t\t\tview.destructor();\n\t\t\tthis._fix_hidden_cells(true);\n\t\t\t\n\t\t\tif (form)\n\t\t\t\tform._recollect_elements();\n\t\t} else\n\t\t\tassert(false, \"Attemp to remove not existing view: \"+id);\n\n\t\tcallEvent(\"onReconstruct\",[this]);\n\t},\n\treconstruct:function(){\n\t\tthis._hiddencells = 0;\n\t\tthis._replace(this._collection);\n\t},\n\t_hide:function(obj, settings, silent){\n\t\tif (obj._settings.hidden) return;\n\t\tobj._settings.hidden = true;\n\t\tremove(obj._viewobj);\n\t\tthis._hiddencells++;\n\t\tif (!silent && !state._ui_creation)\n\t\t\tthis.resizeChildren(true);\t\n\t},\n\t_signal_hidden_cells:function(view){\n\t\tif (view.callEvent)\n\t\t\tview.callEvent(\"onViewShow\",[]);\n\t},\n\tresizeChildren:function(){\n\t\tif (state._freeze_resize) return;\n\n\t\tif (this._layout_sizes){\n\t\t\tvar parent = this.getParentView();\n\t\t\tif (parent){\n\t\t\t\tif (parent.resizeChildren)\n\t\t\t\t\treturn parent.resizeChildren();\n\t\t\t\telse\n\t\t\t\t\treturn parent.resize();\n\t\t\t}\n\t\t\t\t\n\t\t\tvar sizes = this.$getSize(0,0);\n\n\t\t\tvar x,y,nx,ny;\n\t\t\tnx = x = this._layout_sizes[0] || 0;\n\t\t\tny = y = this._layout_sizes[1] || 0;\n\n\t\t\t//for auto-fill content, use adjust strategy\n\t\t\tif ((sizes[1]>=100000 || sizes[3] >= 100000) && this._viewobj.parentNode){\n\t\t\t\t//in hidden container adjust doesn't work, so fallback to last known size\n\t\t\t\t//also, ensure that min-size is not violated\n\t\t\t\tnx = x = Math.max(sizes[0], (this._settings.width || this._viewobj.parentNode.offsetWidth || x || 0));\n\t\t\t\tny = y = Math.max(sizes[2], (this._settings.height || this._viewobj.parentNode.offsetHeight || y || 0));\n\t\t\t}\n\t\t\t\n\t\t\tif (!parent){\n\t\t\t\t//minWidth\n\t\t\t\tif (sizes[0]>x) nx = sizes[0];\n\t\t\t\t//minHeight\n\t\t\t\tif (sizes[2]>y) ny = sizes[2];\n\n\t\t\t\tvar fullscreen = (this._viewobj.parentNode == document.body) && !this.setPosition;\n\t\t\t\t//maxWidth rule\n\t\t\t\tif (!fullscreen && x>sizes[1]) nx = sizes[1];\n\t\t\t\t//maxHeight rule\n\t\t\t\tif (!fullscreen && y>sizes[3]) ny = sizes[3];\n\n\t\t\t\tthis.$setSize(nx,ny);\n\t\t\t} else\n\t\t\t\tthis._set_child_size(x,y);\n\n\t\t\tif (state._responsive_exception){\n\t\t\t\tstate._responsive_exception = false;\n\t\t\t\tthis.resizeChildren();\n\t\t\t}\n\n\t\t\tcallEvent(\"onResize\",[]);\n\t\t}\n\t},\n\tgetChildViews:function(){\n\t\treturn this._cells;\n\t},\n\tindex:function(obj){\n\t\tif (obj._settings)\n\t\t\tobj = obj._settings.id;\n\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\tif (this._cells[i]._settings.id == obj)\n\t\t\t\treturn i;\n\t\treturn -1;\n\t},\n\t_insertBeforeView:function(view, before){\n\t\tif (before){\n\t\t\tif (before._settings.hidden || view === before){\n\t\t\t\t//index of sibling cell, next to which new item will appear\n\t\t\t\tvar index = this.index(before)+1;\n\t\t\t\t//locate nearest visible cell\n\t\t\t\twhile (this._cells[index] && this._cells[index]._settings.hidden) index++;\n\t\t\t\tbefore = this._cells[index] ? this._cells[index]._viewobj : null;\n\t\t\t} else {\n\t\t\t\tbefore = before._viewobj;\n\t\t\t}\n\t\t}\n\t\tinsertBefore(view._viewobj, before, (this._dataobj||this._viewobj));\n\t},\n\t_show:function(obj, settings, silent){\n\t\tif (!obj._settings.hidden) return;\n\t\tthis._insertBeforeView(obj, obj);\n\t\tobj._settings.hidden = false;\n\n\t\tthis._hiddencells--;\n\n\t\tif (!silent){\n\t\t\tthis.resizeChildren(true);\n\t\t\tif (obj.refresh)\n\t\t\t\tobj.refresh();\n\t\t}\n\n\t\tif (obj.callEvent){\n\t\t\tobj.callEvent(\"onViewShow\", []);\n\t\t\t_each(obj, this._signal_hidden_cells);\n\t\t}\n\t},\n\tshowBatch:function(name, mode){\n\t\tvar preserve = typeof mode != \"undefined\";\n\t\tmode = mode !== false;\n\n\t\tif (!preserve){\n\t\t\tif (this._settings.visibleBatch == name ) return;\n\t\t\tthis._settings.visibleBatch = name;\n\t\t} else \n\t\t\tthis._settings.visibleBatch = \"\";\n\n\t\tvar show = [];\n\t\tfor (let i=0; i < this._cells.length; i++){\n\t\t\tif (!this._cells[i]._settings.batch && !this._cells[i]._settings.hidden) \n\t\t\t\tshow.push(this._cells[i]);\n\t\t\telse if (this._cells[i]._settings.batch == name){\n\t\t\t\tif (mode)\n\t\t\t\t\tshow.push(this._cells[i]);\n\t\t\t\telse\n\t\t\t\t\tthis._hide(this._cells[i], null, true);\n\t\t\t} else if (!preserve)\n\t\t\t\tthis._hide(this._cells[i], null, true);\n\t\t}\n\n\t\tfor (let i=0; i < show.length; i++){\n\t\t\tthis._show(show[i], null, true);\n\t\t\tshow[i]._render_hidden_views();\n\t\t}\n\t\t\t\n\t\tthis.resizeChildren(true);\n\t},\n\t_parse_cells:function(collection){\n\t\tthis._cells=[];\n\n\t\tassert(collection,this.name+\" was incorrectly defined. <br><br> You have missed rows|cols|cells|elements collection\"); \n\t\tfor (var i=0; i<collection.length; i++){\n\t\t\tstate._parent_cell = this;\n\t\t\tif (!collection[i]._inner)\n\t\t\t\tcollection[i].borderless = true;\n\n\t\t\tthis._cells[i]=ui._view(collection[i], this);\n\t\t\tif (!this._vertical_orientation)\n\t\t\t\tthis._fix_vertical_layout(this._cells[i]);\n\t\t\t\n\t\t\tif (this._settings.visibleBatch && this._settings.visibleBatch != this._cells[i]._settings.batch && this._cells[i]._settings.batch){\n\t\t\t\tthis._cells[i]._settings.hidden = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (!this._cells[i]._settings.hidden){\n\t\t\t\t(this._dataobj||this._contentobj).appendChild(this._cells[i]._viewobj);\n\t\t\t}\n\t\t}\n\n\t\tthis._fix_hidden_cells();\n\t\tif (this._parse_cells_ext_end)\n\t\t\tthis._parse_cells_ext_end(collection);\t\n\t},\n\t_fix_container_borders:function(style, inner){\n\t\tif (inner.top) \n\t\t\tstyle.borderTopWidth=\"0px\";\n\t\tif (inner.left) \n\t\t\tstyle.borderLeftWidth=\"0px\";\n\t\tif (inner.right) \n\t\t\tstyle.borderRightWidth=\"0px\";\n\t\tif (inner.bottom) \n\t\t\tstyle.borderBottomWidth=\"0px\";\n\t},\n\t_bubble_size:function(prop, size, vertical){\n\t\tif (this._vertical_orientation != vertical)\n\t\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\t\tthis._cells[i]._settings[prop] = size;\n\t\t\t\tif (this._cells[i]._bubble_size)\n\t\t\t\t\tthis._cells[i]._bubble_size(prop, size, vertical);\n\t\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tif (DEBUG) debug_size_box_start(this, true);\n\t\tvar minWidth = 0; \n\t\tvar maxWidth = 100000;\n\t\tvar maxHeight = 100000;\n\t\tvar minHeight = 0;\n\t\tif (this._vertical_orientation) maxHeight=0; else maxWidth = 0;\n\t\t\n\t\tvar fixed = 0;\n\t\tvar fixed_count = 0;\n\t\tvar gravity = 0;\n\t\tthis._sizes=[];\n\t\tlet hiddenCount = 0;\n\n\t\tfor (var i=0; i < this._cells.length; i++) {\n\t\t\t//ignore hidden cells\n\t\t\tif(this._cells[i]._settings.hidden){\n\t\t\t\thiddenCount++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar sizes = this._sizes[i] = this._cells[i].$getSize(0,0);\n\n\t\t\tif(this._cells[i]._hiddenByCells)\n\t\t\t\thiddenCount++;\n\n\t\t\tif (this._cells[i].$nospace){\n\t\t\t\tfixed_count++;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (this._vertical_orientation){\n\t\t\t\t//take max minSize value\n\t\t\t\tif (sizes[0]>minWidth) minWidth = sizes[0];\n\t\t\t\t//take min maxSize value\n\t\t\t\tif (sizes[1]<maxWidth) maxWidth = sizes[1];\n\n\t\t\t\tminHeight += sizes[2];\n\t\t\t\tmaxHeight += sizes[3];\n\n\t\t\t\tif (sizes[2] == sizes[3] && sizes[2] != -1){ fixed+=sizes[2]; fixed_count++; }\n\t\t\t\telse gravity += sizes[4];\n\t\t\t} else {\n\t\t\t\t//take max minSize value\n\t\t\t\tif (sizes[2]>minHeight) minHeight = sizes[2];\n\t\t\t\t//take min maxSize value\n\t\t\t\tif (sizes[3]<maxHeight) maxHeight = sizes[3];\n\n\t\t\t\tminWidth += sizes[0];\n\t\t\t\tmaxWidth += sizes[1];\n\n\t\t\t\tif (sizes[0] == sizes[1] && sizes[0] != -1){ fixed+=sizes[0]; fixed_count++; }\n\t\t\t\telse gravity += sizes[4];\n\t\t\t}\n\t\t}\n\n\t\tif(hiddenCount == this._cells.length){\n\t\t\tthis._hiddenByCells = true;\n\t\t\tconst pView = this.getParentView();\n\t\t\tif(pView && pView._collection){\n\t\t\t\tif (pView._vertical_orientation){\n\t\t\t\t\tmaxHeight = 0;\n\t\t\t\t\tmaxWidth = 100000;\n\t\t\t\t\tdy = 0;\n\t\t\t\t}else{\n\t\t\t\t\tmaxHeight = 100000;\n\t\t\t\t\tmaxWidth = 0;\n\t\t\t\t\tdx = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tdelete this._hiddenByCells;\n\n\t\tif (minHeight>maxHeight)\n\t\t\tmaxHeight = minHeight;\n\t\tif (minWidth>maxWidth)\n\t\t\tmaxWidth = minWidth;\n\n\t\tthis._master_size = [fixed, this._cells.length - fixed_count, gravity];\n\t\tthis._desired_size = [minWidth+dx, minHeight+dy];\n\n\t\t//get layout sizes\n\t\tvar self_size = base.api.$getSize.call(this, 0, 0);\n\t\t//use child settings if layout's one was not defined\n\t\tif (self_size[1] >= 100000) self_size[1]=0;\n\t\tif (self_size[3] >= 100000) self_size[3]=0;\n\n\t\tself_size[0] = (self_size[0] || minWidth ) +dx;\n\t\tself_size[1] = Math.max(self_size[0], (self_size[1] || maxWidth ) +dx);\n\t\tself_size[2] = (self_size[2] || minHeight) +dy;\n\t\tself_size[3] = Math.max(self_size[2], (self_size[3] || maxHeight) +dy);\n\n\t\tif (DEBUG) debug_size_box_end(this, self_size);\n\n\t\tif (!this._vertical_orientation && this._settings.responsive)\n\t\t\tself_size[0] = 0;\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tthis._layout_sizes = [x,y];\n\t\tif (DEBUG) debug_size_box_start(this);\n\n\t\tbase.api.$setSize.call(this,x,y);\n\t\tthis._set_child_size(x,y);\n\n\t\tif (DEBUG) debug_size_box_end(this, [x,y]);\n\t},\n\t_set_child_size_a:function(sizes, min, max){\n\t\tmin = sizes[min]; max = sizes[max];\n\t\tvar height = min;\n\n\t\tif (min != max){\n\t\t\tvar ps = this._set_size_delta * sizes[4]/this._set_size_gravity;\n\t\t\tif (ps < min){\n\t\t\t\theight = min;\n\t\t\t\tthis._set_size_gravity -= sizes[4]; \n\t\t\t\tthis._set_size_delta -= height;\n\t\t\t} else  if (ps > max){\n\t\t\t\theight = max;\n\t\t\t\tthis._set_size_gravity -= sizes[4]; \n\t\t\t\tthis._set_size_delta -= height;\n\t\t\t} else {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\treturn height;\n\t},\n\t_responsive_hide:function(cell, mode){\n\t\tvar target =  $$(mode);\n\n\t\tif (target === \"hide\" || !target){\n\t\t\tcell.hide();\n\t\t\tcell._responsive_marker = \"hide\";\n\t\t} else{\n\t\t\t//for SideBar in Webix 1.9\n\t\t\tif (!target)\n\t\t\t\ttarget = ui({ view:\"popup\", body:[{}]});\n\n\t\t\tcell._responsive_width = cell._settings.width;\n\t\t\tcell._responsive_height = cell._settings.height;\n\t\t\tcell._responsive_marker = target._settings.id;\n\t\t\tcell._settings.width = 0;\n\t\t\tif (!cell._settings.height)\n\t\t\t\tcell._settings.autoheight = true;\n\n\t\t\tui(cell, target, this._responsive.length);\n\t\t}\n\n\t\tthis._responsive.push(cell);\n\t},\n\t_responsive_show:function(cell){\n\t\tvar target = cell._responsive_marker;\n\t\tcell._responsive_marker = 0;\n\n\t\tif (target === \"hide\" || !target){\n\t\t\tcell.show();\n\t\t} else {\n\t\t\tcell._settings.width = cell._responsive_width;\n\t\t\tcell._settings.height = cell._responsive_height;\n\t\t\tdelete cell._settings.autoheight;\n\n\t\t\tvar index = 0;\n\t\t\twhile (this._cells[index] && this._cells[index]._settings.responsiveCell === false) index++;\n\t\t\tui(cell, this, index);\n\t\t}\n\t\tthis._responsive.pop();\n\t},\n\t_responsive_cells:function(x){\n\t\tstate._responsive_tinkery = true;\n\t\tif (x + this._padding.left + this._padding.right + this._margin * (this._cells.length-1)< this._desired_size[0]){\n\t\t\tvar max = this._cells.length - 1;\n\t\t\tfor (var i = 0; i < max; i++){\n\t\t\t\tlet cell = this._cells[i];\n\t\t\t\tif (!cell._responsive_marker){\n\t\t\t\t\tif (cell._settings.responsiveCell !== false){\n\t\t\t\t\t\tthis._responsive_hide(cell, this._settings.responsive);\n\t\t\t\t\t\tcallEvent(\"onResponsiveHide\", [cell._settings.id]);\n\t\t\t\t\t\tstate._responsive_exception = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmax = this._cells.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else  if (this._responsive.length){\n\t\t\tlet cell = this._responsive[this._responsive.length-1];\n\t\t\tvar dx = cell._responsive_marker == \"hide\" ? 0 : cell._responsive_width;\n\t\t\tvar px = cell.$getSize(dx,0);\n\t\t\tif (px[0] + this._desired_size[0] + this._margin + 20 <= x ){\n\t\t\t\tthis._responsive_show(cell);\n\t\t\t\tcallEvent(\"onResponsiveShow\", [cell._settings.id]);\n\t\t\t\tstate._responsive_exception = true;\n\t\t\t}\n\t\t}\n\n\t\tstate._responsive_tinkery = false;\n\t},\n\t_set_child_size:function(x,y){ \n\t\tstate._child_sizing_active = (state._child_sizing_active||0)+1;\n\n\t\tif (!this._vertical_orientation && this._settings.responsive)\n\t\t\tthis._responsive_cells(x,y);\n\n\n\t\tthis._set_size_delta = (this._vertical_orientation?y:x) - this._master_size[0];\n\t\tthis._set_size_gravity = this._master_size[2];\n\t\tlet width = x; let height = y;\n\n\t\tvar auto = [];\n\t\tfor (let i=0; i < this._cells.length; i++){\n\t\t\t//ignore hidden cells\n\t\t\tif (this._cells[i]._settings.hidden || !this._sizes[i])\n\t\t\t\tcontinue;\n\n\t\t\tlet sizes = this._sizes[i];\n\n\t\t\tif (this._vertical_orientation){\n\t\t\t\theight = this._set_child_size_a(sizes,2,3);\n\t\t\t\tif (height < 0)\t{ auto.push({oldIndex:i, view:this._cells[i]}); continue; }\n\t\t\t} else {\n\t\t\t\twidth = this._set_child_size_a(sizes,0,1);\n\t\t\t\tif (width < 0)\t{ auto.push({oldIndex:i, view:this._cells[i]}); continue; }\n\t\t\t}\n\t\t\tthis._cells[i].$setSize(width,height);\n\t\t}\n\n\t\tfor (let i = 0; i < auto.length; i++){\n\t\t\tvar index = auto[i].oldIndex;\n\t\t\tlet sizes = this._sizes[index];\n\t\t\tvar dx = Math.round(this._set_size_delta * sizes[4]/this._set_size_gravity);\n\t\t\tthis._set_size_delta -= dx; this._set_size_gravity -= sizes[4];\n\t\t\tif (this._vertical_orientation)\n\t\t\t\theight = dx;\n\t\t\telse {\n\t\t\t\twidth = dx;\n\t\t\t}\n\n\t\t\tauto[i].view.$setSize(width,height);\n\t\t}\n\n\t\tstate._child_sizing_active -= 1;\n\t},\n\t_next:function(obj, mode){\n\t\tvar index = this.index(obj);\n\t\tif (index == -1) return null;\n\t\treturn this._cells[index+mode];\n\t}, \n\t_first:function(){\n\t\treturn this._cells[0];\n\t}\n};\n\nconst view = protoUI(api, EventSystem, base.view);\nexport default { api, view };","import {protoUI} from \"../ui/core\";\nimport state from \"../core/state\";\nimport {$active} from \"../webix/skin\";\n\nimport {clone, extend} from \"../webix/helpers\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\n\nimport base from \"./baselayout\";\nimport baseview from \"./baseview\";\nimport viewA from \"./view\";\n\nconst api = {\n\tname:\"layout\",\n\t$init:function(){\n\t\tthis._hiddencells = 0;\n\t},\n\tdefaults:{\n\t\ttype:\"line\"\n\t},\n\t_parse_cells:function(){\n\t\tif (this._parse_cells_ext)\n\t\t\tcollection = this._parse_cells_ext(collection);\n\n\t\tif (!this._parse_once){\n\t\t\tthis._viewobj.className += \" webix_layout_\"+(this._settings.type||\"\");\n\t\t\tthis._parse_once = 1;\n\t\t}\n\n\t\tif (this._settings.margin !== undefined)\n\t\t\tthis._margin = this._settings.margin;\n\n\t\tif (this._settings.padding !== undefined && typeof this._settings.padding !== \"object\" )\n\t\t\tthis._padding.left = this._padding.right = this._padding.top = this._padding.bottom = this._settings.padding;\n\t\tif (this._settings.paddingX !== undefined)\n\t\t\tthis._padding.left = this._padding.right = this._settings.paddingX;\n\t\tif (this._settings.paddingY !== undefined)\n\t\t\tthis._padding.top = this._padding.bottom = this._settings.paddingY;\n\t\tif (typeof this._settings.padding === \"object\")\n\t\t\textend(this._padding, this._settings.padding, true);\n\n\t\tif (this._padding.left || this._padding.right || this._padding.top || this._padding.bottom)\n\t\t\tthis._padding.defined = true;\n\n\t\t//if layout has paddings we need to set the visible border \n\t\tif (this._hasBorders() && !this._settings.borderless){\n\t\t\tthis._contentobj.style.borderWidth=\"1px\";\n\t\t\t//if layout has border - normal bordering rules are applied\n\t\t\tthis._render_borders = true;\n\t\t}\n\t\n\t\t\n\t\tvar collection = this._collection;\n\t\n\t\tif (this._settings.borderless)\n\t\t\tthis._settings._inner = { top:true, left:true, right:true, bottom:true};\n\n\t\tthis._beforeResetBorders(collection);\n\t\tbase.api._parse_cells.call(this, collection);\n\t\tthis._afterResetBorders(collection);\n\t},\n\t$getSize:function(dx, dy){\n\t\tdx=dx||0; dy=dy||0;\n\n\t\tvar correction = this._margin*(this._cells.length-this._hiddencells-1);\n\t\tif (this._render_borders || this._hasBorders()){\n\t\t\tvar _borders = this._settings._inner;\n\t\t\tif (_borders){\n\t\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t\t}\n\t\t}\n\n\t\tif (!this._settings.height)\n\t\t\tdy += this._padding.top + this._padding.bottom + (this._vertical_orientation ? correction : 0);\n\n\t\tif (!this._settings.width)\n\t\t\tdx += this._padding.left + this._padding.right + (this._vertical_orientation ? 0 : correction);\n\t\t\t\t\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t$setSize:function(x,y){\n\t\tthis._layout_sizes = [x,y];\n\t\tif (DEBUG) debug_size_box_start(this);\n\n\t\tif (this._hasBorders()||this._render_borders)\n\t\t\tviewA.api.$setSize.call(this,x,y);\n\t\telse\t\n\t\t\tbaseview.api.$setSize.call(this,x,y);\n\n\t\t//form with scroll\n\t\ty = this._content_height;\n\t\tx = this._content_width;\n\n\t\tvar config = this._settings;\n\t\tif (config.scroll){\n\t\t\ty = Math.max(y, this._desired_size[1]);\n\t\t\tx = Math.max(x, this._desired_size[0]);\n\t\t}\n\t\t\n\t\tthis._set_child_size(x, y);\n\n\t\tif (DEBUG) debug_size_box_end(this, [x,y]);\n\t},\n\t_set_child_size:function(x,y){\n\t\tvar correction = this._margin*(this._cells.length-this._hiddencells-1);\n\n\t\ty -= this._padding.top + this._padding.bottom;\n\t\tx -= this._padding.left + this._padding.right;\n\t\tif (this._vertical_orientation)\n\t\t\ty-=correction;\n\t\telse x-=correction;\n\n\t\treturn base.api._set_child_size.call(this, x, y);\n\t},\n\tresizeChildren:function(structure_changed){ \n\t\tif (structure_changed){\n\t\t\tthis._last_size = null; //forces children resize\n\t\t\tvar config = [];\n\t\t\tfor (var i = 0; i < this._cells.length; i++){\n\t\t\t\tvar cell = this._cells[i];\n\t\t\t\tconfig[i] = cell._settings;\n\t\t\t\tvar n = ((cell._layout_sizes && !cell._render_borders) || cell._settings.borderless)?\"0px\":\"1px\";\n\n\t\t\t\tcell._viewobj.style.borderTopWidth=cell._viewobj.style.borderBottomWidth=cell._viewobj.style.borderLeftWidth=cell._viewobj.style.borderRightWidth=n;\n\t\t\t}\n\t\t\t\n\t\t\tthis._beforeResetBorders(config);\n\t\t\tfor (let i=0; i<config.length; i++)\n\t\t\t\tif (config[i].borderless && this._cells[i]._set_inner)\n\t\t\t\t\tthis._cells[i]._set_inner(config[i]);\n\t\t\tthis._afterResetBorders(this._cells);\n\t\t}\n\n\t\tif (state._responsive_tinkery) return;\n\t\tbase.api.resizeChildren.call(this);\n\t},\n\t_hasBorders:function(){\n\t\treturn this._padding.defined && this._margin>0 && !this._cleanlayout;\n\t},\n\t_beforeResetBorders:function(collection){\n\t\tif (this._hasBorders() && (!this._settings.borderless || this._settings.type == \"space\")){\n\t\t\tfor (let i=0; i < collection.length; i++){\n\t\t\t\tif (!collection[i]._inner || !collection[i].borderless)\n\t\t\t\t\tcollection[i]._inner={ top:false, left:false, right:false, bottom:false};\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=0; i < collection.length; i++)\n\t\t\t\tcollection[i]._inner=clone(this._settings._inner);\n\t\t\tvar mode = false;\n\t\t\tif (this._cleanlayout)\n\t\t\t\tmode = true;\n\t\t\t\t\n\t\t\tvar maxlength = collection.length;\t\t\t\t\n\t\t\tif (this._vertical_orientation){\n\t\t\t\tfor (let i=1; i < maxlength-1; i++)\n\t\t\t\t\tcollection[i]._inner.top = collection[i]._inner.bottom = mode;\n\t\t\t\tif (maxlength>1){\n\t\t\t\t\tif (this._settings.type!=\"head\")\n\t\t\t\t\t\tcollection[0]._inner.bottom = mode;\n\n\t\t\t\t\twhile (collection[maxlength-1].hidden && maxlength>1)\n\t\t\t\t\t\tmaxlength--;\n\t\t\t\t\tif (maxlength>0)\n\t\t\t\t\t\tcollection[maxlength-1]._inner.top = mode;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let i=1; i < maxlength-1; i++)\n\t\t\t\t\tcollection[i]._inner.left = collection[i]._inner.right= mode;\n\t\t\t\tif (maxlength>1){\n\t\t\t\t\tif (this._settings.type!=\"head\")\n\t\t\t\t\t\tcollection[0]._inner.right= mode;\n\t\t\t\t\tcollection[maxlength-1]._inner.left = mode;\n\n\t\t\t\t\twhile (maxlength>1 && collection[maxlength-1].hidden)\n\t\t\t\t\t\tmaxlength--;\n\t\t\t\t\tif (maxlength>0)\n\t\t\t\t\t\tcollection[maxlength-1]._inner.left = mode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t_afterResetBorders:function(collection){\n\t\tvar start = 0; \n\t\tfor (let i=0; i<collection.length; i++){\n\t\t\tvar cell = this._cells[i];\n\n\t\t\tvar s_inner = cell._settings._inner;\n\t\t\tif (cell._settings.hidden && this._cells[i+1]){\n\t\t\t\tvar s_next = this._cells[i+1]._settings._inner;\n\t\t\t\tif (!s_inner.top)\n\t\t\t\t\ts_next.top = false;\n\t\t\t\tif (!s_inner.left)\n\t\t\t\t\ts_next.left = false;\n\n\t\t\t\tif (i==start) start++;\n\t\t\t}\n\t\t\tthis._fix_container_borders(cell._viewobj.style, cell._settings._inner);\n\t\t}\n\n\t\tvar style = this._vertical_orientation?\"marginLeft\":\"marginTop\";\n\t\tvar contrstyle = this._vertical_orientation?\"marginTop\":\"marginLeft\";\n\t\tvar padding = this._vertical_orientation?this._padding.left:this._padding.top;\n\t\tvar contrpadding = this._vertical_orientation?this._padding.top:this._padding.left;\n\n\t\t//add top offset to all\n\t\tfor (let i=0; i<collection.length; i++)\n\t\t\tthis._cells[i]._viewobj.style[style] = padding + \"px\";\n\n\t\t//add left offset to first cell\n\t\tif (this._cells.length)\n\t\t\tthis._cells[start]._viewobj.style[contrstyle] = contrpadding + \"px\";\n\n\t\t//add offset between cells\n\t\tfor (var index=start+1; index<collection.length; index++)\n\t\t\tthis._cells[index]._viewobj.style[contrstyle]=this._margin+\"px\";\n\t\t\n\t},\n\ttype_setter:function(value){\n\t\tthis._margin = (typeof this._margin_set[value] !== \"undefined\"? this._margin_set[value]: this._margin_set[\"line\"]);\n\t\tthis._padding.left = this._padding.right = this._padding.top = this._padding.bottom =\n\t\t\t(typeof this._margin_set[value] !== \"undefined\") ? this._padding_set[value] : this._padding_set[\"line\"];\n\t\tthis._cleanlayout = (value==\"material\" || value==\"clean\");\n\t\tif (value == \"material\")\n\t\t\tthis._settings.borderless = true;\n\n\t\treturn value;\n\t},\n\t$skin:function(){\n\t\tthis._margin_set = $active.layoutMargin;\n\t\tthis._padding_set = $active.layoutPadding;\n\t}\n};\n\nconst view = protoUI(api, base.view);\nexport default { api, view };\n\n//not necessary anymore\n//preserving for backward compatibility\nview.call(-1);","import {removeCss, addCss, getTextSize} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {extend, bind, copy, isUndefined} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\n\nimport template from \"../webix/template\";\nimport i18n from \"../webix/i18n\";\nimport wDate from \"../core/date\";\n\nimport layout from \"../views/layout\";\n\nconst api = {\n\tname:\"daterange\",\n\tdefaults:{\n\t\tbutton:false,\n\t\ticons:false,\n\t\tcalendarCount:2,\n\t\tborderless:false\n\t},\n\t$init:function(config){\n\t\tconfig.calendar = config.calendar || {};\n\t\tconfig.value = this.$prepareValue(config.value);\n\t\tdelete config.calendar.type; // other types are not implemented\n\n\t\tthis._viewobj.className += \" webix_daterange\";\n\t\tthis._zoom_level = this._types[config.calendar.type] || 0;\n\n\t\tvar cols = [],\n\t\t\tskinConf = $active.calendar,\n\t\t\tcheight = skinConf && skinConf.height ? skinConf.height : 0,\n\t\t\tcwidth = skinConf && skinConf.width ? skinConf.width : 0,\n\t\t\trheight = cheight||250,\n\t\t\trwidth = cwidth||250,\n\t\t\tcalendar = extend({ view:\"calendar\", width:cwidth, height:cheight }, config.calendar || {}, true),\n\t\t\tcount = config.calendarCount = this._zoom_level === 0 ? (config.calendarCount || this.defaults.calendarCount) : this.defaults.calendarCount,\n\t\t\tbasecss = (calendar.css?calendar.css + \" \":\"\")+\"webix_range_\",\n\t\t\tstart = config.value.start || new Date();\n\n\t\tfor(var i = 0; i<count; i++){\n\t\t\tlet date = wDate.copy(start);\n\t\t\tdate.setDate(1);\n\t\t\tdate = wDate.add(date, this._steps[this._zoom_level]*i, \"month\");\n\n\t\t\textend(calendar, {\n\t\t\t\tevents:bind(this._isInRange, this),\n\t\t\t\tcss:basecss+(count ===1?\"\":(i === 0 ? \"0\" : (i+1 == count ? \"N\" :\"1\"))),\n\t\t\t\tmonthSelect:(i===0 || i+1===count),\n\t\t\t\ttimepicker: this._zoom_level === 0?config.timepicker:false,\n\t\t\t\tborderless:true,\n\t\t\t\tdate\n\t\t\t}, true);\n\n\t\t\tcols.push(copy(calendar));\n\t\t}\n\n\t\tconfig.rows = [\n\t\t\t{ type:\"clean\", cols: cols}\n\t\t];\n\t\tif (config.button || config.icons)\n\t\t\tconfig.rows.push( this._footer_row(config, rwidth*count) );\n\n\t\tconfig.height = isUndefined(config.height) ? rheight+(config.icons || config.button?30:0) : config.height;\n\t\tconfig.width = isUndefined(config.width) ? rwidth*count : config.width;\n\t\tconfig.type = \"line\";\n\t\tthis.$ready.push(this._after_init);\n\n\t\t_event(this.$view, \"keydown\", bind(function(e){\n\t\t\tthis._onKeyPress( e.which || e.keyCode, e);\n\t\t}, this));\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tgetValue:function(format){\n\t\tconst config = this._settings;\n\t\tconst value = copy(config.value);\n\n\t\tif(format){\n\t\t\tfor(let type in value)\n\t\t\t\tvalue[type] = wDate.dateToStr(format)(value[type]);\n\t\t}\n\t\telse if(config.stringResult){\n\t\t\tfor(let type in value)\n\t\t\t\tvalue[type] = i18n.parseFormatStr(value[type]);\n\t\t}\n\n\t\treturn value;\n\t},\n\tsetValue:function(value, config, silent){\n\t\tvalue = this.$prepareValue(value);\n\t\tthis._settings.value = value;\n\n\t\tvar start = value.start || value.end || new Date();\n\n\t\tif(!silent){\n\t\t\tthis._cals[0].showCalendar(value.start);\n\n\t\t\tfor(var i = 1; i<this._cals.length; i++){\n\t\t\t\tthis._cals[i].define(\"date\", start);\n\t\t\t\tthis._changeDateSilent(this._cals[i], 1, i);\n\t\t\t}\n\t\t}\n\t\tthis.callEvent(\"onChange\", [value, config]);\n\t\tthis.refresh();\n\t},\n\trefresh:function(){\n\t\tfor(let i=0; i<this._cals.length; i++){\n\n\t\t\tif(this._cals[i]._zoom_level === this._zoom_level){\n\t\t\t\tremoveCss(this._cals[i].$view, \"webix_cal_timepicker\");\n\t\t\t\tremoveCss(this._cals[i].$view, \"webix_range_timepicker\");\n\n\t\t\t\tconst rel = this._related_date(this._cals[i].getVisibleDate());\n\t\t\t\tif(rel.start || rel.end){\n\t\t\t\t\tthis._cals[i].define(\"date\", rel.start||rel.end);\n\t\t\t\t\tif(this._settings.timepicker){\n\t\t\t\t\t\tconst css = \"webix_\"+(rel.start&&rel.end?\"range\":\"cal\")+\"_timepicker\";\n\t\t\t\t\t\taddCss(this._cals[i].$view, css);\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\twDate.datePart(this._cals[i]._settings.date);\n\n\t\t\t\tthis._cals[i].refresh();\n\t\t\t}\n\t\t}\n\t},\n\taddToRange:function(date, config){\n\t\tvar value = this._add_date(this._string_to_date(date));\n\t\tthis.setValue(value, config);\n\t},\n\t_icons:[\n\t\t{\n\t\t\ttemplate:function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_today webix_cal_icon'>\"+i18n.calendar.today+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_today\":function(){\n\t\t\t\t\tvar date = new Date();\n\t\t\t\t\tif(!this._settings.timepicker)\n\t\t\t\t\t\tdate = wDate.datePart(date);\n\t\t\t\t\tthis.addToRange(date, \"user\");\n\t\t\t\t\tthis.callEvent(\"onTodaySet\",[this.getValue()]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttemplate:function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_clear webix_cal_icon'>\"+i18n.calendar.clear+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_clear\":function(){\n\t\t\t\t\tthis.setValue(\"\", \"user\");\n\t\t\t\t\tthis.callEvent(\"onDateClear\", []);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\t_icons_template:function(icons){\n\t\tif(!icons)\n\t\t\treturn { width:0};\n\t\telse{\n\t\t\ticons = (typeof icons ==\"object\") ? icons:this._icons; //custom or default \n\t\t\tvar icons_template = { css:\"webix_cal_footer \", borderless:true, template:\"<div class='webix_cal_icons'>\", onClick:{}};\n\n\t\t\tfor(var i = 0; i<icons.length; i++){\n\t\t\t\tif(icons[i].template){\n\t\t\t\t\tvar itemplate = (typeof(icons[i].template) == \"function\"?icons[i].template: template(icons[i].template));\n\t\t\t\t\ticons_template.template += itemplate.call(this);\n\t\t\t\t}\t\n\t\t\t\tif(icons[i].on_click){\n\t\t\t\t\tfor(var k in icons[i].on_click){\n\t\t\t\t\t\ticons_template.onClick[k] = bind(icons[i].on_click[k], this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ticons_template.template += \"</div>\";\n\t\t\ticons_template.width = getTextSize(icons_template.template).width+30;\n\t\t\treturn icons_template;\n\t\t}\n\t},\n\t_footer_row:function(config, width){\n\t\tvar button = { view:\"button\", value:i18n.calendar.done,\n\t\t\tminWidth:100, maxWidth:230, align:\"center\",\n\t\t\tclick:function(){\n\t\t\t\tthis.getParentView().getParentView().hide();\n\t\t\t}};\n\n\t\tvar icons = this._icons_template(config.icons);\n\n\t\tvar row = { css:\"webix_range_footer\", height:30, cols:[\n\t\t\t{ width:icons.width }\n\t\t]};\n\t\tif((config.button || config.icons) && (icons.width*2+button.minWidth) > width)\n\t\t\trow.cols[0].width = 0;\n\n\t\trow.cols.push(config.button ? button : {});\n\t\trow.cols.push(icons);\n\n\t\treturn row;\n\t},\n\t_types:{\n\t\t\"time\":-1,\n\t\t\"month\":1,\n\t\t\"year\":2\n\t},\n\t_steps:{\n\t\t0:1,\n\t\t1:12,\n\t\t2:120\n\t},\n\t$prepareValue:function(value){\n\t\tif(!value) value = { start:null, end:null};\n\n\t\tif(!value.start && !value.end)\n\t\t\tvalue = {start: value};\n\n\t\tvalue.end = this._string_to_date(value.end) || null;\n\t\tvalue.start = this._string_to_date(value.start) || null;\n\n\t\tif((value.end && value.end < value.start) || !value.start)\n\t\t\tvalue.end = [value.start, value.start = value.end][0];\n\t\treturn value;\n\t},\n\t_string_to_date:function(date){\n\t\tif(typeof date == \"string\"){\n\t\t\tdate = i18n.parseFormatDate(date);\n\t\t}\n\t\treturn isNaN(date*1) ? null : date;\n\t},\n\t_isInRange:function(date, isOutside){\n\t\tif (isOutside) return;\n\t\tvar v = this._settings.value,\n\t\t\ts = v.start? wDate.datePart(wDate.copy(v.start)) : null,\n\t\t\te = v.end ? wDate.datePart(wDate.copy(v.end)) : null,\n\t\t\td = wDate.datePart(date),\n\t\t\ttomorrow = wDate.add(d,1,\"day\",true),\n\t\t\tyesterday = wDate.add(d,-1,\"day\",true),\n\t\t\tcss = \"\";\n\n\t\tif(d>=s && e && d<=e){\n\t\t\tcss = \"webix_cal_range\";\n\t\t\tif(wDate.equal(yesterday, s))\n\t\t\t\tcss += \" webix_cal_range_first\";\n\t\t\tif(wDate.equal(tomorrow, e))\n\t\t\t\tcss += \" webix_cal_range_last\";\n\t\t}\n\t\tif(wDate.equal(d, s))\n\t\t\tcss = \"webix_cal_range_start\";\n\t\tif(wDate.equal(d, e))\n\t\t\tcss = \"webix_cal_range_end\";\n\n\t\tvar holiday = wDate.isHoliday(date)||\"\";\n\t\treturn css+\" \"+(holiday?holiday+\" \":\"\");\n\t},\n\t_after_init:function(){\n\t\tvar cals = this._cals = this.getChildViews()[0].getChildViews();\n\t\tvar range = this;\n\t\tvar masterId = this.config.id;\n\n\t\tthis._cals_hash = {};\n\n\t\tfor(var i = 0; i<cals.length; i++){\n\t\t\tcals[i].config.master = masterId;\n\t\t\tthis._cals_hash[cals[i].config.id] = i;\n\n\t\t\t//events\n\t\t\tcals[i].attachEvent(\"onBeforeDateSelect\", function(date){ return range._on_date_select(this, date); });\n\t\t\tcals[i].attachEvent(\"onBeforeZoom\", function(zoom){ return range._before_zoom(this, zoom); });\n\n\t\t\tif(i===0 || i  === cals.length-1){\n\t\t\t\tcals[i].attachEvent(\"onAfterMonthChange\", bind(this._month_change, this));\n\t\t\t\tcals[i].attachEvent(\"onAfterZoom\", function(zoom, oldzoom){ range._after_zoom(this, zoom, oldzoom);});\n\t\t\t}\n\t\t}\n\t\tif(this._settings.timepicker)\n\t\t\tthis.refresh();\n\t},\n\t_before_zoom:function(view, zoom){\n\t\tvar ind = this._getIndexById(view.config.id);\n\n\t\tif(zoom >=0 && ind>0 && ind !== this._cals.length-1)\n\t\t\treturn false;\n\t\tif(zoom ===-1){ //time mode\n\t\t\tvar rel = this._related_date(view.getVisibleDate());\n\t\t\tif(rel.start && rel.end) //both dates are in one calendar\n\t\t\t\tview.define(\"date\", rel[this._time_mode]);\n\t\t}\n\t\treturn true;\n\t},\n\t_month_change:function(now, prev){\n\t\tvar dir = now>prev ? 1: -1;\n\t\tvar start = now>prev ? this._cals[this._cals.length-1] : this._cals[0];\n\t\tvar step = start._zoom_logic[start._zoom_level]._changeStep;\n\n\t\tthis._shift(dir, step, start);\n\t\tthis.refresh();\n\t},\n\t_after_zoom:function(start, zoom, oldzoom){\n\t\tvar step = start._zoom_logic[start._zoom_level]._changeStep;\n\t\tvar ind = this._getIndexById(start.config.id);\n\t\tvar dir = ind === 0 ? 1 :-1;\n\t\tif(!this._cals[ind+dir]) \n\t\t\treturn;\n\n\t\tvar next = this._cals[ind+dir].getVisibleDate();\n\n\t\tif(oldzoom>zoom && zoom >=0){\n\t\t\tvar diff = 0;\n\t\t\tif(zoom === 1){ //year was changed \n\t\t\t\tvar year = next.getFullYear();\n\t\t\t\tif(this._zoom_level || (dir === -1 && next.getMonth() === 11) || (dir ===1 && next.getMonth() === 0))\n\t\t\t\t\tyear = year - dir;\n\t\t\t\tdiff = start._settings.date.getFullYear()-year;\n\t\t\t}\n\t\t\telse if(zoom === 0 ){//month was changed\n\t\t\t\tvar month = next.getMonth()-dir;\n\t\t\t\tif(month === 12 || month ==-1)\n\t\t\t\t\tmonth = (month === -1) ? 11: 0;\n\n\t\t\t\tdiff = start._settings.date.getMonth()-month;\n\t\t\t}\n\t\t\tthis._shift(diff, step, start);\n\t\t\tthis.refresh();\n\t\t}\n\t},\n\t_changeDateSilent:function(view, dir, step){\n\t\tview.blockEvent();\n\t\tif(view._zoom_level>=0)\n\t\t\tview._changeDate(dir, step);\n\t\tview.unblockEvent();\n\t},\n\t_getIndexById:function(id){\n\t\treturn this._cals_hash[id];\n\t},\n\t_shift:function(dir, step, start){\n\t\tfor(var i =0; i<this._cals.length; i++){\n\t\t\tvar next = this._cals[i];\n\t\t\tif(!start || next.config.id !==start.config.id)\n\t\t\t\tthis._changeDateSilent(next, dir, step);\n\t\t}\n\t},\n\t_related_date:function(date){\n\t\tvar v = this._settings.value;\n\t\tvar rel = {};\n\t\tif(v.start && v.start.getYear() === date.getYear() && v.start.getMonth() === date.getMonth())\n\t\t\trel.start = v.start;\n\t\tif(v.end && v.end.getYear() === date.getYear() && v.end.getMonth() === date.getMonth())\n\t\t\trel.end = v.end;\n\t\treturn rel;\n\t},\n\t_set_time:function(date, source){\n\t\tdate.setHours(source.getHours());\n\t\tdate.setMinutes(source.getMinutes());\n\t\tdate.setSeconds(source.getSeconds());\n\t\tdate.setMilliseconds(source.getMilliseconds());\n\t},\n\t_add_date:function(date, ind){\n\t\tvar v = copy(this._settings.value);\n\t\t//year, month\n\t\tif(this._zoom_level !==0 && !isUndefined(ind)){\n\t\t\tvar key = ind?\"end\":\"start\";\n\t\t\tv[key] = date;\n\t\t}\n\t\telse{\n\t\t\tif(v.start && !v.end)\n\t\t\t\tv.end = date;\n\t\t\telse {\n\t\t\t\tv.start = date;\n\t\t\t\tv.end = null;\n\t\t\t}\n\t\t}\n\n\t\treturn v;\n\t},\n\t_on_date_select:function(view, date){\n\t\tif(this.callEvent(\"onBeforeDateSelect\", [date])){\n\t\t\tvar v = this._settings.value;\n\n\t\t\tif(view._zoom_level<0){ //time set\n\t\t\t\tvar rel = copy(this._related_date(date)),\n\t\t\t\t\treldate;\n\n\t\t\t\treldate = (rel.start && rel.end) ? rel[this._time_mode] : rel.start || rel.end;\n\t\t\t\tif(reldate)\n\t\t\t\t\tthis._set_time(reldate, date);\n\n\t\t\t\tview._zoom_level = 0;\n\n\t\t\t\tv = extend(copy(v), rel, true);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tvar vis = view.getVisibleDate();\n\t\t\t\tvar ind = this._getIndexById(view.config.id);\n\n\t\t\t\tif(date.getMonth() !== vis.getMonth() && (ind ===0 || ind === this._cals.length-1)){\n\t\t\t\t\tvar dir = date>vis? 1 : -1;\n\t\t\t\t\tthis._shift(dir, 1);\n\t\t\t\t}\n\t\t\t\tv = this._add_date(date, ind);\n\t\t\t}\n\n\t\t\tif(view._zoom_level !== this._zoom_level)\n\t\t\t\tview.showCalendar(date);\n\n\t\t\tthis.setValue(v, \"user\", true);\n\t\t\tthis.callEvent(\"onAfterDateSelect\", [this.getValue()]);\n\t\t}\n\n\t\treturn false;\n\t}\n};\n\nconst view = protoUI(api,  layout.view);\nexport default {api, view};","import {create, stopEvent, addCss, removeCss, offset} from \"../webix/html\";\nimport template from \"../webix/template\";\nimport {delay, extend} from \"../webix/helpers\";\nimport daterange from \"../views/daterange\";\nimport {ui, $$} from \"../ui/core\";\nimport i18n from \"../webix/i18n\";\n\n\nimport datafilter from \"./datafilter\";\n\ndatafilter.excelFilter = {\n\tgetValue:function(node){\n\t\tconst filter = this._get_filter(node);\n\t\tif (filter)\n\t\t\treturn filter.getValue();\n\t},\n\tsetValue:function(node, value){\n\t\tconst filter = this._get_filter(node);\n\t\tif (filter){\n\t\t\tvalue = value || {};\n\t\t\tfilter.setValue(value);\n\t\t\tthis._mark_column(value, node);\n\t\t}\n\t},\n\t$icon:true,\n\trefresh:function(master, node, config){\n\t\tif (master.$destructed) return;\n\n\t\tconfig.node = node;\n\n\t\tnode.$webix = config.filter;\n\t\tmaster.registerFilter(node, config, this);\n\n\t\tconst popup = $$(config.filter);\n\t\tconst filter = popup.getBody();\n\n\t\tconst data = this._get_data(master, config);\n\n\t\tfilter.clearAll();\n\t\tfilter.parse(data);\n\n\t\tif (config.value){\n\t\t\tthis.setValue(node, config.value);\n\t\t} else\n\t\t\t// unfilter only if we have no value\n\t\t\tconfig.compare = function(){ return true; };\n\n\t\tnode.onclick = (e) => {\n\t\t\tconst target = e.target.className;\n\t\t\tif (target.indexOf(\"webix_excel_filter\") !== -1 && !popup.isVisible())\n\t\t\t\tpopup.show(this._get_position(node, popup));\n\t\t};\n\t},\n\trender:function(master, config){\n\t\tif (!config.filter){\n\t\t\tif (config.template)\n\t\t\t\tconfig.template = template(config.template);\n\n\t\t\tconst filterConfig = extend(config.filterConfig||{}, {\n\t\t\t\tview:\"filter\", mode:config.mode, field:\"value\",\n\t\t\t\ttemplate: function(obj, type){\n\t\t\t\t\tlet value = obj[\"value\"];\n\n\t\t\t\t\tif (value === undefined || value === null) value = \"\";\n\t\t\t\t\tif (config.format) value = config.format(value);\n\t\t\t\t\tif (config.template) value = config.template(obj, type, value);\n\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t\tconst suggest = ui({ view:\"popup\", body:filterConfig });\n\t\t\tconst filter = suggest.getBody();\n\t\t\tconst collection = master.getColumnConfig(config.columnId).collection;\n\t\t\tfilter.attachEvent(\"onChange\", () => {\n\t\t\t\tconst handler = filter.getFilterFunction();\n\t\t\t\tconfig.compare = function(val, f, obj){\n\t\t\t\t\tlet value = obj[config.columnId];\n\t\t\t\t\tif(collection){\n\t\t\t\t\t\tconst option = collection.getItem(value);\n\t\t\t\t\t\tif(option)\n\t\t\t\t\t\t\tvalue = option.value;\n\t\t\t\t\t}\n\t\t\t\t\treturn handler({ value });\n\t\t\t\t};\n\t\t\t\tmaster.filterByAll();\n\n\t\t\t\t// change state after filtering\n\t\t\t\tif (config.value)\n\t\t\t\t\tthis._mark_column(config.value, config.node);\n\t\t\t});\n\t\t\tmaster.attachEvent(\"onScrollX\", () => suggest.hide());\n\n\t\t\tconfig.originText = config.text || \"\";\n\t\t\tconfig.filter = suggest._settings.id;\n\n\t\t\tmaster._destroy_with_me.push(suggest);\n\t\t}\n\t\tconfig.css = (config.css||\"\") + \" webix_ss_excel_filter\";\n\t\treturn \"<span class='webix_excel_filter webix_icon wxi-filter'></span>\" + config.originText;\n\t},\n\t_get_position:function(node, popup){\n\t\tconst off = offset(node);\n\t\treturn {\n\t\t\tx: (off.x + off.width - popup.$width),\n\t\t\ty: (off.y + off.height)\n\t\t};\n\t},\n\t_mark_column:function(value, node){\n\t\tconst f = value.condition && value.condition.filter;\n\t\tif (value.includes || (f && (f.start !== f.end || f.end !== null)))\n\t\t\treturn addCss(node, \"webix_ss_filter_active\", true);\n\t\tremoveCss(node, \"webix_ss_filter_active\");\n\t},\n\t_get_filter:function(node){\n\t\tconst popup = $$(node.$webix);\n\t\treturn popup ? popup.getBody() : null;\n\t},\n\t_get_data:function(master, config){\n\t\tlet data;\n\n\t\tif (config.options){\n\t\t\tdata = master._collectValues.call(config.options, \"id\", \"value\");\n\t\t} else\n\t\t\tdata = master.collectValues(config.columnId, config.collect);\n\n\t\treturn data;\n\t}\n};\n\ndatafilter.serverExcelFilter = extend({\n\t$server:true\n}, datafilter.excelFilter);\n\ndatafilter.richSelectFilter = {\n\tgetInputNode:function(node){\n\t\treturn $$(node.$webix) || null;\n\t},\n\tgetValue:function(node, text){\n\t\tvar ui = this.getInputNode(node);\n\t\tif (text && ui && ui.getText)\n\t\t\treturn ui.getText();\n\n\t\treturn ui?ui.getValue():\"\";\n\t},\n\tsetValue:function(node, value){\n\t\tconst ui = this.getInputNode(node);\n\t\treturn ui ? ui.setValue(value) : \"\";\n\t},\n\tcompare:function(a,b){\n\t\treturn a == b;\n\t},\n\trefresh:function(master, node, value){\n\t\tif (master.$destructed) return;\n\n\t\tlet select = $$(value.richselect);\n\n\t\t//IE11 can destory the content of richselect, so recreating\n\t\tif (!select.$view.parentNode) {\n\t\t\tlet d = create(\"div\", { \"class\" : \"webix_richfilter\" });\n\t\t\td.appendChild(select.$view);\n\t\t}\n\n\t\tnode.$webix = value.richselect;\n\n\t\tvalue.compare = value.compare || this.compare;\n\t\tvalue.prepare = value.prepare || this.prepare;\n\t\tmaster.registerFilter(node, value, this);\n\n\t\tconst data = datafilter._get_data(master, value);\n\t\tlet list = select.getPopup().getList();\n\n\t\t//reattaching node back to master container\n\t\tnode.appendChild(select.$view.parentNode);\n\n\t\t//load data in list, must be after reattaching, as callback of parse can try to operate with innerHTML\n\t\tif (list.parse){\n\t\t\tlist.clearAll();\n\t\t\tlist.parse(data);\n\n\t\t\tif ((!this.$noEmptyOption && value.emptyOption !== false) || value.emptyOption){\n\t\t\t\tlet emptyOption = { id:\"$webix_empty\", value: value.emptyOption||\"\", $empty: true };\n\t\t\t\tlist.add(emptyOption,0);\n\t\t\t}\n\t\t}\n\n\t\t//repaint the filter control\n\t\tselect.render();\n\t\t\n\t\t//set actual value for the filter\n\t\tif (value.value) this.setValue(node, value.value);\n\n\t\t//adjust sizes after full rendering\n\t\tdelay(select.resize, select);\n\t},\n\trender:function(master, config){\n\t\tif (!config.richselect){\n\t\t\tvar d = create(\"div\", { \"class\" : \"webix_richfilter\" });\n\n\t\t\tvar richconfig = {\n\t\t\t\tcontainer:d,\n\t\t\t\tview:this.inputtype,\n\t\t\t\toptions:[]\n\t\t\t};\n\n\t\t\tvar inputConfig = extend( this.inputConfig||{}, config.inputConfig||{}, true );\n\t\t\textend(richconfig, inputConfig);\n\n\t\t\tif (config.separator)\n\t\t\t\trichconfig.separator = config.separator;\n\t\t\tif (config.suggest)\n\t\t\t\trichconfig.suggest = config.suggest;\n\n\t\t\tvar richselect = ui(richconfig);\n\t\t\trichselect.attachEvent(\"onChange\", function(){\n\t\t\t\tmaster.filterByAll();\n\t\t\t});\n\t\t\t\n\t\t\tconfig.richselect = richselect._settings.id;\n\t\t\tmaster._destroy_with_me.push(richselect);\n\t\t}\n\n\t\tconfig.css = (config.css||\"\") + \" webix_div_filter\";\n\t\treturn \" \";\n\t},\n\tinputtype:\"richselect\"\n};\n\ndatafilter.serverRichSelectFilter = extend({\n\t$server:true\n}, datafilter.richSelectFilter);\n\ndatafilter.multiSelectFilter = extend({\n\t$noEmptyOption: true,\n\tinputtype:\"multiselect\",\n\tprepare:function(value, filter){\n\t\tif (!value) return value;\n\t\tvar hash = {};\n\t\tvar parts = value.toString().split(filter.separator || \",\");\n\t\tfor (var i = 0; i < parts.length; i++)\n\t\t\thash[parts[i]] = 1;\n\t\treturn hash;\n\t},\n\tcompare:function(a,b){\n\t\treturn !b || b[a];\n\t}\n}, datafilter.richSelectFilter);\n\ndatafilter.serverMultiSelectFilter = extend({\n\t$server:true,\n\t_on_change:function(){\n\t\tvar id = this._comp_id;\n\t\t$$(id).filterByAll();\n\t}\n}, datafilter.multiSelectFilter);\n\ndatafilter.multiComboFilter = extend({\n\tinputtype:\"multicombo\",\n\tinputConfig:{\n\t\ttagMode: false\n\t}\n}, datafilter.multiSelectFilter);\n\ndatafilter.serverMultiComboFilter = extend({\n\tinputtype:\"multicombo\",\n\tinputConfig:{\n\t\ttagMode: false\n\t}\n}, datafilter.serverMultiSelectFilter);\n\ndatafilter.datepickerFilter = extend({\n\tprepare:function(value){ return value||\"\"; },\n\tcompare:function(a,b){ return a*1 == b*1; },\n\tinputtype:\"datepicker\"\n}, datafilter.richSelectFilter);\n\n\ndatafilter.columnGroup = {\n\tgetValue:function(node){ return node.innerHTML; },\n\tsetValue:function(){},\n\tgetHelper:function(node, config){\n\t\treturn {\n\t\t\topen:function(){ config.closed = true; node.onclick(); },\n\t\t\tclose:function(){ config.closed = false; node.onclick(); },\n\t\t\tisOpened:function(){ return config.closed; }\n\t\t};\n\t},\n\trefresh:function(master, node, config){\n\t\tnode.onclick = function(e){\n\t\t\tstopEvent(e);\n\t\t\tconst mark = this.firstChild;\n\t\t\tif (config.closed){\n\t\t\t\tconfig.closed = false;\n\t\t\t\tmark.className = \"webix_tree_open\";\n\t\t\t} else {\n\t\t\t\tconfig.closed = true;\n\t\t\t\tmark.className = \"webix_tree_close\";\n\t\t\t}\n\n\t\t\tdelay(function(){\n\t\t\t\tmaster.callEvent(\"onColumnGroupCollapse\", [config.columnId, config.batch, !config.closed]);\n\t\t\t\tmaster.showColumnBatch(config.batch, !config.closed);\n\t\t\t});\n\t\t};\n\n\t\tif (!config.firstRun){\n\t\t\tconfig.firstRun = true;\n\t\t\tif (config.closed)\n\t\t\t\tmaster.showColumnBatch(config.batch, false);\n\t\t}\n\t},\n\trender:function(master, config){\n\t\treturn \"<div role='button' tabindex='0' aria-label='\"+i18n.aria[config.closed?\"openGroup\":\"closeGroup\"]+\"' class='\"+(config.closed?\"webix_tree_close\":\"webix_tree_open\")+\"'></div>\"+(config.groupText||\"\");\n\t}\n};\n\ndatafilter.dateRangeFilter = extend({\n\tprepare:function(value){\n\t\tif (!value.start && !value.end) return \"\";\n\t\treturn daterange.api.$prepareValue(value);\n\t},\n\tcompare:function(a, b){\n\t\treturn ((!b.start || a>=b.start) && (!b.end || a<=b.end));\n\t},\n\tinputtype:\"daterangepicker\"\n}, datafilter.richSelectFilter);\n\ndatafilter.serverDateRangeFilter = extend({\n\t$server:true\n}, datafilter.dateRangeFilter);\n","import Touch from \"../core/touch\";\nimport env  from \"../webix/env\";\nimport ready from \"../webix/ready\";\nimport {set as setSkin} from \"../webix/skin\";\nimport {create, addStyle} from \"../webix/html\";\nimport {define} from \"../services\";\n\nif (env.mobile || env.$customScroll)\n\tenv.scrollSize = 0;\n\nready(function(){\n\tenv.scrollSize = _detectScrollSize();\n});\n\n\nfunction _detectScrollSize(){\n\tvar div = create(\"div\");\n\tdiv.className = \"webix_skin_mark\";\n\tdiv.style.cssText=\"position:absolute;left:-1000px;width:100px;padding:0px;margin:0px;min-height:100px;overflow-y:scroll;\";\n\n\tdocument.body.appendChild(div);\n\tvar width = div.offsetWidth-div.clientWidth;\n\tvar name = { 200:\"flat\", 210:\"compact\", 220:\"contrast\", 230:\"material\", 240:\"mini\", 250:\"willow\", 260:\"dark\" }[Math.floor(div.offsetHeight/10)*10];\n\tdocument.body.removeChild(div);\n\n\tif (name)\n\t\tsetSkin(name);\n\n\tif (env.$customScroll) return 0;\n\treturn width;\n}\n\n\nlet fixed = false;\nfunction _fixHeight(){\n\tif (fixed) return;\n\n\taddStyle(\"html, body{ height:100%; }\");\n\tdocument.body.className += \" webix_full_screen\";\n\tTouch.limit(false);\n\tfixed = true;\n}\n\ndefine(\"fixHeight\", _fixHeight);","/*German (Germany) locale*/\nconst de = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%n.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%j. %F %Y\",\n\tfullDateFormat:\"%j. %F %Y %H:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"{obj} €\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"Januar\",\"Februar\",\"März\",\"April\",\"Mai\",\"Juni\",\"Juli\",\"August\",\"September\",\"Oktober\",\"November\",\"Dezember\"],\n\t\tmonthShort:[\"Jan\",\"Feb\",\"Mrz\",\"Apr\",\"Mai\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Okt\",\"Nov\",\"Dez\"],\n\t\tdayFull:[\"Sonntag\",\"Montag\",\"Dienstag\",\"Mittwoch\",\"Donnerstag\",\"Freitag\",\"Samstag\"],\n\t\tdayShort:[\"So\",\"Mo\",\"Di\",\"Mi\",\"Do\",\"Fr\",\"Sa\"],\n\t\thours: \"Stunden\",\n\t\tminutes: \"Minuten\",\n\t\tdone:\"Fertig\",\n\t\tclear: \"Entfernen\",\n\t\ttoday: \"Heute\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Seite\",\n\t\tof:\"von\"\n\t},\n\tPDFviewer:{\n\t\tof:\"von\",\n\t\tautomaticZoom:\"Automatisch Zoom\",\n\t\tactualSize:\"Aktuelles Ausmaß\",\n\t\tpageFit:\"Seite Ausmaß\",\n\t\tpageWidth:\"Seite Breite\",\n\t\tpageHeight:\"Seite Höhe\",\n\t\tenterPassword:\"Passwort eingeben\",\n\t\tpasswordError:\"Falsches passwort\"\n\t},\n\taria:{\n\t\tcalendar:\"Kalender\",\n\t\tincreaseValue:\"Wert erhöhen\",\n\t\tdecreaseValue:\"Wert verringern\",\n\t\tnavMonth:[\"Vorheriger Monat\", \"Nächsten Monat\"],\n\t\tnavYear:[\"Vorheriges Jahr\", \"Nächstes Jahr\"],\n\t\tnavDecade:[\"Zurück Jahrzehnt\", \"Als nächstes Jahrzehnt\"],\n\t\tdateFormat:\"%j. %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Stunden: %H\",\n\t\tminuteFormat:\"Minuten: %i\",\n\t\tremoveItem:\"Element entfernen\",\n\t\tpages:[\"Erste Seite\", \"Vorherige Seite\", \"Folgeseite\", \"Letzte Seite\"],\n\t\tpage:\"Seite\",\n\t\theadermenu:\"Titelmenü\",\n\t\topenGroup:\"Öffnen Spaltengruppe \",\n\t\tcloseGroup:\"Schließen Spaltengruppe \",\n\t\tcloseTab:\"Tab schließen\",\n\t\tshowTabs:\"Weitere Tabs\",\n\t\tresetTreeMap:\"Zurück zur ursprünglichen Ansicht\",\n\t\tnavTreeMap:\"Aufleveln\",\n\t\tnextTab:\"Weiter tab\",\n\t\tprevTab:\"Zurück tab\",\n\t\tmultitextSection:\"Element hinzufügen\",\n\t\tmultitextextraSection:\"Element entfernen\",\n\t\tshowChart:\"Chart anzeigen\",\n\t\thideChart:\"Chart verstecken\",\n\t\tresizeChart:\"Chart Größe ändern\"\n\t},\n\trichtext:{\n\t\tunderline: \"Unterstreichen\",\n\t\tbold: \"Fettgedruckt\",\n\t\titalic: \"Kursiv\"\n\t},\n\tcombo:{\n\t\tselect:\"Auswählen\",\n\t\tselectAll:\"Alles auswählen\",\n\t\tunselectAll:\"Alles widerrufen\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Abbrechen\"\n\t},\n\tcomments:{\n\t\tsend: \"Absenden\",\n\t\tconfirmMessage: \"Der Kommentar wird entfernt. Sind Sie sicher?\",\n\t\tedit: \"Redigieren\",\n\t\tremove: \"Löschen\",\n\t\tplaceholder: \"Geben Sie hier ein..\",\n\t\tmoreComments:\"Mehr Kommentare\"\n\t},\n\tfilter:{\n\t\tless: \"weniger\",\n\t\tlessOrEqual: \"weniger oder gleich\",\n\t\tgreater: \"mehr\",\n\t\tgreaterOrEqual: \"größer oder gleich\",\n\t\tcontains: \"enthält\",\n\t\tnotContains: \"nicht enthält\",\n\t\tequal: \"gleich\",\n\t\tnotEqual: \"ungleich\",\n\t\tbeginsWith: \"beginnt mit\",\n\t\tnotBeginsWith: \"nicht beginnt mit\",\n\t\tendsWith: \"endet mit\",\n\t\tnotEndsWith: \"nicht endet mit\",\n\t\tbetween: \"zwischen\",\n\t\tnotBetween: \"nicht zwischen\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Sekunden\"\n\t}\n};\n\nexport default de;","const fr = {\n\tgroupDelimiter:\" \",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d/%m/%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d.%m.%Y %H:%i\",\n\n\tprice:\"{obj} €\",\n\tpriceSettings:null, //use number defaults\n\t\n\tcalendar:{\n\t\tmonthFull:[\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\", \"Juin\", \"Juillet\", \"Août\", \"Septembre\", \"Octobre\", \"Novembre\", \"Décembre\"],\n\t\tmonthShort:[\"Jan\", \"Fév\", \"Mar\", \"Avr\", \"Mai\", \"Juin\", \"Juil\", \"Aôu\", \"Sep\", \"Oct\", \"Nov\", \"Déc\"],\t\n\t\tdayFull:[\"Dimanche\", \"Lundi\", \"Mardi\", \"Mercredi\", \"Jeudi\", \"Vendredi\", \"Samedi\"],\n\t\tdayShort:[\"Dim\", \"Lun\", \"Mar\", \"Mer\", \"Jeu\", \"Ven\", \"Sam\"],\n\t\thours: \"Heures\",\n\t\tminutes: \"Minutes\",\n\t\tdone:\"Fini\",\n\t\tclear: \"Effacer\",\n\t\ttoday: \"Aujourd'hui\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Page\",\n\t\tof:\"sur\"\n\t},\n\tPDFviewer:{\n\t\tof:\"sur\",\n\t\tautomaticZoom:\"Zoom automatique\",\n\t\tactualSize:\"Taille actuelle\",\n\t\tpageFit:\"Taille de la page\",\n\t\tpageWidth:\"Largeur de la page\",\n\t\tpageHeight:\"Hauteur de page\",\n\t\tenterPassword:\"Entrez le mot de passe\",\n\t\tpasswordError:\"Mauvais mot de passe\"\n\t},\n\taria:{\n\t\tcalendar:\"Сalendrier\",\n\t\tincreaseValue:\"Augmenter la valeur\",\n\t\tdecreaseValue:\"Diminution de la valeur\",\n\t\tnavMonth:[\"Le mois précédent\", \"Le mois prochain\"],\n\t\tnavYear:[\"Année précédente\", \"L'année prochaine\"],\n\t\tnavDecade:[\"Décennie précédente\", \"Suivant décennie\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Heures: %H\",\n\t\tminuteFormat:\"Minutes: %i\",\n\t\tremoveItem:\"Retirer l'élément\",\n\t\tpages:[\"Première page\", \"Page précédente\", \"Page suivante\", \"Dernière page\"],\n\t\tpage:\"Page\",\n\t\theadermenu:\"Menu de titre\",\n\t\topenGroup:\"Ouvrir groupe de colonnes \",\n\t\tcloseGroup:\"Fermer groupe de colonnes\",\n\t\tcloseTab:\"Fermer tab\",\n\t\tshowTabs:\"Montrer plus tabs\",\n\t\tresetTreeMap:\"Revenir à la vue originale\",\n\t\tnavTreeMap:\"Niveau supérieur\",\n\t\tnextTab:\"Prochain tab\",\n\t\tprevTab:\"Précédent tab\",\n\t\tmultitextSection:\"Ajouter l'élément\",\n\t\tmultitextextraSection:\"Retirer l'élément\",\n\t\tshowChart:\"Montrer chart\",\n\t\thideChart:\"Cacher chart\",\n\t\tresizeChart:\"Redimensionner chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Souligner\",\n\t\tbold: \"Gras\",\n\t\titalic: \"Italique\"\n\t},\n\tcombo:{\n\t\tselect:\"Sélectionner\",\n\t\tselectAll:\"Tout sélectionner\",\n\t\tunselectAll:\"Tout déselectionner\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Annuler\"\n\t},\n\tcomments:{\n\t\tsend: \"Envoyer\",\n\t\tconfirmMessage: \"Le commentaire sera supprimé. Êtes-vous sûr?\",\n\t\tedit: \"Modifier\",\n\t\tremove: \"Effacer\",\n\t\tplaceholder: \"Écrivez ici..\",\n\t\tmoreComments:\"Plus de commentaires\"\n\t},\n\tfilter:{\n\t\tless: \"moins\",\n\t\tlessOrEqual: \"inférieur ou égal\",\n\t\tgreater: \"plus grand\",\n\t\tgreaterOrEqual: \"supérieur ou égal\",\n\t\tcontains: \"contient\",\n\t\tnotContains: \"ne contient\",\n\t\tequal: \"égal\",\n\t\tnotEqual: \"pas égal\",\n\t\tbeginsWith: \"commence par\",\n\t\tnotBeginsWith: \"ne commence par\",\n\t\tendsWith: \"se termine par\",\n\t\tnotEndsWith: \"pas se termine par\",\n\t\tbetween: \"entre\",\n\t\tnotBetween: \"pas entre\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"secondes\"\n\t}\n};\n\nexport default fr;","/*Italian (Italy) locale*/\nconst it = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d/%m/%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%j %F %Y\",\n\tfullDateFormat:\"%j %F %Y %H:%i\",\n\tam:null,\n\tpm:null,\n\tprice:\"€ {obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tcalendar:{\n\t\tmonthFull:[\"gennaio\",\"febbraio\",\"marzo\",\"aprile\",\"maggio\",\"giugno\",\"luglio\",\"agosto\",\"settembre\",\"ottobre\",\"novembre\",\"dicembre\"],\n\t\tmonthShort:[\"gen\",\"feb\",\"mar\",\"apr\",\"mag\",\"giu\",\"lug\",\"ago\",\"set\",\"ott\",\"nov\",\"dic\"],\n\t\tdayFull:[\"domenica\",\"lunedì\",\"martedì\",\"mercoledì\",\"giovedì\",\"venerdì\",\"sabato\"],\n\t\tdayShort:[\"dom\",\"lun\",\"mar\",\"mer\",\"gio\",\"ven\",\"sab\"],\n\t\thours: \"Orario\",\n\t\tminutes: \"Minuti\",\n\t\tdone:\"Pronto\",\n\t\tclear: \"Pulisci\",\n\t\ttoday: \"Oggi\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Pagina\",\n\t\tof:\"di\"\n\t},\n\tPDFviewer:{\n\t\tof:\"di\",\n\t\tautomaticZoom:\"Zoom automatico\",\n\t\tactualSize:\"Dimensione reale\",\n\t\tpageFit:\"Dimensioni della pagina\",\n\t\tpageWidth:\"Larghezza della pagina\",\n\t\tpageHeight:\"Altezza della pagina\",\n\t\tenterPassword:\"Inserisci la password\",\n\t\tpasswordError:\"Password errata\"\n\t},\n\taria:{\n\t\tcalendar:\"Calendario\",\n\t\tincreaseValue:\"Aumenta il valore\",\n\t\tdecreaseValue:\"Riduci il valore\",\n\t\tnavMonth:[\"Il mese scorso\", \"Il prossimo mese\"],\n\t\tnavYear:[\"L'anno scorso\", \"L'anno prossimo\"],\n\t\tnavDecade:[\"Decennio precedente\", \"Prossimo decennio\"],\n\t\tdateFormat:\"%j %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Orario: %H\",\n\t\tminuteFormat:\"Minuti: %i\",\n\t\tremoveItem:\"Rimuovere l'elemento\",\n\t\tpages:[\"Prima pagina\", \"Pagina precedente\", \"Pagina successiva\", \"Ultima pagina\"],\n\t\tpage:\"Pagina\",\n\t\theadermenu:\"Menu del titolo\",\n\t\topenGroup:\"Aperto gruppo di colonne\",\n\t\tcloseGroup:\"Chiudi gruppo di colonne\",\n\t\tcloseTab:\"Chiudi tab\",\n\t\tshowTabs:\"Mostra più tabs\",\n\t\tresetTreeMap:\"Tornare alla vista originale\",\n\t\tnavTreeMap:\"Livello superiore\",\n\t\tnextTab:\"Tab successivo\",\n\t\tprevTab:\"Tab precedente\",\n\t\tmultitextSection:\"Aggiungi elemento\",\n\t\tmultitextextraSection:\"Rimuovere l'elemento\",\n\t\tshowChart:\"Mostrare grafico\",\n\t\thideChart:\"Nascondere grafico\",\n\t\tresizeChart:\"Ridimensionare grafico\"\n\t},\n\trichtext:{\n\t\tunderline: \"Sottolineare\",\n\t\tbold: \"Grassetto\",\n\t\titalic: \"Corsivo\"\n\t},\n\tcombo:{\n\t\tselect:\"Selezionare\",\n\t\tselectAll:\"Seleziona tutto\",\n\t\tunselectAll:\"Deseleziona tutto\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Annullare\"\n\t},\n\tcomments:{\n\t\tsend: \"Inviare\",\n\t\tconfirmMessage: \"Il commento verrà rimosso. Sei sicuro?\",\n\t\tedit: \"Correggere\",\n\t\tremove: \"Elimina\",\n\t\tplaceholder: \"Digitare qui..\",\n\t\tmoreComments:\"Altri commenti\"\n\t},\n\tfilter:{\n\t\tless: \"meno\",\n\t\tlessOrEqual: \"minore o uguale\",\n\t\tgreater: \"maggiore\",\n\t\tgreaterOrEqual: \"maggiore o uguale\",\n\t\tcontains: \"contiene\",\n\t\tnotContains: \"non contiene\",\n\t\tequal: \"uguale\",\n\t\tnotEqual: \"non uguale\",\n\t\tbeginsWith: \"inizia con\",\n\t\tnotBeginsWith: \"non inizia con\",\n\t\tendsWith: \"finisce con\",\n\t\tnotEndsWith: \"non termina con\",\n\t\tbetween: \"tra\",\n\t\tnotBetween: \"non tra\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"secondi\"\n\t}\n};\n\nexport default it;","const pt = {\n\tgroupDelimiter:\".\",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d/%m/%Y\",\n\ttimeFormat:\"%G:%i\",\n\tlongDateFormat:\"%d de %F de %Y\",\n\tfullDateFormat:\"%d de %F de %Y %G:%i\",\n\n\tam:null,\n\tpm:null,\n\tprice:\"R$ {obj}\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\".\",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\tfileSize: [\"b\",\"Kb\",\"Mb\",\"Gb\",\"Tb\",\"Pb\",\"Eb\"],\n\tcalendar:{\n\t\tmonthFull:[\"Janeiro\",\"Fevereiro\",\"Março\",\"Abril\",\"Maio\",\"Junho\",\"Julho\",\"Agosto\",\"Setembro\",\"Outubro\",\"Novembro\",\"Dezembro\"],\n\t\tmonthShort:[\"Jan\",\"Fev\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\"Jul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dez\"],\n\t\tdayFull:[\"Domingo\",\"Segunda-Feira\",\"Terça-Feira\",\"Quarta-Feira\",\"Quinta-Feira\",\"Sexta-Feira\",\"Sábado\"],\n\t\tdayShort:[\"Dom\",\"Seg\",\"Ter\",\"Qua\",\"Qui\",\"Sex\",\"Sáb\"],\n\t\thours: \"Horas\",\n\t\tminutes: \"Minutos\",\n\t\tdone:\"Feito\",\n\t\tclear: \"Limpar\",\n\t\ttoday: \"Hoje\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Página\",\n\t\tof:\"de\"\n\t},\n\tPDFviewer:{\n\t\tof:\"de\",\n\t\tautomaticZoom:\"Zoom automático\",\n\t\tactualSize:\"Tamanho atual\",\n\t\tpageFit:\"Tamanho da página\",\n\t\tpageWidth:\"Largura da página\",\n\t\tpageHeight:\"Altura da página\",\n\t\tenterPassword:\"Digite a senha\",\n\t\tpasswordError:\"Senha incorreta\"\n\t},\n\taria:{\n\t\tcalendar:\"Calendário\",\n\t\tincreaseValue:\"Aumentar o valor\",\n\t\tdecreaseValue:\"Diminuir o valor\",\n\t\tnavMonth:[\"Mês anterior\", \"Próximo mês\"],\n\t\tnavYear:[\"Ano anterior\", \"Próximo ano\"],\n\t\tnavDecade:[\"Década anterior\", \"Próxima década\"],\n\t\tdateFormat:\"%d de %F de %Y\",\n\t\tmonthFormat:\"%F de %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Horas: %G\",\n\t\tminuteFormat:\"Minutos: %i\",\n\t\tremoveItem:\"Remover elemento\",\n\t\tpages:[\"Primeira página\", \"Página anterior\", \"Próxima página\", \"Última página\"],\n\t\tpage:\"Página\",\n\t\theadermenu:\"Menu de títulos\",\n\t\topenGroup:\"Grupo coluna aberta\",\n\t\tcloseGroup:\"Fechar grupo de colunas\",\n\t\tcloseTab:\"Fechar tab\",\n\t\tshowTabs:\"Mostre mais tabs\",\n\t\tresetTreeMap:\"Мoltar à vista original\",\n\t\tnavTreeMap:\"Upar\",\n\t\tnextTab:\"Próximo tab\",\n\t\tprevTab:\"Anterior tab\",\n\t\tmultitextSection:\"Adicionar elemento\",\n\t\tmultitextextraSection:\"Remover elemento\",\n\t\tshowChart:\"Exposição chart\",\n\t\thideChart:\"Esconder chart\",\n\t\tresizeChart:\"Redimensionar chart\"\n\t},\n\trichtext:{\n\t\tunderline: \"Sublinhado\",\n\t\tbold: \"Negrito\",\n\t\titalic: \"itálico\"\n\t},\n\tcombo:{\n\t\tselect:\"Selecionar\",\n\t\tselectAll:\"Selecionar tudo\",\n\t\tunselectAll:\"Desmarque todos\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Cancelar\"\n\t},\n\tcomments:{\n\t\tsend: \"Enviar\",\n\t\tconfirmMessage: \"Comentário será removido. Você tem certeza?\",\n\t\tedit: \"Editar\",\n\t\tremove: \"Excluir\",\n\t\tplaceholder: \"Digite aqui..\",\n\t\tmoreComments:\"Mais comentários\"\n\t},\n\tfilter:{\n\t\tless: \"menos\",\n\t\tlessOrEqual: \"menor ou igual\",\n\t\tgreater: \"maior\",\n\t\tgreaterOrEqual: \"maior ou igual\",\n\t\tcontains: \"contém\",\n\t\tnotContains: \"não contém\",\n\t\tequal: \"igual\",\n\t\tnotEqual: \"não é igual\",\n\t\tbeginsWith: \"começa com\",\n\t\tnotBeginsWith: \"não começa com\",\n\t\tendsWith: \"termina com\",\n\t\tnotEndsWith: \"não termina com\",\n\t\tbetween: \"entre\",\n\t\tnotBetween: \"não entre\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"segundos\"\n\t}\n};\n\nexport default pt;","const ru = {\n\tgroupDelimiter:\" \",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%m.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d.%m.%Y %H:%i\",\n\n\tprice:\"{obj} руб.\",\n\tpriceSettings:{\n\t\tgroupDelimiter:\" \",\n\t\tgroupSize:3,\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:2,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\t\n\tcalendar:{\n\t\tmonthFull:[\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Maй\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Oктябрь\", \"Ноябрь\", \"Декабрь\"],\n\t\tmonthShort:[\"Янв\", \"Фев\", \"Maр\", \"Aпр\", \"Maй\", \"Июн\", \"Июл\", \"Aвг\", \"Сен\", \"Окт\", \"Ноя\", \"Дек\"],\n\t\tdayFull:[ \"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"],\n\t\tdayShort:[\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\n\t\thours: \"Часы\",\n\t\tminutes: \"Минуты\",\n\t\tdone: \"Гoтовo\",\n\t\tclear: \"Очистить\",\n\t\ttoday: \"Сегодня\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Страница\",\n\t\tof:\"из\"\n\t},\n\tPDFviewer:{\n\t\tof:\"из\",\n\t\tautomaticZoom:\"Автоматический зум\",\n\t\tactualSize:\"Настоящий размер\",\n\t\tpageFit:\"Размер страницы\",\n\t\tpageWidth:\"Ширина страницы\",\n\t\tpageHeight:\"Высота страницы\",\n\t\tenterPassword:\"Введите пароль\",\n\t\tpasswordError:\"Неверный пароль\"\n\t},\n\taria:{\n\t\tcalendar:\"Календарь\",\n\t\tincreaseValue:\"Увеличить значение\",\n\t\tdecreaseValue:\"Уменьшить значение\",\n\t\tnavMonth:[\"Предыдущий месяц\", \"Следующий месяц\"],\n\t\tnavYear:[\"Предыдущий год\", \"Следующий год\"],\n\t\tnavDecade:[\"Предыдущие десять лет\", \"Следующие десять лет\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Часы: %H\",\n\t\tminuteFormat:\"Минуты: %i\",\n\t\tremoveItem:\"Удалить элемент\",\n\t\tpages:[\"Первая страница\", \"Предыдущая страница\", \"Следующая страница\", \"Последняя страница\"],\n\t\tpage:\"Страница\",\n\t\theadermenu:\"Меню шапки таблицы\",\n\t\topenGroup:\"Развернуть группу столбцов\",\n\t\tcloseGroup:\"Свернуть группу столбцов\",\n\t\tcloseTab:\"Закрыть вкладку\",\n\t\tshowTabs:\"Показать больше вкладок\",\n\t\tresetTreeMap:\"Вернуться к первоначальному представлению\",\n\t\tnavTreeMap:\"Перейти на уровень выше\",\n\t\tnextTab:\"Следующая вкладка\",\n\t\tprevTab:\"Предыдущая вкладка\",\n\t\tmultitextSection:\"Добавить элемент\",\n\t\tmultitextextraSection:\"Удалить элемент\",\n\t\tshowChart:\"Показать чарт\",\n\t\thideChart:\"Спрятать чарт\",\n\t\tresizeChart:\"Изменить размер чарта\"\n\t},\n\trichtext:{\n\t\tunderline: \"Подчеркивание\",\n\t\tbold: \"Жирный\",\n\t\titalic: \"Курсив\"\n\t},\n\tcombo:{\n\t\tselect:\"Выбрать\",\n\t\tselectAll:\"Выбрать все\",\n\t\tunselectAll:\"Сброс выбора\"\n\t},\n\tmessage:{\n\t\tok:\"OK\",\n\t\tcancel:\"Отмена\"\n\t},\n\tcomments:{\n\t\tsend: \"Отправить\",\n\t\tconfirmMessage: \"Комментарий будет удален. Вы уверены?\",\n\t\tedit: \"Редактировать\",\n\t\tremove: \"Удалить\",\n\t\tplaceholder: \"Введите текст..\",\n\t\tmoreComments:\"Больше комментариев\"\n\t},\n\tfilter:{\n\t\tless: \"меньше\",\n\t\tlessOrEqual: \"меньше или равно\",\n\t\tgreater: \"больше\",\n\t\tgreaterOrEqual: \"больше или равно\",\n\t\tcontains: \"содержит\",\n\t\tnotContains: \"не содержит\",\n\t\tequal: \"равно\",\n\t\tnotEqual: \"не равно\",\n\t\tbeginsWith: \"начинается с\",\n\t\tnotBeginsWith: \"не начинается с\",\n\t\tendsWith: \"заканчиватся\",\n\t\tnotEndsWith: \"не заканчиватся\",\n\t\tbetween: \"между\",\n\t\tnotBetween: \"не между\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Секунды\"\n\t}\n};\n\nexport default ru;","const be = {\n\tgroupDelimiter:\" \",\n\tgroupSize:3,\n\tdecimalDelimiter:\",\",\n\tdecimalSize:2,\n\tminusPosition:\"before\",\n\tminusSign:\"-\",\n\n\tdateFormat:\"%d.%m.%Y\",\n\ttimeFormat:\"%H:%i\",\n\tlongDateFormat:\"%d %F %Y\",\n\tfullDateFormat:\"%d.%m.%Y %H:%i\",\n\n\tprice:\"{obj} руб.\",\n\tpriceSettings:{\n\t\tgroupSize:3,\n\t\tgroupDelimiter:\" \",\n\t\tdecimalDelimiter:\",\",\n\t\tdecimalSize:0,\n\t\tminusPosition:\"before\",\n\t\tminusSign:\"-\"\n\t},\n\n\tcalendar:{\n\t\tmonthFull:[\"Студзень\", \"Люты\", \"Сакавік\", \"Красавік\", \"Травень\", \"Чэрвень\", \"Ліпень\", \"Жнівень\", \"Верасень\", \"Кастрычнік\", \"Лістапад\", \"Снежань\"],\n\t\tmonthShort:[\"Студз\", \"Лют\", \"Сак\", \"Крас\", \"Трав\", \"Чэр\", \"Ліп\", \"Жнів\", \"Вер\", \"Каст\", \"Ліст\", \"Снеж\"],\n\t\tdayFull:[ \"Нядзеля\", \"Панядзелак\", \"Аўторак\", \"Серада\", \"Чацвер\", \"Пятніца\", \"Субота\"],\n\t\tdayShort:[\"Нд\", \"Пн\", \"Аўт\", \"Ср\", \"Чцв\", \"Пт\", \"Сб\"],\n\t\thours: \"Гадзіны\",\n\t\tminutes: \"Хвіліны\",\n\t\tdone: \"Гатова\",\n\t\ttoday: \"Cёння\",\n\t\tclear: \"Ачысціць\"\n\t},\n\n\tdataExport:{\n\t\tpage:\"Старонка\",\n\t\tof:\"з\"\n\t},\n\tPDFviewer:{\n\t\tof:\"з\",\n\t\tautomaticZoom:\"Аўтаматычны зум\",\n\t\tactualSize:\"Сапраўдны памер\",\n\t\tpageFit:\"Памер старонкі\",\n\t\tpageWidth:\"Шырыня старонкі\",\n\t\tpageHeight:\"Вышыня старонкі\",\n\t\tenterPassword:\"Увядзіце пароль\",\n\t\tpasswordError:\"Няправільны пароль\"\n\t},\n\taria:{\n\t\tcalendar:\"Каляндар\",\n\t\tincreaseValue:\"Павялічыць значэнне\",\n\t\tdecreaseValue:\"Паменшыць значэнне\",\n\t\tnavMonth:[\"Папярэдні месяц\", \"Наступны месяц\"],\n\t\tnavYear:[\"Папярэдні год\", \"Наступны год\"],\n\t\tnavDecade:[\"Папярэднія дзесяць год\", \"Наступныя дзесяць год\"],\n\t\tdateFormat:\"%d %F %Y\",\n\t\tmonthFormat:\"%F %Y\",\n\t\tyearFormat:\"%Y\",\n\t\thourFormat:\"Hours: %h\",\n\t\tminuteFormat:\"Гадзіны: %i\",\n\t\tremoveItem:\"Прыбраць элемент\",\n\t\tpages:[\"Першая старонка\", \"Папярэдняя старонка\", \"Наступная старонка\", \"Апошняя старонка\"],\n\t\tpage:\"Старонка\",\n\t\theadermenu:\"Меню загалоўка\",\n\t\topenGroup:\"Адкрыць групу слупкоў\",\n\t\tcloseGroup:\"Закрыць групу слупкоў\",\n\t\tcloseTab:\"Закрыць укладку\",\n\t\tshowTabs:\"Паказаць больш укладак\",\n\t\tresetTreeMap:\"Вярнуцца да першапачатковага выгляду\",\n\t\tnavTreeMap:\"Падняцца на ўзровень вышэй\",\n\t\tnextTab:\"Наступная ўкладка\",\n\t\tprevTab:\"Папярэдняя ўкладка\",\n\t\tmultitextSection:\"Дадаць элемент\",\n\t\tmultitextextraSection:\"Прыбраць элемент\",\n\t\tshowChart:\"Паказаць графік\",\n\t\thideChart:\"Схаваць графік\",\n\t\tresizeChart:\"Змяніць памер графіка\"\n\t},\n\trichtext:{\n\t\tunderline: \"Падкрэсліванне\",\n\t\tbold: \"Паўтлусты\",\n\t\titalic: \"Курсіў\"\n\t},\n\tcombo:{\n\t\tselect:\"Абраць\",\n\t\tselectAll:\"Абраць усё\",\n\t\tunselectAll:\"Ачысціць ўсе\"\n\t},\n\tmessage:{\n\t\tok:\"ОК\",\n\t\tcancel:\"Адмена\"\n\t},\n\tcomments:{\n\t\tsend: \"Даслаць\",\n\t\tconfirmMessage: \"Каментарый будзе выдалены. Вы ўпэўнены?\",\n\t\tedit: \"Рэдагаваць\",\n\t\tremove: \"Выдаліць\",\n\t\tplaceholder: \"Пішыце тут..\",\n\t\tmoreComments:\"Больш каментарыяў\"\n\t},\n\tfilter:{\n\t\tless: \"менш\",\n\t\tlessOrEqual: \"менш або роўна\",\n\t\tgreater: \"больш\",\n\t\tgreaterOrEqual: \"больш або роўна\",\n\t\tcontains: \"змяшчае\",\n\t\tnotContains: \"не змяшчае\",\n\t\tequal: \"роўныя\",\n\t\tnotEqual: \"не роўныя\",\n\t\tbeginsWith: \"пачынаецца з\",\n\t\tnotBeginsWith: \"не пачынаецца з\",\n\t\tendsWith: \"заканчваецца\",\n\t\tnotEndsWith: \"не сканчаецца\",\n\t\tbetween: \"паміж\",\n\t\tnotBetween: \"не паміж\"\n\t},\n\ttimeboard:{\n\t\tseconds: \"Секунды\"\n\t}\n};\n\nexport default be;","import base from \"../views/view\";\nimport EventSystem from \"../core/eventsystem\";\nimport {protoUI} from \"../ui/core\";\n\n\nconst api = {\n\tname:\"iframe\",\n\t$init:function(){\n\t\tthis._dataobj = this._contentobj;\n\t\tthis._contentobj.innerHTML = \"<iframe style='width:100%; height:100%' frameborder='0' onload='var t = $$(this.parentNode.getAttribute(\\\"view_id\\\")); if (t) t.callEvent(\\\"onAfterLoad\\\",[]);' src='about:blank'></iframe>\";\n\t},\n\tload:function(value){\n\t\tthis.src_setter(value);\n\t},\n\tsrc_setter:function(value){\n\t\tif(!this.callEvent(\"onBeforeLoad\",[])) \n\t\t\treturn \"\";\n\t\tthis.getIframe().src = value;\n\t\treturn value;\n\t},\n\tgetIframe:function(){\n\t\treturn this._contentobj.getElementsByTagName(\"iframe\")[0];\n\t},\n\tgetWindow:function(){\n\t\treturn this.getIframe().contentWindow;\n\t}\n};\n\n\nconst view = protoUI(api,  base.view, EventSystem);\nexport default {api, view};","import {removeCss, addCss} from \"../webix/html\";\nimport {debug_size_box} from \"../webix/debug\";\nimport {protoUI, ui} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\n\nimport state from \"../core/state\";\nimport UIManager from \"../core/uimanager\";\nimport env from \"../webix/env\";\nimport MouseEvents from \"../core/mouseevents\";\nimport EventSystem from \"../core/eventsystem\";\n\nimport template from \"../webix/template\";\n\nimport base from \"./view\";\nimport baseview from \"./baseview\";\n\nconst api = {\n\tname:\"accordionitem\",\n\t$init:function(config){\n\t\tthis._viewobj.innerHTML = \"<div tabindex='0' \"+/*@attr*/\"webix_ai_id\"+\"='\"+config.id+\"'  class='webix_accordionitem_header'><div class='webix_accordionitem_button' ></div><div class='webix_accordionitem_label' ></div></div><div class='webix_accordionitem_body'></div>\";\n\t\tthis._contentobj = this._viewobj;\n\t\tthis._headobj = this._contentobj.childNodes[0];\n\t\tif(!config.header)\n\t\t\tthis._headobj.style.display = \"none\";\n\t\tthis._headlabel = this._contentobj.childNodes[0].childNodes[1];\n\t\tthis._headbutton = this._contentobj.childNodes[0].childNodes[0];\n\t\tthis._bodyobj = this._contentobj.childNodes[1];\n\t\tthis._viewobj.className +=\" webix_accordionitem\";\n\t\tthis._head_cell = this._body_cell = null;\n\t\tthis._cells = true;\n\n\t\tthis._bodyobj.setAttribute(\"role\", \"tabpanel\");\n\t\tthis._headobj.setAttribute(\"role\", \"tab\");\n\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t_remove:function(){\n\t\tthis.body_setter();\n\t},\n\t_replace:function(new_view){\n\t\tthis._body_cell.destructor();\n\t\tthis._body_cell = new_view;\n\t\t\n\t\tthis._bodyobj.appendChild(this._body_cell._viewobj);\n\t\tthis.resize();\n\t},\n\t_id:/*@attr*/\"webix_ai_id\",\n\tgetChildViews:function(){\n\t\treturn [this._body_cell];\n\t},\n\tbody_setter:function(value){\n\t\tif (typeof value != \"object\")\n\t\t\tvalue = {template:value };\n\n\t\tvalue._inner = { top:true, left:true, right:true, bottom:true};\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(value);\n\n\t\tthis._bodyobj.appendChild(this._body_cell._viewobj);\n\t\treturn value;\n\t},\n\theader_setter:function(value){\n\t\tif(value)\n\t\t\tvalue = template(value);\n\t\treturn value;\n\t},\n\theaderAlt_setter:function(value){\n\t\tif(value)\n\t\t\tvalue = template(value);\n\t\treturn value;\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar size =  this._body_cell.$getSize(0, 0);\n\n\t\t//apply external border to inner content sizes\n\t\tvar _borders = this._settings._inner;\n\t\tif (_borders){\n\t\t\tdx += (_borders.left?0:1)+(_borders.right?0:1);\n\t\t\tdy += (_borders.top?0:1)+(_borders.bottom?0:1);\n\t\t}\n\n\t\tvar header = 0;\n\t\tvar self_size = baseview.api.$getSize.call(this, 0, 0);\n\n\t\t//use child settings if layout's one was not defined\n\t\tself_size[0] = (self_size[0] || size[0] ) +dx;\n\t\tif (self_size[1] >= 100000)\n\t\t\tself_size[1] = size[1];\n\t\tself_size[1] +=\tdx;\n\t\t\n\t\tself_size[2] = (self_size[2] || size[2] ) +dy;\n\t\tvar fixedHeight = (self_size[3]< 100000);\n\t\tif (!fixedHeight)\n\t\t\tself_size[3] = size[3];\n\n\t\tself_size[3] += dy;\n\t\tif(this.getParentView()._vertical_orientation){\n\t\t\tif (this._settings.collapsed){\n\t\t\t\tself_size[2] = self_size[3] = this._getHeaderSize()+dy;\n\t\t\t} else if(this._settings.header)\n\t\t\t\theader = this._settings.headerHeight;\n\t\t} else {\n\t\t\tif (this._settings.collapsed)\n\t\t\t\tself_size[0] = self_size[1] = this._getHeaderSize()+dx;\n\t\t\tif(this._settings.header)\n\t\t\t\theader = this._settings.headerHeight;\n\t\t}\n\n\t\t//include header in total height calculation\n\t\tif(!fixedHeight){\n\t\t\tself_size[2] += header;\n\t\t\tself_size[3] += header;\n\t\t}\n\n\t\tif (DEBUG) debug_size_box(this, self_size, true);\n\t\treturn self_size;\n\t},\n\ton_click:{\n\t\twebix_accordionitem_header:function(e){\n\t\t\tthis._toggle(e);\n\t\t\treturn false;\n\t\t},\n\t\twebix_accordionitem_header_v:function(e){\n\t\t\tthis._toggle(e);\n\t\t\treturn false;\n\t\t}\n\t},\n\t_toggle:function(){\n\t\tthis.define(\"collapsed\", !this._settings.collapsed);\n\t},\n\tcollapsed_setter:function(value){\n\t\tif (this._settings.header === false) return;\n\t\t//use last layout element if parent is not known yet\n\t\tvar parent = this.getParentView();\n\t\tif(parent){\n\t\t\tif(!value)\n\t\t\t\tthis._expand();\n\t\t\telse{\n\t\t\t\tif ( parent._canCollapse(this))\n\t\t\t\t\tthis._collapse();\n\t\t\t\telse{\n\t\t\t\t\tvar success = 0;\n\t\t\t\t\tif(parent._cells.length > 1)\n\t\t\t\t\t\tfor (var i=0; i < parent._cells.length; i++){\n\t\t\t\t\t\t\tvar sibl = parent._cells[i];\n\t\t\t\t\t\t\tif (this != sibl && sibl.isVisible() && sibl.expand){\n\t\t\t\t\t\t\t\tsibl.expand();\n\t\t\t\t\t\t\t\tthis._collapse();\n\t\t\t\t\t\t\t\tsuccess = 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tif (!success) return;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._settings.collapsed = value;\n\t\t\tif (!value) parent._afterOpen(this);\n\n\t\t\tthis.refresh();\n\t\t\tif (!state._ui_creation)\n\t\t\t\tthis.resize();\n\n\t\t\tparent.callEvent(\"onAfter\"+(value?\"Collapse\":\"Expand\"), [this._settings.id]);\n\n\t\t\tthis._settings.$noresize = value;\n\t\t}\n\t\treturn value;\n\t},\n\tcollapse:function(){\n\t\tthis.define(\"collapsed\", true);\n\t\tUIManager._moveChildFocus(this);\n\t},\n\texpand:function(){\n\t\tthis.define(\"collapsed\", false);\n\t},\n\t_show: function() {\n\t\tthis.show();\n\t},\n\t_hide: function() {\n\t\tthis.hide();\n\t},\n\t_expand:function(){\n\t\tthis._bodyobj.style.display = \"\";\n\t\tremoveCss(this.$view, \"collapsed\");\n\t\tremoveCss(this._headobj, \"collapsed\");\n\n\t\tthis._headobj.setAttribute(\"aria-expanded\", \"true\");\n\t\tthis._childRefresh(this._body_cell);\n\t},\n\t_childRefresh: function(view){\n\t\tif(view.refresh)\n\t\t\tview.refresh();\n\t\telse if(view.getChildViews){\n\t\t\tconst views = view.getChildViews();\n\t\t\tviews.forEach(v=>this._childRefresh(v));\n\t\t}\n\t},\n\t_collapse:function(){\n\t\tif(this._settings.headerAlt)\n\t\t\tthis._headlabel.innerHTML = this._settings.headerAlt();\n\t\tthis._bodyobj.style.display = \"none\";\n\t\taddCss(this.$view, \"collapsed\");\n\t\taddCss(this._headobj, \"collapsed\");\n\n\t\tthis._headobj.setAttribute(\"aria-expanded\", \"false\");\n\t},\n\trefresh:function(){\n\t\tvar template = this._settings[this._settings.collapsed?\"headerAlt\":\"header\"] ||this._settings.header;\n\t\tif (template){\n\t\t\tthis._headlabel.innerHTML = template();\n\t\t\tthis._headbutton.setAttribute(\"aria-label\", template());\n\t\t}\n\t\t\t\n\t\tvar css = (this.getParentView()._vertical_orientation?\"vertical\":\"horizontal\");\n\t\tif(this._viewobj.className.indexOf(\" \"+css) < 0 ){\n\t\t\taddCss(this._viewobj, css);\n\t\t}\n\t},\n\t_getHeaderSize:function(){\n\t\treturn (this._settings.collapsed?this._settings.headerAltHeight:this._settings.headerHeight);\n\t},\n\t$setSize:function(x,y){\n\t\tif (base.api.$setSize.call(this,x,y) || this._getHeaderSize() != this._last_set_header_size){\n\t\t\tx = this._content_width;\n\t\t\ty = this._content_height;\n\n\t\t\tvar headerSize = this._last_set_header_size = this._getHeaderSize();//-(this._settings._inner.top?0:1);\n\t\t\tif (this._settings.header){\n\n\t\t\t\tthis._headobj.style.height=headerSize+\"px\";\n\t\t\t\tthis._headobj.style.width=\"auto\";\n\t\t\t\tthis._headobj.style[env.transform]=\"\";\n\n\t\t\t\t\n\t\t\t\tthis._headobj.style.borderBottomWidth = (this._settings.collapsed?0:1)+\"px\";\n\n\t\t\t\tif(this.getParentView()._vertical_orientation||!this._settings.collapsed){\n\t\t\t\t\ty-=this._getHeaderSize();\n\t\t\t\t} else if (this._settings.collapsed){\n\t\t\t\t\t//-2 - borders\n\t\t\t\t\tthis._headobj.style.width = y + \"px\";\n\t\t\t\t\tthis._headobj.style.height = x + 3 + \"px\";\n\t\t\t\t\tvar d = Math.floor(y/2-x/2)+(x-this._settings.headerAltHeight)/2;\n\t\t\t\t\tthis._headobj.style[env.transform]=\"rotate(90deg) translate(\"+d+\"px, \"+(d+1)+\"px)\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!this._settings.collapsed){\n\t\t\t\tthis._body_cell.$setSize(x,y);\n\t\t\t\tthis._last_size_y = y;\n\t\t\t}\n\t\t} else if (!this._settings.collapsed){\n\t\t\tvar body = this._body_cell;\n\t\t\tif (this._last_size_y)\n\t\t\t\tbody.$setSize(this._content_width, this._last_size_y);\n\t\t}\n\t},\n\t$skin:function(){\n\t\tthis.defaults.headerAltHeight = this.defaults.headerHeight = $active.barHeight - $active.borderWidth*2;\n\t},\n\tdefaults:{\n\t\theader:false,\n\t\theaderAlt:false,\n\t\tbody:\"\"\n\t}\n};\n\n\nconst view = protoUI(api, MouseEvents, EventSystem, base.view);\nexport default {api, view};","import {pos as getPos, offset, addCss, removeCss} from \"../webix/html\";\nimport {ui, protoUI} from \"../ui/core\";\nimport env from \"../webix/env\";\n\nimport MouseEvents from \"../core/mouseevents\";\nimport Destruction from \"../core/destruction\";\n\nimport base from \"./view\";\n\n//used inderectly through ui\nimport \"./resizearea\";\n\nimport {bind} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {assert} from \"../webix/debug\";\nimport {callEvent} from \"../webix/customevents\";\n\n\nconst api = {\n\tname:\"resizer\",\n\tdefaults:{\n\t\twidth:7, height:7\n\t},\n\t$init:function(config){\n\t\tassert(this.getParentView(), \"Resizer can't be initialized outside a layout\");\n\t\tthis._viewobj.className += \" webix_resizer\";\n\t\tvar space = this.getParentView()._margin;\n\t\t\n\t\t_event(this._viewobj, env.mouse.down, e => this._rsDown(e, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(this._viewobj, env.touch.down, e => this._rsDown(e, \"touch\"));\n\n\t\tvar dir = this._getResizeDir();\n\t\tthis._rs_started = false;\n\t\tthis._resizer_dir = dir;\n\n\t\tthis._resizer_dim = (dir==\"x\"?\"width\":\"height\");\n\t\t\n\t\tif (dir==\"x\")\n\t\t\tconfig.height = 0;\n\t\telse \n\t\t\tconfig.width = 0;\n\n\t\tif (space>0){\n\t\t\tthis._viewobj.className += \" webix_resizer_v\"+dir;\n\t\t\tthis._viewobj.style.marginRight = \"-\"+space+\"px\";\n\t\t\tif (dir == \"x\")\t\n\t\t\t\tconfig.width = space;\n\t\t\telse\n\t\t\t\tconfig.height = space;\n\t\t\tthis.$nospace = true;\n\t\t} else\n\t\t\tthis._viewobj.className += \" webix_resizer_\"+dir;\n\t\t\n\t\tthis._viewobj.innerHTML = \"<div class='webix_resizer_content'></div>\";\n\t\tif (dir == \"y\" && space>0) this._viewobj.style.marginBottom = \"-\"+(config.height||this.defaults.height)+\"px\";\n\t\tthis._viewobj.setAttribute(/*@attr*/\"webix_disable_drag\", \"true\");\n\t\tthis._viewobj.setAttribute(\"tabindex\", \"-1\");\n\t\tthis._viewobj.setAttribute(\"aria-grabbed\", \"false\");\n\n\t},\n\t_rsDown:function(e, pointer){\n\t\tvar cells = this._getResizerCells();\n\t\t//some sibling can block resize\n\t\tif(cells && !this._settings.disabled){\n\t\t\tthis._rs_started = true;\n\t\t\tthis._rs_process = getPos(e);\n\t\t\tthis._rsLimit = [];\n\t\t\tthis._viewobj.setAttribute(\"aria-grabbed\", \"true\");\n\t\t\t\n\t\t\tfor(var i=0; i<2; i++)\n\t\t\t\tcells[i].$view.setAttribute(\"aria-dropeffect\", \"move\");\n\t\t\tthis._viewobj.setAttribute(\"aria-dropeffect\", \"move\");\n\t\t\t\n\t\t\tthis._rsStart(e, cells[0]);\n\t\t\tconst handler = event(document, env[pointer].up, e => {\n\t\t\t\teventRemove(handler);\n\t\t\t\treturn this._rsUp(e);\n\t\t\t});\n\t\t}\n\t},\n\t_rsUp:function(){\n\t\tthis._rs_started = false;\n\t\tthis._rs_process = false;\n\t},\n\t_rsStart:function(e, cell){\n\t\tvar dir, cellOffset, pos,posParent,start;\n\t\tdir = this._resizer_dir;\n\n\t\t/*layout position:relative to place absolutely positioned elements in it*/\n\t\tthis.getParentView()._viewobj.style.position = \"relative\";\n\t\tpos = offset(this._viewobj);\n\t\tposParent = offset(this.getParentView()._viewobj);\n\t\tstart = pos[dir]-posParent[dir];\n\t\tcellOffset = offset(cell.$view)[dir]- offset(this.getParentView().$view)[dir];\n\n\t\tthis._rs_progress = [dir, cell, start, cellOffset];\n\t\t/*resizer stick (resizerea ext)*/\n\n\t\tthis._resizeStick = new ui.resizearea({\n\t\t\tcontainer:this.getParentView()._viewobj,\n\t\t\tdir:dir,\n\t\t\teventPos:this._rs_process[dir],\n\t\t\tstart:start-1,\n\t\t\theight: this.$height,\n\t\t\twidth: this.$width,\n\t\t\tborder: 1,\n\t\t\tmargin: this.getParentView()._padding[dir === \"x\"? \"left\" : \"top\"]\n\t\t});\n\n\t\t/*stops resizing on stick mouseup*/\n\t\tthis._resizeStick.attachEvent(\"onResizeEnd\", bind(this._rsEnd, this));\n\t\t/*needed to stop stick moving when the limit for dimension is reached*/\n\t\tthis._resizeStick.attachEvent(\"onResize\", bind(this._rsResizeHandler, this));\n\n\t\taddCss(document.body,\"webix_noselect\",1);\n\t},\n\t_getResizeDir: function(){\n\t\treturn this.getParentView()._vertical_orientation?\"y\":\"x\";\n\t},\n\t_rsResizeHandler:function(){\n\t\tlet cells,cDiff,diff,dir,i,limits,limitSizes,sizes,totalSize;\n\t\tif (this._rs_progress){\n\t\t\tcells = this._getResizerCells();\n\t\t\tdir = this._rs_progress[0];\n\t\t\t/*vector distance between resizer and stick*/\n\t\t\tdiff = this._resizeStick._last_result -this._rs_progress[2];\n\t\t\t/*new sizes for the resized cells, taking into account the stick position*/\n\t\t\tsizes = this._rsGetDiffCellSizes(cells,dir,diff);\n\t\t\t/*sum of cells dimensions*/\n\t\t\ttotalSize = cells[0][\"$\"+this._resizer_dim]+cells[1][\"$\"+this._resizer_dim];\n\t\t\tfor(i=0;i<2;i++){\n\t\t\t\tcDiff = (i?-diff:diff);/*if cDiff is positive, the size of i cell is increased*/\n\n\t\t\t\t/*max and min limits*/\n\t\t\t\tlimits = cells[i].$getSize(0,0);\n\t\t\t\t/*if size is bigger than max limit or size is smaller than min limit*/\n\t\t\t\tlet min = (dir==\"y\")?limits[2]:limits[0];\n\t\t\t\tlet max = (dir==\"y\")?limits[3]:limits[1];\n\n\t\t\t\t//if size is fixed, treat it as responsive (default behavior)\n\t\t\t\tif (min === max){\n\t\t\t\t\tmin = cells[i]._settings[ (dir==\"y\")?\"minHeight\":\"minWidth\" ]||3;\n\t\t\t\t\tmax = cells[i]._settings[ (dir==\"y\")?\"maxHeight\":\"maxWidth\" ]||100000;\n\t\t\t\t}\n\n\t\t\t\tif (cDiff>0&&max&&max<=sizes[i] || cDiff<0&&min&&min>=sizes[i]){\n\t\t\t\t\tthis._rsLimit[i] = (cDiff>0?max:min);\n\t\t\t\t\t/*new sizes, taking into account max and min limits*/\n\t\t\t\t\tlimitSizes = this._rsGetLimitCellSizes(cells,dir);\n\t\t\t\t\t/*stick position*/\n\t\t\t\t\tthis._resizeStick._dragobj.style[(dir==\"y\"?\"top\":\"left\")] = this._rs_progress[3] + limitSizes[0]+\"px\";\n\t\t\t\t\treturn;\n\t\t\t\t} else if(sizes[i]<3) {/*cells size can not be less than 1*/\n\t\t\t\t\tthis._resizeStick._dragobj.style[(dir==\"y\"?\"top\":\"left\")] = this._rs_progress[3] + i*totalSize+1+\"px\";\n\t\t\t\t} else {\n\t\t\t\t\tthis._rsLimit[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_getResizerCells:function(){\n\t\tvar cells,i,res;\n\t\tcells = this.getParentView()._cells;\n\t\tfor(i=0; i< cells.length;i++){\n\t\t\tif(cells[i]==this){\n\t\t\t\tres = [this._getRsCell(cells, i, 1, -1), this._getRsCell(cells, i, 1, 1)];\n\t\t\t\tif (!res[0] || !res[1])\n\t\t\t\t\tres = null;\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t},\n\t_getRsCell:function(cells, i, step, dir){\n\t\tvar cell = cells[i+(dir*step)];\n\t\tif(cell && cell._settings.hidden)\n\t\t\treturn this._getRsCell(cells, i, step+1, dir);\n\t\telse if(cell && cell._settings.$noresize)\n\t\t\treturn null;\n\t\telse\n\t\t\treturn cell;\n\t},\n\t_rsEnd:function(result){\n\t\tif (typeof result == \"undefined\") return;\n\n\t\tvar cells,dir,diff,size;\n\t\tvar vertical = this.getParentView()._vertical_orientation;\n\t\tthis._resizerStick = null;\n\t\tif (this._rs_progress){\n\t\t\tdir = this._rs_progress[0];\n\t\t\tdiff = result-this._rs_progress[2];\n\t\t\tcells = this._getResizerCells();\n\t\t\tif(cells[0]&&cells[1]){\n\t\t\t\t/*new cell sizes*/\n\t\t\t\tsize = this._rsGetCellSizes(cells,dir,diff);\n\n\t\t\t\tfor (let i=0; i<2; i++){\n\t\t\t\t\t//cell has not fixed size, of fully fixed layout\n\t\t\t\t\tvar cell_size = cells[i].$getSize(0,0);\n\t\t\t\t\tif (vertical?(cell_size[2] == cell_size[3]):(Math.abs(cell_size[1]-cell_size[0])<3)){\n\t\t\t\t\t\t/*set fixed sizes for both cells*/\n\t\t\t\t\t\tcells[i]._settings[this._resizer_dim]=size[i];\n\t\t\t\t\t\tif (cells[i]._bubble_size)\n\t\t\t\t\t\t\tcells[i]._bubble_size(this._resizer_dim, size[i], vertical);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar actualSize = cells[i].$view[vertical?\"offsetHeight\":\"offsetWidth\"];//cells[i][\"$\"+this._resizer_dim];\n\t\t\t\t\t\tcells[i]._settings.gravity = size[i]/actualSize*cells[i]._settings.gravity;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcells[0].resize();\n\n\t\t\t\tfor (let i = 0; i < 2; i++){\n\t\t\t\t\tif (cells[i].callEvent)\n\t\t\t\t\t\tcells[i].callEvent(\"onViewResize\",[]);\n\t\t\t\t\tcells[i].$view.removeAttribute(\"aria-dropeffect\");\n\t\t\t\t}\n\t\t\t\tcallEvent(\"onLayoutResize\", [cells]);\n\t\t\t}\n\t\t\tthis._rs_progress = false;\n\t\t}\n\t\tthis._rs_progress = false;\n\t\tthis._rs_started = false;\n\t\tthis._rsLimit = null;\n\t\tremoveCss(document.body,\"webix_noselect\");\n\n\t\tthis._viewobj.setAttribute(\"aria-grabbed\", \"false\");\n\t\tthis._viewobj.removeAttribute(\"aria-dropeffect\");\n\t},\n\t_rsGetLimitCellSizes: function(cells){\n\t\tvar size1,size2,totalSize;\n\t\ttotalSize = cells[0][\"$\"+this._resizer_dim]+cells[1][\"$\"+this._resizer_dim];\n\t\tif(this._rsLimit[0]){\n\t\t\tsize1 = this._rsLimit[0];\n\t\t\tsize2 = totalSize-size1;\n\t\t}\n\t\telse if(this._rsLimit[1]){\n\t\t\tsize2 = this._rsLimit[1];\n\t\t\tsize1 = totalSize-size2;\n\t\t}\n\t\treturn [size1,size2];\n\t},\n\t_rsGetDiffCellSizes:function(cells,dir,diff){\n\t\tvar sizes =[];\n\t\tvar styleDim = this._resizer_dim==\"height\"?\"offsetHeight\":\"offsetWidth\";\n\t\tfor(var i=0;i<2;i++)\n\t\t\tsizes[i] = cells[i].$view[styleDim]+(i?-1:1)*diff;\n\t\treturn sizes;\n\t},\n\t_rsGetCellSizes:function(cells,dir,diff){\n\t\tvar i,sizes,totalSize;\n\t\t/*if max or min dimentsions are set*/\n\t\tif(this._rsLimit[0]||this._rsLimit[1]){\n\t\t\tsizes = this._rsGetLimitCellSizes(cells,dir);\n\t\t}\n\t\telse{\n\t\t\tsizes = this._rsGetDiffCellSizes(cells,dir,diff);\n\t\t\tfor(i =0; i<2;i++ ){\n\t\t\t\t/*if stick moving is stopped outsize cells borders*/\n\t\t\t\tif(sizes[i]<0){\n\t\t\t\t\ttotalSize = sizes[0]+sizes[1];\n\t\t\t\t\tsizes[i] =1;\n\t\t\t\t\tsizes[1-i] = totalSize-1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn sizes;\n\t}\n};\n\nconst view = protoUI(api, MouseEvents, Destruction, base.view);\nexport default {api, view};","import {protoUI, ui} from \"../ui/core\";\nimport state from \"../core/state\";\n\nimport base from \"./view\";\nimport baseview from \"./baseview\";\n\n\nconst api = {\n\tname:\"align\",\n\tdefaults:{\n\t\tborderless:true,\n\t\tleft:0, top:0, right:0, bottom:0\n\t},\n\t$init:function(){\n\t\tthis._viewobj.className\t+= \" webix_view_align\";\n\t},\n\t_remove:function(){\n\t\tthis.body_setter({ });\n\t},\n\t_replace:function(new_view){\n\t\tthis._body_cell.destructor();\n\t\tthis._body_cell = new_view;\n\n\t\tthis._viewobj.appendChild(this._body_cell._viewobj);\n\t\tthis.resize();\n\t},\n\tgetChildViews:function(){\n\t\treturn [this._body_cell];\n\t},\n\tbody_setter:function(value){\n\t\tvalue._inner = { top:false, left:false, right:false, bottom:false};\n\t\tstate._parent_cell = this;\n\t\tthis._body_cell = ui._view(value);\n\n\t\tthis._viewobj.appendChild(this._body_cell._viewobj);\n\t\treturn value;\n\t},\n\talign_setter:function(value){\n\t\tif (typeof value === \"string\")\n\t\t\tvalue = value.split(\",\");\n\n\t\tthis._x_align = this._y_align = this._p_align = \"\";\n\t\tfor (var i=0; i<value.length; i++){\n\t\t\tvar c = value[i];\n\t\t\tif (c === \"center\" || c === \"left\" || c === \"right\")\n\t\t\t\tthis._x_align = c;\n\t\t\tif (c === \"top\" || c === \"bottom\" || c === \"middle\")\n\t\t\t\tthis._y_align = c;\n\t\t\tif (c === \"absolute\")\n\t\t\t\tthis._x_align = this._y_align = this._p_align = \"precise\";\n\t\t}\n\n\t\treturn value;\n\t},\n\tgetBody:function(){\n\t\treturn this._body_cell;\n\t},\n\t$setSize:function(x,y){\n\t\tbase.api.$setSize.call(this, x,y);\n\n\t\tvar dx, dy;\n\t\tif (this._p_align){\n\t\t\tdx = x - this._settings.left - this._settings.right;\n\t\t\tdy = y - this._settings.top - this._settings.bottom;\n\t\t} else {\n\t\t\tdx = this._desired_size[0] || x;\n\t\t\tdy = this._desired_size[2] || y;\n\t\t}\n\n\n\n\t\tthis._body_cell.$setSize(dx, dy);\n\n\t\tvar box = this._body_cell._viewobj;\n\n\t\tif (this._x_align == \"center\")\n\t\t\tbox.style.marginLeft = Math.ceil((x-dx)/2)+\"px\";\n\t\telse if (this._x_align == \"right\")\n\t\t\tbox.style.marginLeft = (x-dx)+\"px\";\n\t\telse\n\t\t\tbox.style.marginLeft = (this._p_align ? this._settings.left : 0) +\"px\";\n\n\t\tif (this._y_align == \"middle\") \n\t\t\tbox.style.marginTop = Math.ceil((y-dy)/2)+\"px\";\n\t\telse if (this._y_align == \"bottom\")\n\t\t\tbox.style.marginTop = (y-dy)+\"px\";\n\t\telse\n\t\t\tbox.style.marginTop = (this._p_align ? this._settings.top : 0) + \"px\";\n\t},\n\t$getSize:function(dx,dy){\n\t\tvar size = this._desired_size = this._body_cell.$getSize(0,0);\n\t\tvar self_size = baseview.api.$getSize.call(this, 0, 0);\n\t\n\t\tif (this._p_align){\n\t\t\tdx += this._settings.left + this._settings.right;\n\t\t\tdy += this._settings.top + this._settings.bottom;\n\t\t}\n\n\t\tif (!this._x_align || this._p_align){\n\t\t\tself_size[0] = size[0]+dx;\n\t\t\tself_size[1] = size[1]+dx;\n\t\t} else {\n\t\t\tself_size[0] = (self_size[0] || size[0] ) +dy;\n\t\t\tself_size[1] +=\tdx;\n\t\t}\n\n\t\tif (!this._y_align || this._p_align){\n\t\t\tself_size[2] = size[2]+dy;\n\t\t\tself_size[3] = size[3]+dy;\n\t\t} else {\n\t\t\tself_size[2] = (self_size[2] || size[2] ) +dy;\n\t\t\tself_size[3] +=\tdy;\n\t\t}\n\n\t\treturn self_size;\n\t}\n};\n\nconst view = protoUI(api, base.view);\nexport default {api, view};","import layout from \"../views/layout\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {uid, extend} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\n\n\nconst api = {\n\tname:\"tabview\",\n\tsetValue:function(val, config){\n\t\tthis._cells[0].setValue(val, config);\n\t},\n\tgetValue:function(){\n\t\treturn this._cells[0].getValue();\n\t},\n\tgetTabbar:function(){\n\t\treturn this._cells[0];\n\t},\n\tgetMultiview:function(){\n\t\treturn this._cells[1];\n\t},\n\taddView:function(obj){\n\t\tvar nid = this.getMultiview().addView(obj.body);\n\n\t\tobj.id = nid;\n\t\tobj.value = obj.header;\n\t\tdelete obj.body;\n\t\tdelete obj.header;\n\n\t\tvar t = this.getTabbar();\n\t\tt.addOption(obj);\n\n\t\treturn nid;\n\t},\n\tremoveView:function(id){\n\t\tvar t = this.getTabbar();\n\t\tt.removeOption(id);\n\t\tt.refresh();\n\t},\n\t$init:function(config){\n\t\tthis.$ready.push(this._init_tabview_handlers);\n\n\t\tvar cells = config.cells;\n\t\tvar tabs = [];\n\n\t\tassert(cells && cells.length, \"tabview must have cells collection\");\n\n\t\tfor (var i = cells.length - 1; i >= 0; i--){\n\t\t\tvar view = cells[i].body||cells[i];\n\t\t\tif (!view.id) view.id = \"view\"+uid();\n\t\t\ttabs[i] = { value:cells[i].header, id:view.id, close:cells[i].close, width:cells[i].width, hidden:  !!cells[i].hidden};\n\t\t\tcells[i] = view;\n\t\t}\n\n\t\tvar tabbar = { view:\"tabbar\", multiview:true };\n\t\tvar mview = { view:\"multiview\", cells:cells, animate:(!!config.animate) };\n\n\t\tif (config.value)\n\t\t\ttabbar.value = config.value;\n\n\t\tif (config.tabbar)\n\t\t\textend(tabbar, config.tabbar, true);\n\t\tif (config.multiview)\n\t\t\textend(mview, config.multiview, true);\n\t\t\n\t\ttabbar.options = tabbar.options || tabs;\n\n\t\tconfig.rows = [\n\t\t\ttabbar, mview\n\t\t];\n\n\t\tdelete config.cells;\n\t\tdelete config.tabs;\n\t},\n\t_init_tabview_handlers:function(){\n\t\tthis.getTabbar().attachEvent(\"onOptionRemove\", function(id){\n\t\t\tvar view = $$(id);\n\t\t\tif (view){\n\t\t\t\tvar parent = view.getParentView();\n\t\t\t\tif(parent)\n\t\t\t\t\tparent.removeView(view);\n\t\t\t}\n\t\t});\n\t}\n};\n\n\nconst view = protoUI(api,  layout.view);\nexport default {api, view};","import baselayout from \"../views/baselayout\";\nimport {protoUI} from \"../ui/core\";\nimport baseview from \"../views/baseview\";\nimport {debug_size_box_start, debug_size_box_end} from \"../webix/debug\";\n\n\nconst api = {\n\tname:\"abslayout\",\n\t$init:function(){\n\t\tthis.$view.className += \" webix_abslayout\";\n\t\tdelete this.rows_setter;\n\t\tdelete this.cols_setter;\n\t\tthis._collection = [];\n\t},\n\tcells_setter:function(cells){\n\t\tthis._collection = cells;\n\t},\n\t_parse_cells:function(){\n\t\tfor (var i = 0; i < this._collection.length; i++) {\n\t\t\tthis._collection[i]._inner = {};\n\t\t}\n\t\tbaselayout.api._parse_cells.call(this, this._collection);\n\t},\n\t$getSize:function(){\n\t\tvar self_size = baseview.api.$getSize.call(this, 0, 0);\n\t\tvar sub = null;\n\n\t\tfor (var i=0; i<this._cells.length; i++)\n\t\t\tif (this._cells[i]._settings.relative)\n\t\t\t\tsub = this._cells[i].$getSize(0,0);\n\n\t\tif (sub){\n\t\t\t//use child settings if layout's one was not defined\n\t\t\tif (self_size[1] >= 100000) self_size[1]=0;\n\t\t\tif (self_size[3] >= 100000) self_size[3]=0;\n\n\t\t\tself_size[0] = Math.max(self_size[0], sub[0]);\n\t\t\tself_size[1] = Math.max(self_size[1], sub[1]);\n\t\t\tself_size[2] = Math.max(self_size[2], sub[2]);\n\t\t\tself_size[3] = Math.max(self_size[3], sub[3]);\n\t\t}\n\n\t\treturn self_size;\n\t},\n\t$setSize:function(x,y){\n\t\tthis._layout_sizes = [x,y];\n\t\tif (DEBUG) debug_size_box_start(this);\n\n\t\tbaseview.api.$setSize.call(this,x,y);\n\t\tthis._set_child_size(x,y);\n\n\t\tif (DEBUG) debug_size_box_end(this, [x,y]);\n\t},\n\t_set_child_size:function(x,y){\n\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\tvar view = this._cells[i];\n\t\t\tvar conf = view._settings;\n\n\t\t\tvar sizes = view.$getSize(0,0);\n\t\t\tif (conf.relative){\n\t\t\t\tconf.left = conf.top = 0;\n\t\t\t\tview.$setSize(x,y);\n\t\t\t} else {\n\t\t\t\tview.$setSize(sizes[0], sizes[2]);\n\t\t\t}\n\n\t\t\tvar node = view.$view;\n\t\t\tvar options = [\"left\", \"right\", \"top\", \"bottom\"];\n\n\t\t\tfor (var j = 0; j < options.length; j++) {\n\t\t\t\tvar key = options[j];\n\t\t\t\tif (key in conf)\n\t\t\t\t\tnode.style[key] = conf[key] + \"px\";\n\t\t\t}\n\t\t}\n\t}\n};\n\n\nconst view = protoUI(api,  baselayout.view);\nexport default {api, view};","import abslayout from \"../views/abslayout\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {isUndefined, extend, copy} from \"../webix/helpers\";\nimport baseview from \"../views/baseview\";\n\n\nconst api = {\n\tname:\"gridlayout\",\n\tdefaults:{\n\t\tautoplace:true,\n\t\tgridColumns:2,\n\t\tgridRows:2,\n\t\tmargin:10,\n\t\tpadding:10\n\t},\n\tgridRows_setter:function(value){\n\t\treturn (this._actual_rows = value);\n\t},\n\tremoveView:function(id){\n\t\tabslayout.api.removeView.call(this, id);\n\t\tthis._do_compact();\n\t\tthis.callEvent(\"onChange\", []);\n\t},\n\t_check_default_pos:function(config){\n\t\tconfig.dx = config.dx || 1;\n\t\tconfig.dy = config.dy || 1;\n\n\t\tif (isUndefined(config.y) || isUndefined(config.x)){\n\t\t\tvar matrix = this._buildMatrix();\n\t\t\tfor (var y=0; y<this._actual_rows; y++)\n\t\t\t\tfor (var x=0; x<this._settings.gridColumns; x++){\n\t\t\t\t\tif (!matrix[x][y] && this._isFree(matrix, x, y, x+config.dx, y+config.dy)){\n\t\t\t\t\t\tconfig.x = x;\n\t\t\t\t\t\tconfig.y = y;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\tconfig.x = 0;\n\t\t\tconfig.y = this._actual_rows;\n\t\t}\n\n\t\t//ensure that view is not wider than grid\n\t\tvar exceed = config.x+config.dx - this._settings.gridColumns;\n\t\tif (exceed > 0)\n\t\t\tconfig.dx -= exceed;\n\t},\n\t_replace:function(new_view,target_id){\n\t\tif (isUndefined(target_id)){\n\t\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\t\tthis._cells[i].destructor();\n\t\t\tthis._collection = new_view;\n\t\t\tthis._parse_cells();\n\t\t} else {\n\t\t\tthis._check_default_pos(new_view.config);\n\t\t\tthis._cells.push(new_view);\n\n\t\t\tthis.$view.appendChild(new_view._viewobj);\n\n\t\t\tthis._reserveSpace(new_view.config, new_view.config.id);\n\t\t}\n\t\tthis._do_compact(true);\n\n\t\tconst form = this.getFormView();\n\t\tif (form) form._recollect_elements();\n\n\t\tif (!this._silent)\n\t\t\tthis.callEvent(\"onChange\", []);\n\t},\n\t_isFree:function(matrix, sx,sy, dx, dy){\n\t\tfor (var x=sx; x<dx; x++)\n\t\t\tfor (var y=sy; y<dy; y++){\n\t\t\t\tif (!matrix[x] || matrix[x][y])\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\treturn true;\n\t},\n\t_markMatrix:function(matrix, sub, id){\n\t\tfor (var x=0; x<sub.dx; x++)\n\t\t\tfor (var y=0; y<sub.dy; y++)\n\t\t\t\tmatrix[x+sub.x][y+sub.y] = id;\n\t},\n\t_canMoveRight:function(matrix, obj, sub){\n\t\tvar mx = this._settings.gridColumns;\n\t\tfor (var x=obj.x+obj.dx; (x+sub.dx)<=mx; x++){\n\t\t\tif (this._isFree(matrix, x, sub.y, x+sub.dx, sub.y+sub.dy))\n\t\t\t\treturn x-sub.x;\n\t\t}\n\t\treturn 0;\n\t},\n\t_canMoveLeft:function(matrix, obj, sub){\n\t\tfor (var x=obj.x-sub.dx; x>=0; x--){\n\t\t\tif (this._isFree(matrix, x, sub.y, x+sub.dx, sub.y+sub.dy))\n\t\t\t\treturn sub.x-x;\n\t\t}\n\t\treturn 0;\n\t},\n\t_canMoveTop:function(matrix, obj, sub){\n\t\tfor (var y=obj.y-sub.dy; y>=0; y--){\n\t\t\tif (this._isFree(matrix, sub.x, y, sub.x+sub.dx, y+sub.dy))\n\t\t\t\treturn sub.y-y;\n\t\t}\n\t\treturn 0;\n\t},\n\t_buildMatrix:function(id){\n\t\tvar m = [];\n\t\tfor (var x=0; x<this._settings.gridColumns; x++)\n\t\t\tm[x] = [];\n\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\tvar sub = this._cells[i].config;\n\t\t\tif (sub.id === id || sub.hidden) continue;\n\n\t\t\tthis._markMatrix(m, sub, sub.id);\n\t\t}\n\t\treturn m;\n\t},\n\t_do_compact:function(force){\n\t\t//do not correct places or grid, if autoplace disabled\n\t\tif (this._compact() || force)\n\t\t\tthis._apply_new_grid();\n\t},\n\t_compact:function(){\n\t\tif (!this._settings.autoplace) return false;\n\n\t\tvar mx = this._settings.gridColumns;\n\t\tvar my = this._actual_rows;\n\t\tvar matrix = this._buildMatrix();\n\t\tvar compacted = false;\n\n\t\ttop: for (var y=my-1; y>=0; y--){\n\t\t\tfor (var x=mx-1; x>=0; x--)\n\t\t\t\tif (matrix[x][y])\n\t\t\t\t\tcontinue top;\n\n\t\t\tcompacted = true;\n\t\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\t\tvar sub = this._cells[i].config;\n\t\t\t\tif (!sub.hidden && sub.y >= y){\n\t\t\t\t\tsub.y -= 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn compacted;\n\t},\n\t_reserveSpace:function(conf, id){\n\t\t//prevent x-overflow\n\t\tconf.x -= Math.max(0, conf.x + conf.dx - this._settings.gridColumns);\n\n\t\t//do not move other cells in non-compact mode\n\t\tif (!this._settings.autoplace){\n\t\t\tconf.y -= Math.max(0, conf.y + conf.dy - this._settings.gridRows);\n\t\t\treturn;\n\t\t}\n\n\t\tvar cross = [];\n\t\tvar matrix = this._buildMatrix(id);\n\n\t\tfor (let i=0; i<this._cells.length; i++){\n\t\t\tlet sub = this._cells[i].config;\n\t\t\tif (sub.id === id || sub.hidden) continue;\n\n\t\t\t//console.log(sub.y +\"<\"+ (conf.y+conf.dy), (sub.y+sub.dy) + \">\" +conf.y , sub.x +\"<\"+ (conf.x+conf.dx), (sub.x+sub.dx) + \">\" + conf.x);\n\t\t\tif (sub.y < conf.y+conf.dy && sub.y+sub.dy > conf.y &&\n\t\t\t\tsub.x < conf.x+conf.dx && sub.x+sub.dx > conf.x ){\n\t\t\t\t//intersection\n\t\t\t\tcross.push(sub);\n\t\t\t}\n\t\t}\n\n\t\tvar next = [];\n\t\tfor (let i=0; i<cross.length; i++){\n\t\t\t// check right\n\t\t\tlet sub = cross[i];\n\t\t\tthis._markMatrix(matrix, sub, 0);\n\n\t\t\tvar right = this._canMoveRight(matrix, conf, sub);\n\t\t\tif (right){\n\t\t\t\tsub.x += right;\n\t\t\t} else {\n\t\t\t\t// check left\n\t\t\t\tvar left = this._canMoveLeft(matrix, conf, sub);\n\t\t\t\tif (left){\n\t\t\t\t\tsub.x -= left;\n\t\t\t\t} else {\n\t\t\t\t\t//check top\n\t\t\t\t\tvar top = this._canMoveTop(matrix, conf, sub);\n\t\t\t\t\tif (top){\n\t\t\t\t\t\tsub.y -= top;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//move bottom\n\t\t\t\t\t\tsub.y = conf.y + conf.dy;\n\t\t\t\t\t\tnext.push(sub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markMatrix(matrix, sub, sub.id);\n\t\t}\n\t\t\n\t\t//when moving bottom, we need to iterate one more time, to resolve new intersections\n\t\tfor (let i=0; i<next.length; i++){\n\t\t\t//console.log(\"after correction for \"+next[i].id);\n\t\t\tthis._reserveSpace(next[i], next[i].id);\n\t\t}\n\t},\n\t_apply_new_grid:function(){\n\t\tvar rows = this._settings.gridRows;\n\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\tvar cell = this._cells[i].config;\n\t\t\tif (!cell.hidden)\n\t\t\t\trows = Math.max(rows, cell.y + cell.dy);\n\t\t}\n\n\t\tif (this._actual_rows != rows){\n\t\t\tthis._actual_rows = rows;\n\t\t\tthis.resize();\n\t\t}\n\t\tthis._set_child_size();\n\t},\n\tmoveView:function(id, obj){\n\t\tobj = extend($$(id).config, obj, true);\n\t\tthis._reserveSpace(obj, id);\n\t\tthis._do_compact(true);\n\t\tthis.callEvent(\"onChange\", []);\n\t},\n\tserialize:function(serializer){\n\t\tvar state = [];\n\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\tif (serializer){\n\t\t\t\tstate.push(serializer.call(this, this._cells[i]));\n\t\t\t} else {\n\t\t\t\tvar conf = this._cells[i].config;\n\t\t\t\tstate.push({ id:conf.id, name:conf.name, x:conf.x, y:conf.y, dx:conf.dx, dy:conf.dy });\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t},\n\tclearAll:function(){\n\t\tfor (var i=0; i < this._cells.length; i++)\n\t\t\tthis._cells[i].destructor();\n\t\tthis._cells = [];\n\t\tthis.callEvent(\"onChange\", []);\n\t},\n\trestore:function(state, factory){\n\t\tfactory = factory || this._settings.factory;\n\t\tstate = copy(state);\n\n\t\tthis._silent = true;\n\t\tvar ids = {};\n\n\t\tfor (let i = 0; i < state.length; i++) {\n\t\t\tvar conf = state[i];\n\t\t\tvar view = $$(conf.id);\n\t\t\tvar id;\n\t\t\tif (view){\n\t\t\t\textend(view.config, conf, true);\n\t\t\t\tid = view.config.id;\n\t\t\t} else {\n\t\t\t\tview = factory.call(this, conf);\n\t\t\t\tid = this.addView(view);\n\t\t\t}\n\t\t\tids[id] = 1;\n\t\t}\n\t\tfor (let i = this._cells.length-1; i >= 0; i--) {\n\t\t\tif (!ids[this._cells[i].config.id]){\n\t\t\t\tthis._cells[i].destructor();\n\t\t\t\tthis._cells.splice(i, 1);\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._apply_new_grid();\n\t\tthis._silent = false;\n\t},\n\t$getSize:function(){\n\t\tvar self_size = baseview.api.$getSize.call(this, 0, 0);\n\n\t\tfor (var i=0; i<this._cells.length; i++)\n\t\t\tthis._cells[i].$getSize(0,0);\n\n\t\tvar width = this._settings.cellWidth;\n\t\tvar height = this._settings.cellHeight;\n\t\tvar box = this._getActualSize(0,0, this._settings.gridColumns, this._actual_rows);\n\n\t\tif (width)\n\t\t\tself_size[0] = box.dx+box.x*2;\n\t\tif (height)\n\t\t\tself_size[2] = box.dy+box.y*2;\n\n\t\treturn self_size;\n\t},\n\t_getActualSize:function(x,y,w,h){\n\t\tvar margin = this._settings.margin;\n\t\tvar paddingX = this._settings.paddingX || this._settings.padding;\n\t\tvar paddingY = this._settings.paddingY || this._settings.padding;\n\n\t\tvar dx = this._settings.cellWidth;\n\t\tif (!dx) dx = (this.$width - 2 * paddingX + margin) / this._settings.gridColumns - margin;\n\t\tvar dy = this._settings.cellHeight;\n\t\tif (!dy) dy = (this.$height - 2 * paddingY + margin) / this._actual_rows - margin;\n\n\t\tvar left = paddingX+(dx+margin)*x;\n\t\tvar top = paddingY+(dy+margin)*y;\n\t\tvar width = Math.ceil(dx+(dx+margin)*(w-1));\n\t\tvar height = Math.ceil(dy+(dy+margin)*(h-1));\n\n\t\treturn { x:left, y:top, dx:width, dy:height };\n\t},\n\t_set_child_size:function(){\n\t\tfor (var i=0; i<this._cells.length; i++){\n\t\t\tvar view = this._cells[i];\n\t\t\tvar conf = view._settings;\n\n\t\t\tvar size = this._getActualSize(conf.x, conf.y, conf.dx, conf.dy);\t\t\t\n\t\t\tview.$getSize(0,0); //need to be called before $setSize\n\t\t\tview.$setSize(size.dx, size.dy);\n\n\t\t\tvar node = view.$view;\n\t\t\tnode.style.left = size.x + \"px\";\n\t\t\tnode.style.top = size.y + \"px\";\n\t\t}\n\t}\n};\n\n\nconst view = protoUI(api,  abslayout.view);\nexport default {api, view};","import layout from \"../views/layout\";\nimport {protoUI} from \"../ui/core\";\nimport {extend} from \"../webix/helpers\";\nimport FlexLayout from \"../core/flexlayout\";\n\n\nconst api = {\n\t$init:function(){\n\t\textend(this, FlexLayout, true);\n\t},\n\tname:\"flexlayout\"\n};\n\n\nconst view = protoUI(api,  layout.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport env from \"../webix/env\";\n\nimport layout from \"../views/layout\";\nimport toolbar from \"../views/toolbar\";\n\n\nconst api = {\n\tname:\"form\",\n\tdefaults:{\n\t\ttype:\"form\",\n\t\tautoheight:true\n\t},\n\t_default_height:-1,\n\t_form_classname:\"webix_form\",\n\t_form_vertical:true,\n\t$init:function(){\n\t\tthis._viewobj.setAttribute(\"role\", \"form\");\n\t},\n\t$getSize:function(dx, dy){\n\t\tif (this._scroll_y && !this._settings.width) dx += env.scrollSize;\n\n\t\tvar sizes = layout.api.$getSize.call(this, dx, dy);\n\n\t\tif (this._settings.scroll || !this._settings.autoheight){\n\t\t\tsizes[2] =  this._settings.height || this._settings.minHeight || 0;\n\t\t\tsizes[3] = this._settings.height || 100000;\n\t\t}\n\t\t\n\t\treturn sizes;\n\t}\n};\n\n\nconst view = protoUI(api, toolbar.view);\nexport default {api, view};","import template from \"../views/template\";\nimport Values from \"../core/values\";\nimport {addCss, removeCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {toNode} from \"../webix/helpers\";\n\n\nfunction _tagname(el) {\n\tif (!el.tagName) return null;\n\treturn el.tagName.toLowerCase();\n}\nfunction _attribute(el, name) {\n\tif (!el.getAttribute) return null;\n\tvar attr = el.getAttribute(name);\n\treturn attr ? attr.toLowerCase() : null;\n}\nfunction _get_html_value() {\n\tvar tagname = _tagname(this);\n\tif (_get_value[tagname])\n\t\treturn _get_value[tagname](this);\n\treturn _get_value.other(this);\n}\n\nvar _get_value = {\n\tradio: function(el){\n\t\tfor (var i = 0; i < el.length; i++)\n\t\t\tif (el[i].checked) return el[i].value;\n\t\treturn \"\";\n\t},\n\tinput: function(el) {\n\t\tvar type = _attribute(el, \"type\");\n\t\tif (type === \"checkbox\")\n\t\t\treturn el.checked;\t\t\t\n\t\treturn el.value;\n\t},\n\ttextarea: function(el) {\n\t\treturn el.value;\n\t},\n\tselect: function(el) {\n\t\tvar index = el.selectedIndex;\n\t\treturn el.options[index].value;\n\t},\n\tother: function(el) {\n\t\treturn el.innerHTML;\n\t}\n};\n\nfunction  _set_html_value(value) {\n\tvar tagname = _tagname(this);\n\tif (_set_value[tagname])\n\t\treturn _set_value[tagname]( this, value);\n\treturn _set_value.other( this, value);\n}\n\nvar _set_value = {\n\tradio:function(el, value){\n\t\tfor (var i = 0; i < el.length; i++)\n\t\t\tel[i].checked = (el[i].value == value);\n\t},\n\tinput: function(el, value) {\n\t\tvar type = _attribute(el, \"type\");\n\t\tif (type === \"checkbox\")\n\t\t\tel.checked = (value) ? true : false;\n\t\telse\n\t\t\tel.value = value;\n\t},\n\ttextarea: function(el, value) {\n\t\tel.value = value;\n\t},\n\tselect: function(el, value) {\n\t\tel.value = value;\n\t\t//incorrect option applied, select first option\n\t\tif(el.selectedIndex === -1) el.value = el.firstElementChild.value;\n\t},\n\tother: function(el, value) {\n\t\tel.innerHTML = value;\n\t}\n};\n\n\nconst api = {\n\tname:\"htmlform\",\n\t$init: function(config) {\n\t\tthis.elements = {};\n\t\tthis._default_values  = false;\n\n\t\tif (config.content && (config.container == config.content || !config.container && config.content == document.body))\n\t\t\tthis._copy_inner_content = true;\n\t},\n\tcontent_setter:function(content){\n\t\tcontent = toNode(content);\n\t\tif (this._copy_inner_content){\n\t\t\twhile (content.childNodes.length > 1)\n\t\t\t\tthis._viewobj.childNodes[0].appendChild(content.childNodes[0]);\n\t\t} else {\n\t\t\tthis._viewobj.childNodes[0].appendChild(content);\n\t\t}\n\t\tthis._parse_inputs();\n\t\treturn true;\n\t},\n\trender:function(){\n\t\ttemplate.api.render.apply(this, arguments);\n\t\tthis._parse_inputs();\n\t},\n\t_parse_inputs: function() {\n\t\tvar inputs = this._viewobj.querySelectorAll(\"[name]\");\n\t\tthis.elements = {};\n\n\n\t\tfor (var i=0; i<inputs.length; i++){\n\t\t\tvar el = inputs[i];\n\t\t\tvar name = _attribute(el, \"name\");\n\t\t\tif (name){\n\t\t\t\tvar tag = _tagname(el) === \"button\";\n\t\t\t\tvar type = _attribute(el, \"type\");\n\n\t\t\t\tvar cant_clear = tag || type === \"button\" || type === \"submit\";\n\n\t\t\t\tif (type === \"radio\"){\n\t\t\t\t\tvar stack = this.elements[name] || [];\n\t\t\t\t\tstack.tagName = \"radio\";\n\t\t\t\t\tstack.push(el);\n\t\t\t\t\tel = stack;\n\t\t\t\t}\n\n\t\t\t\tthis.elements[name] = el;\n\n\t\t\t\tel.getValue =  _get_html_value;\n\t\t\t\tel.setValue =  _set_html_value;\n\t\t\t\tel.$allowsClear = !cant_clear;\n\t\t\t}\n\t\t}\n\n\t\treturn this.elements;\n\t},\n\t_mark_invalid:function(id,obj){\n\t\tthis._clear_invalid(id,obj);\n\t\tvar el = this._viewobj.querySelector(\"[name=\\\"\" + id + \"\\\"]\");\n\t\tif (el) addCss(el, \"invalid\");\n\t},\n\t_clear_invalid:function(id){\n\t\tvar el = this._viewobj.querySelector(\"[name=\\\"\" + id + \"\\\"]\");\n\t\tif (el) removeCss(el, \"invalid\");\n\t},\n\tfocus:function(name){\n\t\tif (!name && this.$view.contains(document.activeElement)){\n\t\t\t// focus already inside of form, leaving\n\t\t\treturn false;\n\t\t}\n\t\tValues.focus.apply(this, arguments);\n\t}\n};\n\n\nconst view = protoUI(api,  template.view, Values);\nexport default {api, view};","import base from \"../views/view\";\nimport AutoTooltip from \"../core/autotooltip\";\nimport EditAbility from \"../core/editability\";\nimport MapCollection from \"../core/mapcollection\";\nimport MouseEvents from \"../core/mouseevents\";\nimport Scrollable from \"../core/scrollable\";\nimport SingleRender from \"../core/singlerender\";\nimport AtomDataLoader from \"../core/atomdataloader\";\nimport EventSystem from \"../core/eventsystem\";\nimport {locate, createCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\nimport {uid, extend, clone, isUndefined} from \"../webix/helpers\";\nimport {addCss, removeCss} from \"../webix/html\";\nimport RenderStack from \"../core/renderstack\";\nimport CodeParser from \"../core/codeparser\";\nimport editors from \"../webix/editors\";\n\nconst api = {\n\tname:\"property\",\n\t$init:function(){\n\t\tthis._contentobj.className+=\" webix_property\";\n\t\tthis._contentobj.setAttribute(\"role\", \"listbox\");\n\t\tthis._destroy_with_me = [];\n\n\t\tthis.attachEvent(\"onAfterEditStart\", function(id){\n\t\t\tvar node = this.getItemNode(id);\n\t\t\taddCss(node, \"webix_focused\");\n\t\t});\n\t\tthis.attachEvent(\"onAfterEditStop\", function(id, editor){\n\t\t\tvar node = this.getItemNode(editor.config.id);\n\t\t\tremoveCss(node, \"webix_focused\");\n\t\t});\n\n\t\tif (!this.types){\n\t\t\tthis.types = { \"default\" : this.type };\n\t\t\tthis.type.name = \"default\";\n\t\t}\n\t\tthis.type = clone(this.type);\n\t},\n\tdefaults:{\n\t\tnameWidth:100,\n\t\teditable:true\n\t},\n\ton_render:{\n\t\tpassword: editors.password.masterFormat,\n\t\tcheckbox:function(value){\n\t\t\treturn \"<input type='checkbox' class='webix_property_check' \"+(value?\"checked\":\"\")+\">\";\n\t\t},\n\t\tcolor:function(value){\n\t\t\tconst margin = (this.type.height - 20) / 2;\n\t\t\treturn \"<div class='webix_property_col_ind' style='margin-top:\"+margin+\"px;background-color:\"+(value||\"#FFFFFF\")+\";'></div>\" + value;\n\t\t}\n\t},\n\ton_edit:{\n\t\tlabel:false\n\t},\n\t_id:/*@attr*/\"webix_f_id\",\n\ton_click:{\n\t\twebix_property_check:function(ev){\n\t\t\tconst id = this.locate(ev);\n\t\t\tconst item = this.getItem(id);\n\t\t\tthis.callEvent(\"onCheck\", [id, item.value = !item.value]);\n\t\t\treturn false;\n\t\t}\n\t},\n\ton_dblclick:{\n\t},\n\tregisterType:function(name, data){\n\t\tif (!isUndefined(data.template))\n\t\t\tthis.on_render[name] = data.template;\n\t\tif (!isUndefined(data.editor))\n\t\t\tthis.on_edit[name] = data.editor;\n\t\tif (!isUndefined(data.click))\n\t\t\tfor (var key in data.click)\n\t\t\t\tthis.on_click[key] = data.click[key];\n\t},\n\telements_setter:function(data){\n\t\tthis._idToLine = {};\n\t\tfor(var i =0; i < data.length; i++){\n\t\t\tvar line = data[i];\n\t\t\tif (line.type == \"multiselect\")\n\t\t\t\tline.optionslist = true;\n\n\t\t\t//line.type \t= \tline.type||\"label\";\n\t\t\tline.id \t=\tline.id||uid();\n\t\t\tline.label \t=\tline.label||\"\";\n\t\t\tline.value \t=\tline.value||\"\";\n\t\t\tthis._idToLine[line.id] = i;\n\t\t\tthis._map_options(data[i]);\n\t\t}\n\t\treturn data;\n\t},\n\tshowItem:function(id){\n\t\tRenderStack.showItem.call(this, id);\n\t},\n\titem_setter:function(value){\n\t\treturn this.type_setter(value);\n\t},\n\ttype_setter:function(value){\n\t\treturn RenderStack.type_setter.call(this, value);\n\t},\n\tlocate:function(){\n\t\treturn locate(arguments[0], this._id);\n\t},\n\tgetItemNode:function(id){\n\t\treturn this._dataobj.childNodes[this._idToLine[id]];\n\t},\n\tgetItem:function(id){\n\t\treturn this._settings.elements[this._idToLine[id]];\n\t},\n\t_get_editor_type:function(id){\n\t\tvar type = this.getItem(id).type;\n\t\tif (type == \"checkbox\") return \"inline-checkbox\";\n\t\tvar alter_type = this.on_edit[type];\n\t\treturn (alter_type === false)?false:(alter_type||type);\n\t},\n\t_get_edit_config:function(id){\n\t\treturn this.getItem(id);\n\t},\n\t_find_cell_next:function(start, check , direction){\n\t\tlet row = this._idToLine[start.id];\n\t\tlet order = this._settings.elements;\n\t\t\n\t\tif (direction){\n\t\t\tfor (let i=row+1; i<order.length; i++){\n\t\t\t\tif (check.call(this, order[i].id))\n\t\t\t\t\treturn order[i].id;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i=row-1; i>=0; i--){\n\t\t\t\tif (check.call(this, order[i].id))\n\t\t\t\t\treturn order[i].id;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\tupdateItem:function(key, data){\n\t\tconst line = this.getItem(key);\n\t\tif (line)\n\t\t\textend(line, data||{}, true);\n\t\tthis.refresh();\n\t},\n\t_cellPosition:function(id){\n\t\tvar html = this.getItemNode(id);\n\t\treturn {\n\t\t\tleft:html.offsetLeft+this._settings.nameWidth,\n\t\t\ttop:html.offsetTop,\n\t\t\theight:html.firstChild.offsetHeight,\n\t\t\twidth:this._data_width,\n\t\t\tparent:this._contentobj\n\t\t};\n\t},\n\t_clear:function(){\n\t\tvar lines = this._settings.elements;\n\t\tfor (var i=0; i<lines.length; i++)\n\t\t\tlines[i].value = \"\";\n\t},\n\tclear:function(){\n\t\tthis._clear();\n\t\tthis._props_dataset = {};\n\t\tthis.refresh();\n\t},\n\tsetValues:function(data, update){\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.collapseNames(data, \"\", {}, (v) => isUndefined(this._idToLine[v]));\n\n\t\tif(!update) this._clear();\n\t\tfor(var key in data){\n\t\t\tvar line = this.getItem(key);\n\t\t\tif (line)\n\t\t\t\tline.value = data[key];\n\t\t}\n\n\t\tthis._props_dataset = data;\n\t\tthis.refresh();\n\t},\n\tgetValues:function(){\n\t\tvar data = clone(this._props_dataset||{});\n\t\tfor (var i = 0; i < this._settings.elements.length; i++) {\n\t\t\tvar line = this._settings.elements[i];\n\t\t\tif (line.type != \"label\")\n\t\t\t\tdata[line.id] = line.value;\n\t\t}\n\n\t\tif (this._settings.complexData)\n\t\t\tdata = CodeParser.expandNames(data);\n\n\t\treturn data;\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t},\n\t$setSize:function(x,y){\n\t\tif (base.api.$setSize.call(this, x, y)){\n\t\t\tthis._data_width = this._content_width - this._settings.nameWidth;\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$getSize:function(dx,dy){\n\t\tif (this._settings.autoheight){\n\t\t\tvar count = this._settings.elements.length;\n\t\t\tthis._settings.height = Math.max(this.type.height*count, this._settings.minHeight||0);\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx, dy);\n\t},\n\t_toHTML:function(){\n\t\tconst html = [];\n\t\tconst els = this._settings.elements;\n\t\tif (els) {\n\t\t\tconst height = `height:${this.type.height}px;line-height:${this.type.height}px;`;\n\t\t\tfor (let i=0; i<els.length; i++){\n\t\t\t\tconst data = els[i];\n\t\t\t\tif (data.css && typeof data.css == \"object\")\n\t\t\t\t\tdata.css = createCss(data.css);\n\n\t\t\t\tconst pre = \"<div \"+/*@attr*/\"webix_f_id\"+\"=\\\"\"+data.id+\"\\\"\"+(data.type!==\"label\"?\"role=\\\"option\\\" tabindex=\\\"0\\\"\":\"\")+\" class=\\\"webix_property_line \"+(data.css||\"\")+\"\\\">\";\n\t\t\t\tif (data.type == \"label\")\n\t\t\t\t\thtml[i] = pre+\"<div class='webix_property_label_line' style='\"+height+\"'>\"+data.label+\"</div></div>\";\n\t\t\t\telse {\n\t\t\t\t\tconst render = this.on_render[data.type];\n\t\t\t\t\tconst post = \"<div class='webix_property_label' style='\"+height+\"width:\"+this._settings.nameWidth+\"px'>\"+data.label+\"</div><div class='webix_property_value' style='\"+height+\"width:\"+this._data_width+\"px'>\";\n\n\t\t\t\t\tlet content;\n\t\t\t\t\tif (data.collection || data.options){\n\t\t\t\t\t\tcontent = data.template(data, this.type, data.value, data);\n\t\t\t\t\t} else if(data.format){\n\t\t\t\t\t\tcontent = data.format(data.value);\n\t\t\t\t\t} else\n\t\t\t\t\t\tcontent = data.value;\n\t\t\t\t\tif (render)\n\t\t\t\t\t\tcontent = render.call(this, data.value, data);\n\t\t\t\t\thtml[i] = pre+post+content+\"</div></div>\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn html.join(\"\");\n\t},\n\ttype:{\n\t\theight:24,\n\t\ttemplateStart:template(\"\"),\n\t\ttemplateEnd:template(\"</div>\")\n\t},\n\t$skin: function(){\n\t\tthis.type.height = $active.propertyItemHeight;\n\t}\n};\n\n\nconst view = protoUI(api, AutoTooltip, EditAbility, MapCollection, MouseEvents, Scrollable, SingleRender, AtomDataLoader, EventSystem, base.view);\nexport default {api, view};","import {index, triggerEvent, preventEvent} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {extend, copy, toFunctor, isArray} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nimport i18n from \"../webix/i18n\";\nimport MouseEvents from \"../core/mouseevents\";\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\nimport DateHelper from \"../core/date\";\nimport KeysNavigation from \"../core/keysnavigation\";\n\n\nconst api = {\n\tname:\"calendar\",\n\n\tdefaults:{\n\t\tdate: DateHelper.datePart(new Date()), //selected date, not selected by default\n\t\tnavigation: true,\n\t\tmonthSelect: true,\n\t\tweekHeader: true,\n\t\tmonthHeader: true,\n\t\tweekNumber: false,\n\t\tskipEmptyWeeks: false,\n\t\tcalendarHeader: \"%F %Y\",\n\t\t//calendarTime: \"%H:%i\",\n\t\tevents:DateHelper.isHoliday,\n\t\tminuteStep: 5,\n\t\ttimeIcon:\"wxi-clock\",\n\t\ticons: false,\n\t\ttimepickerHeight: 30,\n\t\theaderHeight: 30,\n\t\tdayTemplate: function(d){\n\t\t\treturn d.getDate();\n\t\t},\n\t\twidth: 260,\n\t\theight: 250,\n\t\tseparator:\", \"\n\t},\n\n\tdayTemplate_setter: template,\n\tcalendarHeader_setter:DateHelper.dateToStr,\n\tcalendarTime_setter:function(format){\n\t\tthis._calendarTime = format;\n\t\treturn DateHelper.dateToStr(format);\n\t},\n\tdate_setter:function(date){\n\t\tdate = DateHelper.copy( this._string_to_date(date) );\n\t\tdate.setDate(1);\n\t\treturn date;\n\t},\n\tmaxDate_setter:function(date){\n\t\treturn DateHelper.datePart( this._string_to_date(date) );\n\t},\n\tminDate_setter:function(date){\n\t\treturn DateHelper.datePart( this._string_to_date(date) );\n\t},\n\tminTime_setter:function(time){\n\t\tif(typeof(time) == \"string\"){\n\t\t\ttime = i18n.parseTimeFormatDate(time);\n\t\t\ttime = [time.getHours(), time.getMinutes()];\n\t\t}\n\t\treturn time;\n\t},\n\tmaxTime_setter:function(time){\n\t\tif(typeof(time) == \"string\"){\n\t\t\ttime = i18n.parseTimeFormatDate(time);\n\t\t\ttime = [time.getHours(), time.getMinutes()];\n\t\t}\n\t\treturn time;\n\t},\n\t_ariaFocus:function(){\n\t\t_event(this.$view, \"mousedown\", () => {\n\t\t\tthis._mouse_time = new Date();\n\t\t});\n\t\t_event(this.$view, \"focus\", e => {\n\t\t\t// in daterange\n\t\t\tif (this._settings.master) return;\n\n\t\t\tconst prev = e.relatedTarget;\n\t\t\tconst css = e.target.className.indexOf(\"webix_cal_day\") !== -1;\n\t\t\tif (prev && (new Date() - this._mouse_time > 100) && css && this.$view.contains(prev)){\n\t\t\t\tconst day = this._locate_day(e.target);\n\t\t\t\tif (!this._selectedDay(day)) this._moveSelection(day);\n\t\t\t}\n\t\t}, { capture: true });\n\t},\n\t$init: function() {\n\t\tthis._viewobj.className += \" webix_calendar\";\n\t\tthis._viewobj.setAttribute(\"role\", \"region\");\n\t\tthis._viewobj.setAttribute(\"aria-label\", i18n.aria.calendar);\n\n\t\t//special dates\n\t\tthis._special_dates = {};\n\t\tthis._selected_days = {};\n\t\tthis._zoom_level = 0;\n\n\t\t//navigation and aria\n\t\tthis._ariaFocus();\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t_onKeyPress:function(code, e){\n\t\tconst target = e.target, role = target.getAttribute(\"role\");\n\t\tif((code === 13 || code === 32) && (role == \"button\" || role == \"log\") && !this._settings.disabled){\n\t\t\ttriggerEvent(target, \"MouseEvent\", \"click\");\n\t\t\tpreventEvent(e);\n\t\t}\n\t},\n\tminuteStep_setter(value){\n\t\treturn Math.max( Math.min(value, 60), this.defaults.minuteStep );\n\t},\n\ttype_setter: function(value){\n\t\tif(value == \"time\"){\n\t\t\tthis._zoom_in = true;\n\t\t\tthis._zoom_level = -1;\n\t\t}\n\t\telse if(value == \"year\"){\n\t\t\tthis._fixed = true;\n\t\t}\n\t\treturn value;\n\t},\n\t$setSize:function(x,y){\n\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\t//repaint calendar when size changed\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$getSize:function(dx, dy){\n\t\tconst s = this._settings;\n\t\tif (s.cellHeight && !s.type){\n\t\t\tconst state = this._getDateBoundaries(s.date);\n\t\t\ts.height = s.cellHeight * state._rows + s.headerHeight + (s.weekHeader?$active.calendarWeekHeaderHeight:0) +\n\t\t\t\t(s.timepicker||this._icons?s.timepickerHeight:0) + (this._content_padding+$active.borderWidth)*2;\n\t\t}\n\t\treturn base.api.$getSize.call(this, dx,dy);\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tif (this.config.master) return; //in daterange\n\t\tvar start = this.getSelectedDate(true);\n\t\tvar date = DateHelper.copy(start || this.getVisibleDate());\n\t\tthis._moveSelection(date, mode, focus);\n\t},\n\t_moveSelection:function(date, mode, focus){\n\t\tconst css = this._zoom_logic[this._zoom_level]._keyshift(date, mode, this);\n\t\tif (focus !== false)\n\t\t\tthis._restore_focus(css);\n\t},\n\t_restore_focus:function(css, ind){\n\t\tlet sel;\n\t\tif (ind) {\n\t\t\tsel = this._viewobj.querySelector(\".webix_cal_body\");\n\t\t\tsel = sel.childNodes[ind.rind].childNodes[ind.cind + (this._settings.weekNumber?1:0)];\n\t\t} else\n\t\t\tsel = this._viewobj.querySelector(\".\"+css+\"[tabindex='0']\");\n\t\tif (sel) sel.focus();\n\t},\n\t_getDateBoundaries: function(date, reset) {\n\t\t// addition information about rendering event:\n\t\t// how many days from the previous month,\n\t\t// next,\n\t\t// number of weeks to display and so on\n\t\t\n\t\tif (!this._set_date_bounds || reset){\n\t\t\tvar month = date.getMonth();\n\t\t\tvar year = date.getFullYear();\n\n\t\t\tvar next = new Date(year, month+1, 1);\n\t\t\tvar start = DateHelper.weekStart(new Date(year, month, 1));\n\n\t\t\tvar days = Math.round((next.valueOf() - start.valueOf())/(60*1000*60*24));\n\t\t\tvar rows = this._settings.skipEmptyWeeks?Math.ceil(days/7):6;\n\n\t\t\tthis._set_date_bounds = { _month: month, _start:start, _next:next, _rows: rows};\n\t\t}\n\n\t\treturn this._set_date_bounds;\n\t},\n\t$skin:function(){\n\t\tif($active.calendar){\n\t\t\tif( $active.calendar.width)\n\t\t\t\tthis.defaults.width = $active.calendar.width;\n\t\t\tif( $active.calendar.height)\n\t\t\t\tthis.defaults.height = $active.calendar.height;\n\t\t\tif( $active.calendar.headerHeight)\n\t\t\t\tthis.defaults.headerHeight = $active.calendar.headerHeight;\n\t\t\tif( $active.calendar.timepickerHeight)\n\t\t\t\tthis.defaults.timepickerHeight = $active.calendar.timepickerHeight;\n\t\t}\n\t\tthis._content_padding = $active.layoutPadding.form;\n\t},\n\t_getColumnConfigSizes: function(date){ \n\t\tvar bounds = this._getDateBoundaries(date);\n\n\t\tvar s = this._settings;\n\t\tvar _columnsHeight = [];\n\t\tvar _columnsWidth = [];\n\n\t\tvar containerWidth = this._content_width - (this._content_padding+$active.borderWidth)*2;\n\n\t\tvar containerHeight = this._content_height - (s.monthHeader?s.headerHeight:0) - (s.weekHeader?$active.calendarWeekHeaderHeight:0) -\n\t\t\t(s.timepicker||this._icons?s.timepickerHeight:0) - (this._content_padding+$active.borderWidth)*2;\n\n\t\tvar columnsNumber = (s.weekNumber)?8:7;\n\t\tfor(var i=0; i<columnsNumber; i++) {\n\t\t\t_columnsWidth[i] = Math.ceil(containerWidth/(columnsNumber-i));\n\t\t\tcontainerWidth -= _columnsWidth[i];\n\t\t}\n\n\t\tvar rowsNumber = bounds._rows;\n\t\tfor (var k = 0; k < rowsNumber; k++) {\n\t\t\t_columnsHeight[k] = Math.ceil(containerHeight/(rowsNumber-k) );\n\t\t\tcontainerHeight -= _columnsHeight[k];\n\t\t}\n\t\treturn [_columnsWidth, _columnsHeight];\n\t},\n\ticons_setter: function(value){\n\t\tif(!value)\n\t\t\tthis._icons = null;\n\t\telse if(typeof value == \"object\")\n\t\t\tthis._icons = value;\n\t\telse\n\t\t\tthis._icons = this._icons2;\n\t},\n\t_icons: [],\n\t_icons2: [\n\n\t\t{\n\t\t\ttemplate: function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_today webix_cal_icon'>\"+i18n.calendar.today+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_today\": function(){\n\t\t\t\t\tvar date = new Date();\n\t\t\t\t\tif(!this._settings.timepicker)\n\t\t\t\t\t\tdate = DateHelper.datePart(date);\n\t\t\t\t\tthis.setValue(date, \"user\");\n\t\t\t\t\tthis.callEvent(\"onTodaySet\",[this.getSelectedDate()]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttemplate: function(){\n\t\t\t\treturn \"<span role='button' tabindex='0' class='webix_cal_icon_clear webix_cal_icon'>\"+i18n.calendar.clear+\"</span>\";\n\t\t\t},\n\t\t\ton_click:{\n\t\t\t\t\"webix_cal_icon_clear\": function(){\n\t\t\t\t\tthis.setValue(\"\", \"user\");\n\t\t\t\t\tthis.callEvent(\"onDateClear\",[this.getSelectedDate()]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t],\n\trefresh:function(){ this.render(); },\n\trender: function() {\n\t\t//reset zoom level\n\t\tthis._zoom_level = 0;\n\t\tthis._zoom_size = false;\n\n\t\tvar s = this._settings;\n\n\t\tif (!this.isVisible(s.id)) return;\n\t\tthis._current_time = DateHelper.datePart(new Date());\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\n\t\tvar date = this.getVisibleDate();\n\n\t\tvar bounds = this._getDateBoundaries(date, true);\n\t\tvar sizes = this._getColumnConfigSizes(date);\n\t\tvar cpad = this._content_padding + \"px\";\n\t\tvar width = sizes[0];\n\t\tvar height = sizes[1];\n\n\t\tvar html = \"\";\n\t\tif (s.monthHeader){\n\t\t\thtml += \"<div class='webix_cal_month' style='margin:0 \"+cpad+\"'><span role='log' aria-live='assertive' aria-atomic='true' class='webix_cal_month_name\"+((!s.monthSelect || !s.navigation)?\" webix_readonly'\":\"' role='button' tabindex='0'\")+\">\"+s.calendarHeader(date)+\"</span>\";\n\t\t\tif (s.navigation)\n\t\t\t\thtml += \"<div role='button' tabindex='0' aria-label='\"+i18n.aria.navMonth[0]+\"' class='webix_cal_prev_button'></div><div role='button' tabindex='0' aria-label='\"+i18n.aria.navMonth[1]+\"' class='webix_cal_next_button'></div>\";\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\tif(s.weekHeader)\n\t\t\thtml += \"<div class='webix_cal_header' style='margin:0 \"+cpad+\"' aria-hidden='true'>\"+this._week_template(width)+\"</div>\";\n\t\thtml += \"<div class='webix_cal_body' role='grid' style='margin:0 \"+cpad+\"'>\"+this._body_template(width, height, bounds)+\"</div>\";\n\n\t\tif (s.timepicker || this._icons){\n\t\t\thtml += \"<div class='webix_cal_footer' style='margin:0 \"+cpad+\"'>\";\n\t\t\tif(s.timepicker)\n\t\t\t\thtml += this._timepicker_template(date);\n\n\t\t\tif(this._icons)\n\t\t\t\thtml += this._icons_template();\n\t\t\thtml += \"</div>\";\n\t\t}\n\n\t\tthis._contentobj.innerHTML = html;\n\t\tthis._contentobj.firstChild.style.marginTop = cpad;\n\n\t\tif(s.type == \"time\"){\n\t\t\tthis._changeZoomLevel(-1,date);\n\t\t}\n\t\telse if(s.type == \"month\"){\n\t\t\tthis._changeZoomLevel(1,date);\n\t\t}\n\t\telse if(s.type == \"year\"){\n\t\t\tthis._changeZoomLevel(2,date);\n\t\t}\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\t_icons_template: function(date){\n\t\tvar html =\t\"<div class='webix_cal_icons'>\";\n\t\tvar icons = this._icons;\n\n\t\tfor(var i=0; i < icons.length; i++){\n\t\t\tif(icons[i].template){\n\t\t\t\tvar template = (typeof(icons[i].template) == \"function\"?icons[i].template: template(icons[i].template));\n\t\t\t\thtml += template.call(this,date);\n\t\t\t}\n\t\t\tif(icons[i].on_click){\n\t\t\t\textend(this.on_click,icons[i].on_click);\n\t\t\t}\n\t\t}\n\t\thtml += \"</div>\";\n\t\treturn html;\n\t},\n\t_timepicker_template:function(date){\n\t\tvar timeFormat = this._settings.calendarTime||i18n.timeFormatStr;\n\t\tvar clock = this._settings.timeIcon;\n\t\tvar tpl = \"\";\n\n\t\tif(!this._settings.master)\n\t\t\ttpl = \"<div role='button' tabindex='0' class='webix_cal_time\"+(this._icons?\" webix_cal_time_icons\":\"\")+\"'><span class='webix_icon \"+clock+\"'></span> \"+timeFormat(date)+\"</div>\";\n\t\telse{\n\t\t\t//daterange needs two clocks\n\t\t\tvar range_date = copy($$(this._settings.master)._settings.value);\n\t\t\tif(DateHelper.equal(range_date.end, date))\n\t\t\t\trange_date.start = range_date.end;\n\t\t\t\t\n\t\t\tfor(var i in range_date){\n\t\t\t\ttpl += \"<div role='button' tabindex='0' class='webix_range_time_\"+i+\" webix_cal_time'><span class='webix_icon \"+clock+\"'></span> \"+timeFormat(range_date[i])+\"</div>\";\n\t\t\t}\n\t\t}\n\t\treturn tpl;\n\t},\n\t_week_template: function(widths){\n\t\tvar s = this._settings;\n\t\tvar week_template = \"\";\n\t\tvar correction = 0;\n\n\t\tif(s.weekNumber) {\n\t\t\tcorrection = 1;\n\t\t\tweek_template += \"<div class='webix_cal_week_header' style='width: \"+widths[0]+\"px;' >\"+(s.calendarWeekHeader||\"\")+\"</div>\";\n\t\t}\n\t\t\n\t\tvar k = (DateHelper.startOnMonday)?1:0;\n\t\tfor (var i=0; i<7; i++){ // 7 days total\n\t\t\tvar day_index = (k + i) % 7; // 0 - Sun, 6 - Sat as in Locale.date.day_short\n\t\t\tvar day = i18n.calendar.dayShort[day_index]; // 01, 02 .. 31\n\t\t\tweek_template += \"<div day='\"+day_index+\"' style='width: \"+widths[i+correction]+\"px;' >\"+day+\"</div>\";\n\t\t}\n\t\t\n\t\treturn week_template;\n\t},\n\tblockDates_setter:function(value){\n\t\treturn toFunctor(value, this.$scope);\n\t},\n\t_day_css:function(day, bounds){\n\t\tvar css = \"\", isOutside = false;\n\t\tif (DateHelper.equal(day, this._current_time))\n\t\t\tcss += \" webix_cal_today\";\n\t\tif (!this._checkDate(day))\n\t\t\tcss += \" webix_cal_day_disabled\";\n\t\tif (day.getMonth() != bounds._month){\n\t\t\tisOutside = true;\n\t\t\tcss += \" webix_cal_outside\";\n\t\t}\n\t\tif (!isOutside && this._selectedDay(day))\n\t\t\tcss += \" webix_cal_select\";\n\t\tif (this._settings.events)\n\t\t\tcss+=\" \"+(this._settings.events(day, isOutside) || \"\");\n\t\tcss += \" webix_cal_day\";\n\t\treturn css;\n\t},\n\t_body_template: function(widths, heights, bounds){\n\t\tconst s = this._settings;\n\t\tconst start = s.weekNumber ? 1 : 0;\n\t\tlet day = DateHelper.datePart(DateHelper.copy(bounds._start));\n\t\tlet weekNumber = DateHelper.getISOWeek(DateHelper.add(day, 2, \"day\", true));\n\n\t\tlet html = \"\", focusable, sqSize;\n\t\tfor (let y=0; y<heights.length; y++){\n\t\t\thtml += \"<div class='webix_cal_row' role='row' style='height:\"+heights[y]+\"px;line-height:\"+heights[y]+\"px'>\";\n\n\t\t\tif (start){\n\t\t\t\t// recalculate week number for the first week of a year\n\t\t\t\tif(!day.getMonth() && day.getDate()<7)\n\t\t\t\t\tweekNumber =  DateHelper.getISOWeek(DateHelper.add(day,2,\"day\", true));\n\t\t\t\thtml += \"<div class='webix_cal_week_num' aria-hidden='true' style='width:\"+widths[0]+\"px'>\"+weekNumber+\"</div>\";\n\t\t\t}\n\n\t\t\tfor (let x=start; x<widths.length; x++){\n\t\t\t\tconst sel = this._selectedDay(day);\n\t\t\t\tconst css = this._day_css(day, bounds);\n\t\t\t\tlet d = s.dayTemplate.call(this, day);\n\n\t\t\t\tlet alabel = \"\";\n\t\t\t\tif (typeof d == \"object\"){\n\t\t\t\t\talabel = d.aria || alabel;\n\t\t\t\t\td = d.text;\n\t\t\t\t} else\n\t\t\t\t\talabel = DateHelper.dateToStr(i18n.aria.dateFormat)(day);\n\n\t\t\t\tconst isOutside = day.getMonth() != bounds._month;\n\t\t\t\tlet tabindex = sel && !isOutside ? \"0\" : \"-1\";\n\t\t\t\tif (day.getDate() == 1 && !isOutside) tabindex = \"$webix_tabindex\";\n\t\t\t\tif (tabindex == \"0\") focusable = true;\n\n\t\t\t\tsqSize = Math.min(heights[y], widths[x]);\n\t\t\t\thtml += \"<div day='\"+x+\"' role='gridcell' \"+(isOutside?\"aria-hidden='true'\":\"\")+\" aria-label='\"+alabel+\n\t\t\t\t\t\"' tabindex='\"+tabindex+\"' aria-selected='\"+(sel && !isOutside?\"true\":\"false\")+\"' class='\"+css+\"' style='text-align:center; width:\"+widths[x]+\n\t\t\t\t\t\"px'><span aria-hidden='true' class='webix_cal_day_inner' style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+d+\"</span></div>\";\n\t\t\t\tday = DateHelper.add(day, 1, \"day\");\n\n\t\t\t\tif (day.getHours())\n\t\t\t\t\tday = DateHelper.datePart(day);\n\t\t\t}\n\n\t\t\thtml += \"</div>\";\n\t\t\tweekNumber++;\n\t\t}\n\t\treturn html.replace(\"$webix_tabindex\", (focusable || s.master) ? \"-1\" : \"0\");\n\t},\n\t_changeDate:function(dir, step){\n\t\tif(!step) { step = this._zoom_logic[this._zoom_level]._changeStep; }\n\n\t\tconst now = this._settings.date;\n\t\tconst next = DateHelper.add(now, dir*step, \"month\", true);\n\t\tthis._changeDateInternal(now, next, dir);\n\t},\n\t_changeDateInternal:function(now, next, dir){\n\t\tif(this.callEvent(\"onBeforeMonthChange\", [now, next])){\n\t\t\tif (this._zoom_level){\n\t\t\t\tthis._update_zoom_level(next);\n\t\t\t} else {\n\t\t\t\tthis.showCalendar(next);\n\t\t\t\tif (this._settings.monthHeader && this._settings.navigation){\n\t\t\t\t\tconst css = \"webix_cal_\"+(dir>0?\"next\":\"prev\")+\"_button\";\n\t\t\t\t\tthis._restore_focus(css);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.callEvent(\"onAfterMonthChange\", [next, now]);\n\t\t}\n\t},\n\t_zoom_logic:{\n\t\t\"-2\":{\n\t\t\t_isBlocked: function(i){\n\t\t\t\tvar config = this._settings,\n\t\t\t\t\tdate = config.date,\n\t\t\t\t\tisBlocked = false;\n\n\t\t\t\tvar minHour = (config.minTime ? config.minTime[0] : 0);\n\t\t\t\tvar maxHour = (config.maxTime ? (config.maxTime[0] + ( config.maxTime[1] ? 1 : 0 )) : 24);\n\n\t\t\t\tvar minMinute = (config.minTime && (date.getHours()==minHour) ? config.minTime[1] : 0);\n\t\t\t\tvar maxMinute = (config.maxTime && config.maxTime[1] && (date.getHours()==(maxHour-1)) ? config.maxTime[1] : 60);\n\n\t\t\t\tif(this._settings.blockTime){\n\t\t\t\t\tvar d = DateHelper.copy(date);\n\t\t\t\t\td.setMinutes(i);\n\t\t\t\t\tisBlocked = this._settings.blockTime(d);\n\t\t\t\t}\n\t\t\t\treturn (i < minMinute || i >= maxMinute || isBlocked);\n\n\t\t\t},\n\t\t\t_setContent:function(next, i){ next.setMinutes(i); },\n\t\t\t_findActive:function(date, mode, calendar){\n\t\t\t\tif(!this._isBlocked.call(calendar, date.getMinutes()))\n\t\t\t\t\treturn date;\n\t\t\t\telse{\n\t\t\t\t\tvar step = calendar._settings.minuteStep;\n\t\t\t\t\tvar newdate = DateHelper.add(date, mode ==\"right\"?step:-step, \"minute\", true);\n\t\t\t\t\tif(date.getHours() === newdate.getHours())\n\t\t\t\t\t\treturn  this._findActive(newdate, mode, calendar);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"-1\":{\n\t\t\t_isBlocked: function(i){\n\t\t\t\tvar config = this._settings,\n\t\t\t\t\tdate = config.date;\n\n\t\t\t\tvar minHour = (config.minTime? config.minTime[0]:0);\n\t\t\t\tvar maxHour = (config.maxTime? config.maxTime[0]+(config.maxTime[1]?1:0):24);\n\n\t\t\t\tif (i < minHour || i >= maxHour) return true;\n\n\t\t\t\tif(config.blockTime){\n\t\t\t\t\tvar d = DateHelper.copy(date);\n\t\t\t\t\td.setHours(i);\n\t\t\t\t\t\n\t\t\t\t\tvar minMinute = (config.minTime && (i==minHour) ? config.minTime[1] : 0);\n\t\t\t\t\tvar maxMinute = (config.maxTime && config.maxTime[1] && (i==(maxHour-1)) ? config.maxTime[1] : 60);\n\n\t\t\t\t\tfor (var j=minMinute; j<maxMinute; j+= config.minuteStep){\n\t\t\t\t\t\td.setMinutes(j);\n\t\t\t\t\t\tif (!config.blockTime(d))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t_setContent:function(next, i){ next.setHours(i); },\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate, inc, step = calendar._settings.minuteStep;\n\t\t\t\t\n\t\t\t\tif(mode === \"bottom\" || mode === \"top\"){\n\t\t\t\t\tdate.setHours(mode===\"bottom\"?23:0);\n\t\t\t\t\tdate.setMinutes(mode===\"bottom\"?55:0);\n\t\t\t\t\tdate.setSeconds(0);\n\t\t\t\t\tdate.setMilliseconds(0);\n\t\t\t\t\tnewdate = date;\n\t\t\t\t}\n\t\t\t\telse if(mode === \"left\" || mode === \"right\"){//minutes\n\n\t\t\t\t\tinc = (mode===\"right\"?step:-step);\n\t\t\t\t\tif(mode === \"left\" && date.getMinutes() < step ) inc = 60-step;\n\t\t\t\t\tif(mode === \"right\" && date.getMinutes() >= (60-step)) inc = step-60;\n\t\t\t\t\tinc -= date.getMinutes()%step;\n\t\t\t\t\tnewdate = calendar._zoom_logic[\"-2\"]._findActive(DateHelper.add(date, inc, \"minute\"), mode, calendar);\n\t\t\t\t}\n\t\t\t\telse if(mode === \"up\" || mode === \"down\"){ //hours\n\t\t\t\t\tinc = mode===\"down\"?1:-1;\n\t\t\t\t\tif(mode === \"down\" && date.getHours() === 23) inc = -23;\n\t\t\t\t\tif(mode === \"up\" && date.getHours() === 0) inc = 23;\n\t\t\t\t\tnewdate = this._findActive(DateHelper.add(date, inc, \"hour\"), mode, calendar);\n\t\t\t\t}\n\t\t\t\telse if(mode === false)\n\t\t\t\t\tnewdate = this._findActive(date, mode, calendar);\n\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\n\t\t\t\treturn \"webix_cal_block\"+(mode === \"left\" || mode === \"right\"?\"_min\":\"\");\n\t\t\t},\n\t\t\t_findActive:function(date, mode, calendar){\n\t\t\t\tif(!this._isBlocked.call(calendar, date.getHours()))\n\t\t\t\t\treturn date;\n\t\t\t\telse{\n\t\t\t\t\tvar newdate = DateHelper.add(date, mode ==\"down\"?1:-1, \"hour\", true);\n\t\t\t\t\tif(date.getDate() === newdate.getDate())\n\t\t\t\t\t\treturn  this._findActive(newdate, mode, calendar);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"0\":{//days\n\t\t\t_changeStep:1,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?1:-1), \"month\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.getFullYear(), date.getMonth()+1, 0);\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setDate(1));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"day\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?1:-1), \"week\");\n\t\t\t\t\n\t\t\t\tif(!calendar._checkDate(newdate))\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t\n\t\t\t\tif(newdate)\n\t\t\t\t\tcalendar.selectDate(newdate, true, false, \"user\");\n\t\t\t\treturn \"webix_cal_day\";\n\t\t\t},\n\t\t\t\n\t\t},\n\t\t\"1\":{\t//months\n\t\t\t_isBlocked: function(i){\n\t\t\t\tconst date = this.getVisibleDate();\n\t\t\t\tdate.setMonth(i);\n\n\t\t\t\tvar blocked = (this._settings.blockDates && this._settings.blockDates.call(this,date));\n\t\t\t\tvar min = this._settings.minDate,\n\t\t\t\t\tmax = this._settings.maxDate,\n\t\t\t\t\tyear = this._settings.date.getFullYear();\n\n\t\t\t\tif (min && !blocked){\n\t\t\t\t\tvar minYear = min.getFullYear();\n\t\t\t\t\tblocked = year<minYear || (year==minYear && min.getMonth()>i);\n\t\t\t\t}\n\n\t\t\t\tif (max && !blocked){\n\t\t\t\t\tvar maxYear = max.getFullYear();\n\t\t\t\t\tblocked = year>maxYear || (year==maxYear && max.getMonth()<i);\n\t\t\t\t}\n\n\t\t\t\treturn blocked;\n\t\t\t},\n\t\t\t_correctDate: function(date,calendar){\n\t\t\t\tdate = DateHelper.monthStart(date);\n\n\t\t\t\tif (date < calendar._settings.minDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t}\n\t\t\t\telse if (date > calendar._settings.maxDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t}\n\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\t_getTitle:function(date){ return date.getFullYear(); },\n\t\t\t_getContent:function(i){ return i18n.calendar.monthShort[i]; },\n\t\t\t_setContent:function(next, i){ if(i!=next.getMonth()) next.setDate(1);next.setMonth(i); },\n\t\t\t_changeStep:12,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?1:-1), \"year\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.setMonth(11));\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setMonth(0));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"month\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?4:-4), \"month\");\n\n\t\t\t\tnewdate = calendar._correctDate(newdate);\n\n\t\t\t\tif(!calendar._checkDate(newdate)){\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn \"webix_cal_block\";\n\t\t\t}\n\t\t},\n\t\t\"2\":{\t//years\n\t\t\t_isBlocked: function(i){\n\t\t\t\ti += this._zoom_start_date;\n\n\t\t\t\tconst date = this.getVisibleDate();\n\t\t\t\tdate.setFullYear(i);\n\n\t\t\t\tvar blocked = (this._settings.blockDates && this._settings.blockDates.call(this,date));\n\t\t\t\tvar min = this._settings.minDate;\n\t\t\t\tvar max = this._settings.maxDate;\n\n\t\t\t\tif (blocked || (min && min.getFullYear() > i) || (max && max.getFullYear() < i))\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\t_correctDate: function(date,calendar){\n\t\t\t\tdate = DateHelper.yearStart(date);\n\t\t\t\tif (date < calendar._settings.minDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.minDate);\n\t\t\t\t}\n\t\t\t\telse if (date > calendar._settings.maxDate){\n\t\t\t\t\tdate = DateHelper.copy(calendar._settings.maxDate);\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\t_getTitle:function(date, calendar){\n\t\t\t\tvar start = date.getFullYear();\n\t\t\t\tcalendar._zoom_start_date = start = start - start%10 - 1;\n\t\t\t\treturn start+\" - \"+(start+10 + 1);\n\t\t\t},\n\t\t\t_getContent:function(i, calendar){ return calendar._zoom_start_date+i; },\n\t\t\t_setContent:function(next, i, calendar){ next.setFullYear(calendar._zoom_start_date+i); },\n\t\t\t_changeStep:12*10,\n\t\t\t_keyshift:function(date, mode, calendar){\n\t\t\t\tvar newdate = date;\n\t\t\t\tif(mode === \"pgup\" || mode === \"pgdown\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"pgdown\"?10:-10), \"year\");\n\t\t\t\telse if(mode === \"bottom\")\n\t\t\t\t\tnewdate = new Date(date.setYear(calendar._zoom_start_date+10));\n\t\t\t\telse if(mode === \"top\")\n\t\t\t\t\tnewdate = new Date(date.setYear(calendar._zoom_start_date));\n\t\t\t\telse if(mode === \"left\" || mode === \"right\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"right\"?1:-1), \"year\");\n\t\t\t\telse if(mode === \"up\" || mode === \"down\")\n\t\t\t\t\tnewdate = DateHelper.add(date, (mode===\"down\"?4:-4), \"year\");\n\n\t\t\t\tnewdate = calendar._correctDate(newdate);\n\n\t\t\t\tif(!calendar._checkDate(newdate))\n\t\t\t\t\tnewdate = calendar._findActive(date, mode);\n\t\t\t\t\n\t\t\t\tif(newdate){\n\t\t\t\t\tcalendar._update_zoom_level(newdate);\n\t\t\t\t\tcalendar.selectDate(newdate, false, false, \"user\");\n\t\t\t\t}\n\n\t\t\t\treturn \"webix_cal_block\";\n\t\t\t}\n\t\t}\n\t},\n\t_correctBlockedTime: function(){\n\t\tvar i, isDisabledHour, isDisabledMinutes;\n\t\tisDisabledHour = this._zoom_logic[-1]._isBlocked.call(this,this._settings.date.getHours());\n\t\tif(isDisabledHour){\n\t\t\tfor (i= 0; i< 24; i++){\n\t\t\t\tif(!this._zoom_logic[-1]._isBlocked.call(this,i)){\n\t\t\t\t\tthis._settings.date.setHours(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tisDisabledMinutes = this._zoom_logic[-2]._isBlocked.call(this,this._settings.date.getMinutes());\n\t\tif(isDisabledMinutes){\n\t\t\tfor (i=0; i<60; i+=this._settings.minuteStep){\n\t\t\t\tif(!this._zoom_logic[-2]._isBlocked.call(this,i)){\n\t\t\t\t\tthis._settings.date.setMinutes(i);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_update_zoom_level:function(date){\n\t\tvar config, css, height, i, index,  sections, selected, type, width, zlogic, temp, sqSize;\n\t\tvar html = \"\";\n\t\tvar cpad = this._content_padding + \"px\";\n\n\t\tconfig = this._settings;\n\t\tindex = 2 - (config.weekHeader?0:1) - (config.monthHeader?0:1);\n\t\tzlogic = this._zoom_logic[this._zoom_level];\n\t\tsections  = this._contentobj.childNodes;\n\n\t\tif (date)\n\t\t\tthis.define(\"date\", date);\n\t\ttype = config.type;\n\n\t\t//store width and height of draw area\n\t\tif (!this._zoom_size){\n\n\t\t\tthis._reserve_box_height = this._contentobj.offsetHeight - (config.monthHeader||this._zoom_in?config.headerHeight:0) -\n\t\t\t\t(this._content_padding+$active.borderWidth)*2;\n\t\t\tif(type != \"year\" && type != \"month\")\n\t\t\t\tthis._reserve_box_height -= config.timepickerHeight;\n\n\t\t\tthis._reserve_box_width = sections[index].offsetWidth;\n\t\t\tthis._zoom_size = 1;\n\t\t}\n\n\t\t//main section\n\t\tif (this._zoom_in){\n\t\t\t//hours and minutes\n\t\t\theight = this._reserve_box_height/6;\n\t\t\tvar timeColNum = 6;\n\t\t\tvar timeFormat = this._calendarTime||i18n.timeFormat;\n\t\t\tvar enLocale = timeFormat.match(/%([a,A])/);\n\t\t\tif(enLocale)\n\t\t\t\ttimeColNum++;\n\t\t\twidth = parseInt((this._reserve_box_width-3)/timeColNum,10);\n\t\t\tsqSize = Math.min(width,height);\n\n\t\t\thtml += \"<div class='webix_time_header' style='margin:0 \"+cpad+\"'>\"+this._timeHeaderTemplate(width,enLocale)+\"</div>\";\n\t\t\thtml += \"<div  class='webix_cal_body' style='height:\"+this._reserve_box_height+\"px; margin:0 \"+cpad+\";'>\";\n\n\t\t\t// check and change blocked selected time\n\t\t\tthis._correctBlockedTime();\n\n\t\t\thtml += \"<div role='grid' class='webix_hours'><div role='row'>\";\n\t\t\tselected = config.date.getHours();\n\t\t\ttemp = DateHelper.copy(config.date);\n\n\t\t\tfor (i= 0; i< 24; i++){\n\t\t\t\tcss=\"\";\n\t\t\t\tif(enLocale){\n\t\t\t\t\tif(i%4===0){\n\t\t\t\t\t\tvar label = (!i ? i18n.am[0] : (i==12?i18n.pm[0]:\"\"));\n\t\t\t\t\t\thtml += \"<div class='webix_cal_block_empty\"+css+\"' style='\"+this._getCalSizesString(width,height)+\"clear:both;\"+\"'>\"+label+\"</div>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(this._zoom_logic[-1]._isBlocked.call(this,i)){\n\t\t\t\t\tcss += \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected ==  i)\n\t\t\t\t\tcss += \" webix_selected\";\n\n\t\t\t\t\n\t\t\t\ttemp.setHours(i);\n\n\t\t\t\thtml += \"<div aria-label='\"+DateHelper.dateToStr(i18n.aria.hourFormat)(temp)+\"' role='gridcell'\"+\n\t\t\t\t\t\" tabindex='\"+(selected==i?\"0\":\"-1\")+\"' aria-selected='\"+(selected==i?\"true\":\"false\")+\n\t\t\t\t\t\"' class='webix_cal_block\"+css+\"' data-value='\"+i+\"' style='\"+this._getCalSizesString(width,height)+(i%4===0&&!enLocale?\"clear:both;\":\"\")+\n\t\t\t\t\t\"'><span style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+DateHelper.toFixed(enLocale?(!i||i==12?12:i%12):i)+\"</span></div>\";\n\t\t\t}\n\t\t\thtml += \"</div></div>\";\n\n\t\t\thtml += \"<div role='grid' class='webix_minutes'><div role='row'>\";\n\t\t\tselected = config.date.getMinutes();\n\t\t\ttemp = DateHelper.copy(config.date);\n\n\n\t\t\tfor (i=0; i<60; i+=config.minuteStep){\n\t\t\t\tcss = \"\";\n\t\t\t\tif(this._zoom_logic[-2]._isBlocked.call(this,i)){\n\t\t\t\t\tcss = \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected ==  i)\n\t\t\t\t\tcss = \" webix_selected\";\n\n\t\t\t\ttemp.setMinutes(i);\n\n\t\t\t\thtml += \"<div aria-label='\"+DateHelper.dateToStr(i18n.aria.minuteFormat)(temp)+\"' role='gridcell' tabindex='\"+(selected==i?\"0\":\"-1\")+\n\t\t\t\t\t\"' aria-selected='\"+(selected==i?\"true\":\"false\")+\"' class='webix_cal_block webix_cal_block_min\"+css+\"' data-value='\"+i+\"' style='\"+\n\t\t\t\t\tthis._getCalSizesString(width,height)+((i/config.minuteStep)%2===0?\"clear:both;\":\"\")+\"'><span style='display:inline-block; \"+\n\t\t\t\t\tthis._getCalSizesString(sqSize,sqSize)+\"'>\"+DateHelper.toFixed(i)+\"</span></div>\";\n\t\t\t}\n\t\t\thtml += \"</div></div>\";\n\n\t\t\thtml += \"</div>\";\n\t\t\thtml += \"<div class='webix_time_footer' style='margin:0 \"+cpad+\"'>\"+this._timeButtonsTemplate()+\"</div>\";\n\t\t\tthis._contentobj.innerHTML = html;\n\t\t\tthis._contentobj.firstChild.style.marginTop = cpad;\n\t\t} else {\n\t\t\t//years and months\n\n\t\t\t//reset header\n\t\t\tif (config.monthHeader){\n\t\t\t\tconst header = sections[0].childNodes;\n\t\t\t\tconst title = zlogic._getTitle(config.date, this);\n\t\t\t\tif (header[0].innerHTML != title) header[0].innerHTML = title;\n\n\t\t\t\tif (config.navigation){\n\t\t\t\t\tconst labels = i18n.aria[\"nav\"+(this._zoom_level==1?\"Year\":\"Decade\")];\n\t\t\t\t\theader[1].setAttribute(\"aria-label\", labels[0]);\n\t\t\t\t\theader[2].setAttribute(\"aria-label\", labels[1]);\n\t\t\t\t}\n\t\t\t} else\t//needed for \"year\" to set start value\n\t\t\t\tzlogic._getTitle(config.date, this);\n\n\t\t\theight = Math.floor(this._reserve_box_height/3);\n\t\t\twidth = Math.floor(this._reserve_box_width/4);\n\t\t\tsqSize = Math.min(height, width);\n\n\t\t\tselected = (this._zoom_level === 1) ? config.date.getMonth() : config.date.getFullYear() - this._zoom_start_date;\n\t\t\tfor (i=0; i<12; i++){\n\t\t\t\tcss = \"\";\n\t\t\t\tif (zlogic._isBlocked.call(this, i)) {\n\t\t\t\t\tcss = \" webix_cal_day_disabled\";\n\t\t\t\t}\n\t\t\t\telse if(selected == i)\n\t\t\t\t\tcss = \" webix_selected\";\n\n\t\t\t\tvar format = i18n.aria[(this._zoom_level==1?\"month\":\"year\")+\"Format\"];\n\t\t\t\thtml+=\"<div role='gridcell' aria-label='\"+DateHelper.dateToStr(format)(config.date)+\n\t\t\t\t\t\"' tabindex='\"+(css.indexOf(\"selected\")!==-1?\"0\":\"-1\")+\n\t\t\t\t\t\"' aria-selected='\"+(css.indexOf(\"selected\")!==-1?\"true\":\"false\")+\n\t\t\t\t\t\"' class='webix_cal_block\"+css+\"' data-value='\"+i+\"' style='\"+this._getCalSizesString(width,height)+\n                    \"'><span style='display:inline-block; \"+this._getCalSizesString(sqSize,sqSize)+\"'>\"+zlogic._getContent(i, this)+\"</span></div>\";\n\t\t\t}\n\t\t\tif (config.weekHeader){\n\t\t\t\tsections[index-1].style.display = \"none\";\n\t\t\t\tif (index === 1) sections[index].style.marginTop = cpad;\n\t\t\t}\n\t\t\tsections[index].innerHTML = \"<div role='row'>\" + html + \"</div>\";\n\t\t\tif (type != \"year\" && type != \"month\"){\n\t\t\t\tif(!sections[index+1])\n\t\t\t\t\tthis._contentobj.innerHTML += \"<div class='webix_time_footer' style='margin:0 \"+cpad+\"'>\"+this._timeButtonsTemplate()+\"</div>\";\n\t\t\t\telse\n\t\t\t\t\tsections[index+1].innerHTML = this._timeButtonsTemplate();\n\t\t\t} else if (sections[index+1]){\n\t\t\t\tsections[index+1].style.display = \"none\";\n\t\t\t}\n\t\t\tsections[index].style.height = this._reserve_box_height+\"px\";\n\t\t}\n\t},\n\t_getCalSizesString: function(width,height){\n\t\treturn \"width:\"+width+\"px; height:\"+height+\"px; line-height:\"+height+\"px;\";\n\t},\n\t_timeButtonsTemplate: function(){\n\t\treturn \"<input type='button' style='width:100%' class='webix_cal_done' value='\"+i18n.calendar.done+\"'>\";\n\t},\n\t_timeHeaderTemplate: function(width,enLocale){\n\t\tvar w1 = width*(enLocale?5:4);\n\t\tvar w2 = width*2;\n\t\treturn \"<div class='webix_cal_hours' style='width:\"+w1+\"px'>\"+i18n.calendar.hours+\"</div><div class='webix_cal_minutes' style='width:\"+w2+\"px'>\"+i18n.calendar.minutes+\"</div>\";\n\t},\n\t_changeZoomLevel: function(zoom,date){\n\t\tvar oldzoom = this._zoom_level;\n\t\tif(this.callEvent(\"onBeforeZoom\",[zoom, oldzoom])){\n\t\t\tthis._zoom_level = zoom;\n\n\t\t\tif(zoom)\n\t\t\t\tthis._update_zoom_level(date);\n\t\t\telse\n\t\t\t\tthis.showCalendar(date);\n\t\t\tthis.callEvent(\"onAfterZoom\",[zoom, oldzoom]);\n\t\t}\n\t},\n\t_correctDate:function(date){\n\t\tif(this._zoom_logic[this._zoom_level]._correctDate && !this._checkDate(date))\n\t\t\tdate = this._zoom_logic[this._zoom_level]._correctDate(date,this);\n\t\treturn date;\n\t},\n\t_mode_selected:function(target, config){\n\t\tvar next = this._locate_date(target);\n\t\tvar zoom = this._zoom_level-(this._fixed?0:1);\n\n\t\tnext = this._correctDate(next);\n\t\tif(this._checkDate(next)){\n\t\t\tthis._changeZoomLevel(zoom, next);\n\t\t\tvar type = this._settings.type;\n\t\t\tif(type == \"month\" || type == \"year\")\n\t\t\t\tthis._selectDate(next, false, config);\n\t\t}\n\t},\n\t// selects date and redraw calendar\n\t_selectDate: function(date, add, config){\n\t\tif(this.callEvent(\"onBeforeDateSelect\", [date])){\n\t\t\tthis.selectDate(date, true, add, config);\n\t\t\tthis.callEvent(\"onAfterDateSelect\", [date]);\n\t\t}\n\t},\n\t_locate_day:function(target, ind){\n\t\tconst cind = index(target) - (this._settings.weekNumber?1:0);\n\t\tconst rind = index(target.parentNode);\n\t\tif (ind) return { cind, rind };\n\n\t\tconst date = DateHelper.add(this._getDateBoundaries()._start, cind + rind*7, \"day\", true);\n\t\tif (this._settings.timepicker){\n\t\t\tdate.setHours(this._settings.date.getHours());\n\t\t\tdate.setMinutes(this._settings.date.getMinutes());\n\t\t}\n\t\treturn date;\n\t},\n\t_locate_date:function(target){\n\t\tvar value = target.getAttribute(\"data-value\")*1;\n\t\tvar level = (target.className.indexOf(\"webix_cal_block_min\")!=-1?this._zoom_level-1:this._zoom_level);\n\t\tvar next = this.getVisibleDate();\n\n\t\tthis._zoom_logic[level]._setContent(next, value, this);\n\t\treturn next;\n\t},\n\ton_click:{\n\t\twebix_cal_prev_button: function(){\n\t\t\tthis._changeDate(-1);\n\t\t},\n\t\twebix_cal_next_button: function(){\n\t\t\tthis._changeDate(1);\n\t\t},\n\t\twebix_cal_day_disabled: function(){\n\t\t\treturn false;\n\t\t},\n\t\twebix_cal_outside: function(){\n\t\t\tif(!this._settings.navigation)\n\t\t\t\treturn false;\n\t\t},\n\t\twebix_cal_day: function(e, id, target){\n\t\t\tconst date = this._locate_day(target);\n\t\t\tconst ind = this._settings.multiselect ? this._locate_day(target, true) : null;\n\n\t\t\tconst add = this._settings.multiselect === \"touch\"  || (e.ctrlKey || e.metaKey);\n\t\t\tthis._selectDate(date, add, \"user\");\n\n\t\t\tthis._restore_focus(\"webix_cal_day\", ind);\n\t\t},\n\t\twebix_cal_time:function(){\n\t\t\tif(this._zoom_logic[this._zoom_level-1]){\n\t\t\t\tthis._zoom_in = true;\n\t\t\t\tvar zoom = this._zoom_level - 1;\n\t\t\t\tthis._changeZoomLevel(zoom);\n\t\t\t}\n\t\t},\n\t\twebix_range_time_start:function(){\n\t\t\t$$(this._settings.master)._time_mode = \"start\";\n\t\t},\n\t\twebix_range_time_end:function(){\n\t\t\t$$(this._settings.master)._time_mode = \"end\";\n\t\t},\n\t\twebix_cal_done:function(){\n\t\t\tlet date = this.getVisibleDate();\n\t\t\tif (this._zoom_in) {\n\t\t\t\tconst start = this.getSelectedDate(true);\n\t\t\t\tif (start) {\n\t\t\t\t\tstart.setHours(date.getHours());\n\t\t\t\t\tstart.setMinutes(date.getMinutes());\n\t\t\t\t\tdate = start;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdate = this._correctDate(date);\n\t\t\tthis._selectDate(date, false, \"user\");\n\t\t},\n\t\twebix_cal_month_name:function(){\n\t\t\tif (!this._settings.navigation) return;\n\n\t\t\tthis._zoom_in = false;\n\t\t\t//maximum zoom reached\n\t\t\tif (this._zoom_level == 2 || !this._settings.monthSelect) return;\n\n\t\t\tvar zoom = Math.max(this._zoom_level, 0) + 1;\n\t\t\tthis._changeZoomLevel(zoom);\n\t\t},\n\t\twebix_cal_block:function(e, id, trg){\n\t\t\tif (this._zoom_in){\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_day_disabled\") !== -1)\n\t\t\t\t\treturn false;\n\n\t\t\t\tconst next = this._locate_date(trg);\n\t\t\t\tthis._update_zoom_level(next);\n\n\t\t\t\tlet css = \"webix_cal_block\";\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_block_min\") !== -1)\n\t\t\t\t\tcss = \"webix_cal_block_min\";\n\t\t\t\tthis._restore_focus(css);\n\t\t\t} else {\n\t\t\t\tif (trg.className.indexOf(\"webix_cal_day_disabled\") == -1)\n\t\t\t\t\tthis._mode_selected(trg, \"user\");\n\t\t\t}\n\t\t}\n\t},\n\t_string_to_date: function(date, format){\n\t\tif (!date)\n\t\t\treturn DateHelper.datePart(new Date());\n\n\t\tif (typeof date == \"string\"){\n\t\t\tif (format)\n\t\t\t\tdate = DateHelper.strToDate(format)(date);\n\t\t\telse\n\t\t\t\tdate = i18n.parseFormatDate(date);\n\t\t}\n\t\treturn date;\n\t},\n\t_checkDate: function(date){\n\t\tvar blockedDate = (this._settings.blockDates && this._settings.blockDates.call(this,date));\n\t\tvar minDate = this._settings.minDate;\n\t\tvar maxDate = this._settings.maxDate;\n\t\tvar outOfRange = (minDate && date < minDate) || (maxDate && date >= DateHelper.add(maxDate, 1, \"day\", true));\n\t\treturn !blockedDate && !outOfRange;\n\t},\n\t_findActive:function(date, mode){\n\t\tvar dir = (mode === \"top\" || mode === \"left\" || mode === \"pgup\" || mode === \"up\") ? -1 : 1;\n\t\tvar newdate = DateHelper.add(date, dir, \"day\", true);\n\t\tif (this._checkDate(newdate))\n\t\t\treturn newdate;\n\t\telse {\n\t\t\tvar compare;\n\t\t\tif(this._zoom_level === 0) compare = (date.getMonth() === newdate.getMonth());\n\t\t\telse if(this._zoom_level === 1 ) compare = (date.getFullYear() === newdate.getFullYear());\n\t\t\telse if(this._zoom_level === 2) compare = (newdate.getFullYear() > this._zoom_start_date && newdate.getFullYear() < this._zoom_start_date+10);\n\n\t\t\tif(compare)\n\t\t\t\treturn this._findActive(newdate, mode);\n\t\t}\n\t},\n\tshowCalendar: function(date) {\n\t\tthis.define(\"date\", date);\n\t\tthis.render();\n\t\tthis.resize();\n\t},\n\t_selectedDay: function(day){\n\t\treturn day && this._selected_days[day.valueOf()];\n\t},\n\tgetSelectedDate: function(first) {\n\t\tconst result = [];\n\n\t\tconst keys = Object.keys(this._selected_days);\n\t\tconst length = first ? Math.min(1, keys.length) : keys.length;\n\t\tfor (let i=0; i<length; i++)\n\t\t\tresult.push(DateHelper.copy(this._selected_days[keys[i]]));\n\n\t\treturn (this.config.multiselect && !first) ? result : (result[0] || null);\n\t},\n\tgetVisibleDate: function() {\n\t\treturn DateHelper.copy(this._settings.date);\n\t},\n\tsetValue: function(date, config){\n\t\tthis.selectDate(date, true, false, config);\n\t},\n\tgetValue: function(format){\n\t\tlet date = this.getSelectedDate();\n\n\t\tif(isArray(date)){\n\t\t\tdate = date.map(date => this._formatValue(date, format));\n\t\t\tif(this._settings.stringResult)\n\t\t\t\tdate = date.join(this._settings.separator);\n\t\t}\n\t\telse\n\t\t\tdate = this._formatValue(date, format);\n\n\t\treturn date;\n\t},\n\t_formatValue: function(date, format){\n\t\tif (format)\n\t\t\tdate = DateHelper.dateToStr(format)(date);\n\t\telse if(this._settings.stringResult){\n\t\t\tif(this._settings.type == \"time\")\n\t\t\t\tdate = i18n.parseTimeFormatStr(date);\n\t\t\telse\n\t\t\t\tdate = i18n.parseFormatStr(date);\n\t\t}\n\t\treturn date;\n\t},\n\tselectDate: function(date, show, add, config){\n\t\tif (!date || !add || !this.config.multiselect)\n\t\t\tthis._selected_days = {};\n\n\t\tif (date){\n\t\t\tif(typeof date == \"string\")\n\t\t\t\tdate = date.split(this._settings.separator);\n\t\t\telse if (!isArray(date)) date = [date];\n\t\t\tfor (let i=0; i<date.length; i++){\n\t\t\t\tconst days = this._string_to_date(date[i]);\n\t\t\t\tconst key = DateHelper.datePart(DateHelper.copy(days)).valueOf();\n\t\t\t\tif (this._selected_days[key] && add)\n\t\t\t\t\tdelete this._selected_days[key];\n\t\t\t\telse\n\t\t\t\t\tthis._selected_days[key] = days;\n\n\t\t\t\tif (!this.config.multiselect)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tif (date.length && show)\n\t\t\t\tthis.showCalendar(date[0]);\n\t\t}\n\n\t\tif (show !== false)\n\t\t\tthis.render();\n\n\t\tthis.callEvent(\"onChange\",[date,config]);\n\t}, \n\tlocate:function(){ return null; }\n};\n\n\nconst view = protoUI(api, KeysNavigation, MouseEvents, base.view, EventSystem);\nexport default {api, view};","import {locate, addCss, removeCss} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {bind} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\nimport {$active} from \"../webix/skin\";\n\nimport color from \"../webix/color\";\nimport KeysNavigation from \"../core/keysnavigation\";\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\n\nconst api = {\n\tname:\"colorboard\",\n\tdefaults:{\n\t\ttemplate:(obj) => {\n\t\t\treturn `<div class=\"webix_color_item\" style=\"background-color:${obj.val};\"></div>`;\n\t\t},\n\t\tpalette:null,\n\t\theight:250,\n\t\twidth:260,\n\t\tcols:11,\n\t\trows:10,\n\t\tminLightness:0.15,\n\t\tmaxLightness:1,\n\t\tnavigation:true,\n\t\tgrayScale:true,\n\t\ttype:\"material\" // \"classic\"\n\t},\n\t$init:function(){\n\t\t_event(this._viewobj, \"click\", bind(function(e){\n\n\t\t\t// prevent selection the main item container\n\t\t\tconst node = e.target.parentNode;\n\t\t\tlet value = locate(node, /*@attr*/\"webix_val\");\n\t\t\t// locate can return null in case of drag\n\t\t\tif (value){\n\t\t\t\tconst oldvalue = this._settings.value;\n\t\t\t\tthis.setValue(value, \"user\");\n\n\t\t\t\t//value can be changed via setValue\n\t\t\t\tvalue = this._settings.value;\n\n\t\t\t\tthis.callEvent(\"onItemClick\", [value, e]);\n\t\t\t\tif (value != oldvalue)\n\t\t\t\t\tthis.callEvent(\"onSelect\", [value]);\n\t\t\t}\n\t\t}, this));\n\n\t\tthis.$view.setAttribute(\"role\", \"grid\");\n\t\tthis._viewobj.setAttribute(\"aria-readonly\", \"true\");\n\t},\n\t_get_clear_palette:function(){\n\t\treturn [\n\t\t\t\"#F34336\",\n\t\t\t\"#FF9700\",\n\t\t\t\"#FFEA3B\",\n\t\t\t\"#4CB050\",\n\t\t\t\"#009788\",\n\t\t\t\"#00BCD4\",\n\t\t\t\"#2196F3\",\n\t\t\t\"#3F51B5\",\n\t\t\t\"#673BB7\",\n\t\t\t\"#9C28B1\",\n\t\t\t\"#EA1E63\",\n\t\t];\n\t},\n\t_set_item_focus:function(){\n\t\tif(!this.getValue())\n\t\t\tthis.moveSelection(\"up\");\n\t},\n\t_findIndex:function(value){\n\t\tconst pal = this._settings.palette;\n\t\tvalue = (value || \"\").toUpperCase();\n\t\tfor(let r= 0, rows= pal.length; r < rows; r++)\n\t\t\tfor(let c= 0, cols = pal[r].length; c < cols; c++){\n\t\t\t\tif(pal[r][c].toUpperCase() == value){\n\t\t\t\t\treturn {row:r, col:c};\n\t\t\t\t}\n\t\t\t}\n\t\treturn null;\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t_getBox:function(){\n\t\treturn this._viewobj.firstChild;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tif(this.isVisible(this._settings.id)){\n\t\t\t// clear previous\n\t\t\tif (this._activeSelection){\n\t\t\t\tconst oldCell = this._getCell(this._activeSelection);\n\t\t\t\tthis._setSelection(oldCell, false);\n\t\t\t}\n\n\t\t\tconst ind = this._activeSelection = this._findIndex(value);\n\t\t\tif (ind){\n\t\t\t\tconst cell = this._getCell(ind);\n\t\t\t\tthis._setSelection(cell, true);\n\t\t\t}\n\t\t}\n\t},\n\t_getCell(ind){\n\t\treturn this._viewobj.lastChild.childNodes[ind.row].childNodes[ind.col];\n\t},\n\t_setSelection(cell, state){\n\t\tif (state){\n\t\t\tcell.setAttribute(\"tabindex\", \"0\");\n\t\t\tcell.setAttribute(\"aria-selected\", \"true\");\n\t\t\taddCss(cell, \"webix_color_selected\");\n\t\t} else {\n\t\t\tcell.setAttribute(\"tabindex\", \"-1\");\n\t\t\tcell.removeAttribute(\"aria-selected\");\n\t\t\tremoveCss(cell, \"webix_color_selected\");\n\t\t}\n\t},\n\t/* handle colors */\n\t_numToHex:function(n){\n\t\treturn color.toHex(n, 2);\n\t},\n\t_rgbToHex:function(r,g,b){\n\t\treturn \"#\"+this._numToHex( Math.floor(r)) +this._numToHex( Math.floor(g)) + this._numToHex(Math.floor(b));\n\t},\n\t_hslToRgb:function(h, s, l){\n\t\tlet r, g, b;\n\t\tif(!s){\n\t\t\tr = g = b = l; // achromatic\n\t\t}else{\n\t\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\tlet p = 2 * l - q;\n\t\t\tr = this._hue2rgb(p, q, h + 1/3);\n\t\t\tg = this._hue2rgb(p, q, h);\n\t\t\tb = this._hue2rgb(p, q, h - 1/3);\n\t\t}\n\n\t\treturn {r:r * 255, g:g * 255, b:b * 255};\n\t},\n\t_hue2rgb:function(p, q, t){\n\t\tif(t < 0) t += 1;\n\t\tif(t > 1) t -= 1;\n\t\tif (t < 1/6)\n\t\t\treturn p + (q - p) * 6 * t; \n\t\telse if (t <= 1/2)\n\t\t\treturn q;\n\t\telse if (t < 2/3) \n\t\t\treturn p + (q - p) * (2/3 - t) * 6;\n\t\telse\n\t\t\treturn p;\n\t},\n\t_lightenRgb:function(rgb, lt){\n\t\t/*\tcolor = color * alpha + background * (1 - alpha); */\n\t\tconst r = rgb[0]*lt + 255*(1-lt);\n\t\tconst g = rgb[1]*lt + 255*(1-lt);\n\t\tconst b = rgb[2]*lt + 255*(1-lt);\n\t\treturn {r, g, b};\n\t},\n\t_getGrayScale:function(colCount){\n\t\tconst gray = [];\n\t\tlet\tval = 255,\n\t\t\tstep = val / colCount;\n\n\t\tfor(let i=0; i < colCount; i++){\n\t\t\tval = Math.round(val > 0 ? val : 0);\n\t\t\tgray.push(this._rgbToHex(val, val, val));\n\t\t\tval -= step;\n\t\t}\n\t\tgray[gray.length - 1] = \"#000000\";\n\t\treturn gray;\n\t},\n\t_initPalette:function(config){\n\t\t/* default palette (material and custom) */\n\t\tconst clearColors = this._get_clear_palette();\t\t\n\t\tconfig.cols = clearColors.length; // always use the same set\n\n\t\tconst colors = [];\n\n\t\tlet colorRows = config.rows - 1; // a row is reserved for clear colors\t\t\n\t\tlet lightStep = 1/config.rows;\n\t\tlet colorRange = null;\n\n\t\tif (this._settings.grayScale){\n\t\t\tconst grayColors = this._getGrayScale(config.cols);\n\t\t\tcolors.push(grayColors.reverse()); // inverted order\n\t\t\tlightStep = 1/colorRows;\n\t\t\tcolorRows -= 1;\n\t\t}\n\n\t\tcolors.push(clearColors);\n\n\t\tfor(let step = 0, lt = config.maxLightness; step < colorRows; step++){\n\t\t\tlt-=lightStep;\n\t\t\tcolorRange = [];\n\t\t\tfor(let col = 0; col < config.cols; col++ ){\n\t\t\t\tconst clearRgb = color.toRgb(clearColors[col]);\n\t\t\t\tconst val = this._lightenRgb(clearRgb, lt);\n\t\t\t\tcolorRange.push(this._rgbToHex(val.r, val.g, val.b));\n\t\t\t}\n\t\t\tcolors.push(colorRange);\n\t\t}\n\t\tthis._settings.palette = colors;\n\t},\n\t_initOldPalette:function(config){\n\t\t/* old (classic) palette */\n\t\tconst colors = [];\n\t\tconst colorStep = 1/config.cols;\n\n\t\tlet colorRows = config.rows;\n\t\tlet colorRange = null;\n\n\t\tif (this._settings.grayScale){\n\t\t\tcolors.push(this._getGrayScale(config.cols));\n\t\t\tcolorRows -= 1;\n\t\t}\n\n\t\tlet lightStep = (config.maxLightness - config.minLightness)/colorRows;\n\n\t\tfor(let step = 0, lt = config.minLightness; step < colorRows; step++){\n\t\t\tcolorRange = [];\n\t\t\tfor(let c = 0, col = 0; c < config.cols; c++ ){\n\t\t\t\tconst val = this._hslToRgb(col, 1, lt );\n\t\t\t\tcolorRange.push(this._rgbToHex(val.r, val.g, val.b));\n\t\t\t\tcol += colorStep;\n\t\t\t}\n\t\t\tcolors.push(colorRange);\n\t\t\tlt+=lightStep;\n\t\t}\n\n\t\tthis._settings.palette = colors;\n\t},\n\tmoveSelection:function(mode, details, focus){\n\t\tlet value = this.getValue(), ind, cell;\n\n\t\tif(value) ind = this._findIndex(value);\n\t\tif(!ind) ind = {row:0, col:0};\n\n\t\tif(ind){\n\t\t\tif(mode == \"up\" || mode == \"down\")\n\t\t\t\tind.row = ind.row + (mode == \"up\"?-1:1);\n\t\t\telse if(mode == \"right\" || mode == \"left\")\n\t\t\t\tind.col = ind.col +(mode == \"right\"?1:-1);\n\t\t\telse if(mode == \"top\" )\n\t\t\t\tind.row = ind.col = 0;\n\t\t\telse if(mode == \"bottom\"){\n\t\t\t\tind.row = this._viewobj.lastChild.querySelectorAll(\".webix_color_row\").length-1;\n\t\t\t\tind.col = this._viewobj.lastChild.childNodes[ind.row].childNodes.length-1;\n\t\t\t}\n\t\t\tind.row = Math.max(ind.row, 0);\n\t\t\tif(ind.row>=0){\n\t\t\t\t// check if this is a last row\n\t\t\t\tconst row = this._viewobj.lastChild.childNodes[ind.row];\n\t\t\t\tif (row) cell = row.childNodes[ind.col];\n\t\t\t}\n\t\t\tif(cell){\n\t\t\t\tvalue = cell.getAttribute(/*@attr*/\"webix_val\");\n\t\t\t\tconst config = (details && details.e instanceof KeyboardEvent) ? \"user\" : \"auto\";\n\t\t\t\tthis.setValue(value, config);\n\t\t\t\tthis.callEvent(\"onSelect\", [this._settings.value]);\n\n\t\t\t\tif(focus !== false){\n\t\t\t\t\tconst sel = this._viewobj.querySelector(\"div[tabindex='0']\");\n\t\t\t\t\tif(sel) sel.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_renderRow:function(row, widths, height){\n\t\tconst data = {width: 0, height:0, val:0};\n\t\tlet rowHtml = \"<div class=\\\"webix_color_row\\\" role=\\\"row\\\">\";\n\n\t\tfor(let cell = 0; cell < row.length; cell++){\n\t\t\tdata.width = widths[cell];\n\t\t\tdata.height = height;\n\t\t\tdata.val = row[cell];\n\t\t\trowHtml += this._renderItem(data);\n\t\t}\n\t\trowHtml += \"</div>\";\n\t\treturn rowHtml;\n\t},\n\t_renderItem:function(obj){\n\t\tconst colorTemplate = template(this._settings.template||\"\");\n\t\treturn `<div role=\"gridcell\" tabindex=\"-1\" aria-label=\"${obj.val}\" style=\"width:${obj.width}px;height:${obj.height}px;\" ${/*@attr*/\"webix_val\"}=\"${obj.val}\">${colorTemplate(obj)}</div>`;\n\t},\n\trender:function(){\n\t\tif(!this.isVisible(this._settings.id))\n\t\t\treturn;\n\n\t\tconst type = this._settings.type;\n\t\tif(!this._settings.palette){\n\t\t\tif (type === \"classic\")\n\t\t\t\tthis._initOldPalette(this._settings);\n\t\t\telse \n\t\t\t\tthis._initPalette(this._settings);\n\t\t}\n\t\tconst palette = this._settings.palette;\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\t\tconst padding = type === \"classic\" ? 0 : $active.colorPadding;\n\t\tconst single = typeof palette[0] == \"object\";\n\t\tconst firstRow = single ? palette[0] : palette;\n\n\t\tconst deltaWidth = padding*2 + padding*(firstRow.length-1);\n\t\tconst deltaHeight = padding*2 + padding*(single ? palette.length-1 : 0);\n\n\t\tlet width = this.$width - deltaWidth,\n\t\t\theight =  this.$height - deltaHeight,\n\t\t\twidths = [];\n\n\t\tlet html = `<div class=\"webix_color_palette ${\"webix_palette_\"+type}\" role=\"rowgroup\">`;\n\t\t\n\t\tfor(let i=0; i < firstRow.length; i++){\n\t\t\twidths[i] = Math.floor(width/(firstRow.length - i));\n\t\t\twidth -= widths[i];\n\t\t}\n\n\t\tif(typeof palette[0] == \"object\"){\n\t\t\tfor(let r=0; r < palette.length; r++){\n\t\t\t\tconst cellHeight = Math.floor(height/(palette.length - r));\n\t\t\t\theight -= cellHeight;\n\t\t\t\tconst row = palette[r];\n\t\t\t\thtml += this._renderRow(row, widths, cellHeight);\n\t\t\t}\n\t\t} else\n\t\t\thtml += this._renderRow(palette, widths, height);\n\t\thtml += \"</div>\";\n\n\t\tthis._viewobj.innerHTML = html;\n\n\t\tif(this._settings.value)\n\t\t\tthis.$setValue(this._settings.value);\n\t\telse\n\t\t\tthis._viewobj.lastChild.childNodes[0].childNodes[0].setAttribute(\"tabindex\", \"0\");\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\trefresh:function(){ this.render(); }\n};\n\nconst view = protoUI(api, KeysNavigation, base.view, EventSystem);\nexport default {api, view};","import {pos as getPos, addCss, removeCss, offset, preventEvent} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport {$active} from \"../webix/skin\";\nimport i18n from \"../webix/i18n\";\nimport env from \"../webix/env\";\n\nimport color from \"../webix/color\";\n\nimport EventSystem from \"../core/eventsystem\";\nimport base from \"../views/view\";\n\nconst api = {\n\tname:\"colorselect\",\n\tdefaults:{\n\t\twidth: 260,\n\t\theight: 250,\n\t\tvalue:\"#751FE0\"\n\t},\n\t$init:function(){\n\t\tthis._hValue = this._sValue = this._vValue = 0;\n\n\t\t_event(this.$view, \"keydown\", (e) => this._handle_move_keyboard(e));\n\t\tthis.attachEvent(\"onAfterRender\", function(){\n\t\t\t_event(this._colorBlock, env.mouse.down, (e) => this._handle_dnd(e, \"mouse\"));\n\t\t\t_event(this._colorLine, env.mouse.down, (e) => this._handle_dnd(e, \"mouse\", true));\n\t\t\tif (env.touch) {\n\t\t\t\t_event(this._colorBlock, env.touch.down, (e) => this._handle_dnd(e, \"touch\"));\n\t\t\t\t_event(this._colorLine, env.touch.down, (e) => this._handle_dnd(e, \"touch\", true));\n\t\t\t}\n\t\t\t_event(this._colorOutText, \"change\", () => this.setValue(this._colorOutText.value, \"user\"));\n\t\t\tif (this._settings.button)\n\t\t\t\t_event(this._viewobj.querySelector(\".webix_button\"), \"click\", () => {\n\t\t\t\t\tthis.callEvent(\"onColorSelect\", [this.getValue()]);\n\t\t\t\t});\n\t\t});\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tthis._colorCircle = this._colorLineCircle = this._colorBlock = null;\n\t\t\tthis._colorLine = this._colorOutText = this._colorOutBlock = this._offset = null;\n\t\t});\n\t},\n\t$skin:function(){\n\t\tthis._inpHeight = $active.inputHeight - 2*$active.inputPadding;\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value ? value.toString(16) : \"\";\n\t\tif (value && value.charAt(0) != \"#\" && /^[0-9a-fA-F]+$/.test(value))\n\t\t\tvalue = \"#\" + value;\n\t\treturn value;\n\t},\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.$setValue(value);\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\t$setValue:function(value){\n\t\tif(this.isVisible(this._settings.id)){\n\t\t\tconst rgb = color.toRgb(value);\n\n\t\t\tif(value !==this._current_value){//set by API\n\t\t\t\tconst hsv = color.rgbToHsv(...rgb);\n\t\t\t\tthis._hValue = hsv[0];\n\t\t\t\tthis._sValue = hsv[1];\n\t\t\t\tthis._vValue = hsv[2];\n\t\t\t}\n\n\t\t\tconst left = (this._hValue*this._offset.width)/359;\n\t\t\tthis._colorLineCircle.style.left = left+\"px\";\n\n\t\t\tconst x = this._sValue*(this._offset.width);\n\t\t\tconst y = Math.abs((this._offset.height)*(this._vValue-1));\n\n\t\t\tthis._colorCircle.style.left = Math.max(Math.min(x, this._offset.width), 0)+\"px\";\n\t\t\tthis._colorCircle.style.top = Math.max(Math.min(y, this._offset.height), 0)+\"px\";\n\n\t\t\tthis._colorCircle.setAttribute(\"aria-valuetext\", value);\n\t\t\tthis._colorLineCircle.setAttribute(\"aria-valuetext\", value);\n\n\t\t\tthis._setOutColors(rgb, value);\n\t\t\tthis._setBlockColors();\n\t\t}\n\t},\n\t_setOutColors:function(rgb, hex){\n\t\tif(!rgb) rgb = color.hsvToRgb(this._hValue, this._sValue, this._vValue);\n\t\tif(!hex) hex = \"#\"+color.rgbToHex(rgb);\n\n\t\tconst bgColor = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n\t\tthis._colorCircle.style.backgroundColor = bgColor;\n\t\tthis._colorOutBlock.style.backgroundColor = bgColor;\n\t\tthis._colorOutText.value = hex.toUpperCase();\n\n\t\tthis._current_value = hex;\n\t},\n\t_setBlockColors:function(){\n\t\tconst rgb = color.hsvToRgb(this._hValue, 1, 1);\n\t\tconst rgbStr = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n\t\tthis._colorLineCircle.style.backgroundColor = rgbStr;\n\t\tthis._colorBlock.style.backgroundColor = rgbStr;\n\t},\n\n\t// dragging to set value\n\t_move_block:function(e){\n\t\tconst pos = getPos(e);\n\n\t\tlet x = pos.x - this._offset.x;\n\t\tlet y = pos.y - this._offset.y;\n\n\t\tx = Math.max(Math.min(x, this._offset.width), 0);\n\t\ty = Math.max(Math.min(y, this._offset.height), 0);\n\n\t\tthis._colorCircle.style.left = x+\"px\";\n\t\tthis._colorCircle.style.top = y+\"px\";\n\n\t\tconst pxX = (this._offset.width)/100;\n\t\tconst pxY = (this._offset.height)/100;\n\n\t\tconst s = Math.ceil(x/pxX)/100;\n\t\tconst v = Math.ceil(Math.abs(y/pxY-100))/100;\n\n\t\tthis._sValue = s;\n\t\tthis._vValue = v;\n\n\t\tthis._setOutColors();\n\t},\n\t_move_line:function(e){\n\t\tconst pos = getPos(e);\n\n\t\tlet x = pos.x - this._offset.x;\n\t\tx = Math.max(Math.min(x, this._offset.width), 0);\n\n\t\tthis._colorLineCircle.style.left = x+\"px\";\n\n\t\tconst h =  Math.round(x*359/this._offset.width);\n\t\tthis._hValue = Math.max(Math.min(h, 359), 0);\n\n\t\tthis._setOutColors();\n\t\tthis._setBlockColors();\n\t},\n\t_handle_dnd:function(e, pointer, line){\n\t\tthis._offset = offset(this._colorBlock);\n\n\t\tif (line){\n\t\t\taddCss(this._colorLine, \"webix_color_area_active\");\n\t\t\tthis._move_line(e);\n\t\t} else {\n\t\t\taddCss(this._colorBlock, \"webix_color_area_active\");\n\t\t\tthis._move_block(e);\n\t\t}\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tthis._handle_drag_events = [\n\t\t\tevent(document.body, env[pointer].move, e => this._handle_move_process(e, pointer, line), passive),\n\t\t\tevent(document, env[pointer].up, () => this._handle_move_stop(line))\n\t\t];\n\t\taddCss(document.body,\"webix_noselect\");\n\t},\n\t_handle_move_process:function(e, pointer, line){\n\t\tif (line) this._move_line(e);\n\t\telse this._move_block(e);\n\n\t\tif (pointer === \"touch\") preventEvent(e);\n\t},\n\t_handle_move_stop:function(line){\n\t\t//detach event handlers\n\t\teventRemove(this._handle_drag_events[0]);\n\t\teventRemove(this._handle_drag_events[1]);\n\t\tthis._handle_drag_events = null;\n\n\t\tthis.setValue(this._current_value, \"user\");\n\n\t\tif (line){\n\t\t\tremoveCss(this._colorLine, \"webix_color_area_active\");\n\t\t\tthis._colorLineCircle.focus();\n\t\t} else {\n\t\t\tremoveCss(this._colorBlock, \"webix_color_area_active\");\n\t\t\tthis._colorCircle.focus();\n\t\t}\n\t\tremoveCss(document.body, \"webix_noselect\");\n\t},\n\t_move_block_value(val, inc){\n\t\treturn Math.min(Math.max(val+inc/100, 0), 1);\n\t},\n\t_move_line_value(val, inc){\n\t\treturn Math.min(Math.max(val+inc, 0), 359);\n\t},\n\t_handle_move_keyboard:function(e){\n\t\tconst code = e.which || e.keyCode;\n\n\t\tif(code>32 && code <41){\n\t\t\tconst match =  /webix_color_(\\w*)circle/.exec(e.target.className);\n\t\t\tif(!match) return;\n\t\t\tpreventEvent(e);\n\n\t\t\tif(match[1].length){ //line\n\t\t\t\tif(code === 36) this._hValue = 0;\n\t\t\t\telse if(code === 35) this._hValue = 359;\n\t\t\t\telse{\n\t\t\t\t\tlet inc = (code === 37 || code === 40 || code === 34) ? -1 : 1;\n\t\t\t\t\tthis._hValue = this._move_line_value(this._hValue, inc);\n\t\t\t\t}\n\t\t\t\tthis._setBlockColors();\n\t\t\t} else {\n\t\t\t\tif(code === 36){\n\t\t\t\t\tthis._sValue = 0;\n\t\t\t\t\tthis._vValue = 1;\n\t\t\t\t}\n\t\t\t\telse if(code === 35) \n\t\t\t\t\tthis._sValue = this._vValue = 1;\n\t\t\t\telse if(code === 39 || code === 37){\n\t\t\t\t\tlet inc = code === 39 ? 1: -1;\n\t\t\t\t\tthis._sValue = this._move_block_value(this._sValue, inc);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tlet inc = (code === 33 || code === 38) ? 1 : -1;\n\t\t\t\t\tthis._vValue = this._move_block_value(this._vValue, inc);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._setOutColors();\n\n\t\t\t//paint value, black colors may have a bigger step\n\t\t\tif(this._settings.value == this._current_value)\n\t\t\t\tthis.$setValue(this._current_value);\n\t\t\telse\n\t\t\t\tthis.setValue(this._current_value, \"user\");\n\t\t}\n\t},\n\tmoveSelection:function(mode){\n\t\tif(mode == \"pgup\" || mode == \"pgdown\"){ //line\n\t\t\tlet inc = mode === \"pgup\" ? -1 : 1;\n\t\t\tthis._hValue = this._move_line_value(this._hValue, inc);\n\t\t\tthis._setBlockColors();\n\t\t}\n\t\telse if(mode !=\"top\" && mode !==\"bottom\"){\n\t\t\tlet inc = (mode == \"up\" || mode == \"right\") ? 1 : -1;\n\t\t\tif(mode == \"down\" || mode == \"up\")\n\t\t\t\tthis._vValue = this._move_block_value(this._vValue, inc);\n\t\t\telse\n\t\t\t\tthis._sValue = this._move_block_value(this._sValue, inc);\n\t\t}\n\t\tthis._setOutColors();\n\t\tthis.setValue(this._current_value, \"auto\");\n\t},\n\trender:function(){\n\t\tif(!this.isVisible(this._settings.id))\n\t\t\treturn;\n\n\t\tthis.callEvent(\"onBeforeRender\",[]);\n\n\t\tconst inpWidth = (this.$width - $active.dataPadding*3)/2;\n\t\t//8+14 color line, 3(or 4) data paddings \n\t\tconst bHeight = this.$height - 3*$active.dataPadding - 22 - this._inpHeight - (this._settings.button ? (this._inpHeight+$active.dataPadding) : 0);\n\n\t\tlet html = \"<div class=\\\"webix_color_area\\\">\";\n\t\thtml += `\n\t\t\t<div ${/*@attr*/\"webix_disable_drag\"}=\"true\" class=\"webix_color_block\" style=\"height:${bHeight}px;\">\n\t\t\t\t<div class=\"webix_color_circle\" tabindex=\"0\" role=\"slider\"></div>\n\t\t\t</div>\n\t\t\t<div ${/*@attr*/\"webix_disable_drag\"}=\"true\" class=\"webix_color_line\">\n\t\t\t\t<div class=\"webix_color_line_circle\" tabindex=\"0\" role=\"slider\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"webix_color_out\">\n\t\t\t\t<div style=\"width:${inpWidth}px\" class=\"webix_color_out_block\"></div>\n\t\t\t\t<input type=\"text\" style=\"width:${inpWidth}px\" class=\"webix_color_out_text\"></input>\n\t\t\t</div>\n\t\t`;\n\n\t\tif(this._settings.button)\n\t\t\thtml += `<div class='webix_secondary'><button class=\"webix_button\">${i18n.combo.select}</button></div>`;\n\t\thtml += \"</div>\";\n\n\t\tthis._viewobj.innerHTML = html;\n\n\t\tthis._collect_vars();\n\t\tthis.$setValue(this._settings.value);\n\n\t\tthis._fix_cover();\n\t\tthis.callEvent(\"onAfterRender\",[]);\n\t},\n\t_collect_vars:function(){\n\t\tthis._colorCircle = this._viewobj.querySelector(\".webix_color_circle\");\n\t\tthis._colorLineCircle = this._viewobj.querySelector(\".webix_color_line_circle\");\n\t\tthis._colorBlock = this._viewobj.querySelector(\".webix_color_block\");\n\t\tthis._colorLine = this._viewobj.querySelector(\".webix_color_line\");\n\t\tthis._colorOutText = this._viewobj.querySelector(\".webix_color_out_text\");\n\t\tthis._colorOutBlock = this._viewobj.querySelector(\".webix_color_out_block\");\n\n\t\tthis._offset = offset(this._colorBlock);\n\t},\n\trefresh:function(){ this.render(); }\n};\n\nconst view = protoUI(api, base.view, EventSystem);\nexport default {api, view};","import {triggerEvent, preventEvent, getTextSize, locate} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray} from \"../webix/helpers\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport baseview from \"../views/baseview\";\nimport base from \"../views/view\";\n\nimport AutoTooltip from \"../core/autotooltip\";\nimport UIManager from \"../core/uimanager\";\nimport EventSystem from \"../core/eventsystem\";\nimport AtomRender from \"../core/atomrender\";\nimport Settings from \"../core/settings\";\n\n\nconst api = {\n\tname:\"button\",\n\ttouchable:true,\n\t$skin:function(){\n\t\tthis.defaults.height = $active.buttonHeight||$active.inputHeight;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tvar text = common.$renderInput(obj, common);\n\t\t\tif (obj.badge||obj.badge===0) text = text.replace(\"</button>\", \"<span class='webix_badge'>\"+obj.badge+\"</span></button>\");\n\t\t\treturn \"<div class='webix_el_box' style='width:\"+obj.awidth+\"px; height:\"+obj.aheight+\"px'>\"+ text + \"</div>\";\n\t\t},\n\t\tlabel:\"\",\n\t\tvalue:\"\",\n\t\tborderless:true\n\t},\n\t$renderInput:function(obj){\n\t\treturn \"<button type='button' \"+(obj.popup?\"aria-haspopup='true'\":\"\")+\" class='webix_button'>\"+(obj.label||obj.value)+\"</button>\";\n\t},\n\t$init:function(config){\n\t\tthis._viewobj.className += \" webix_control webix_el_\"+(this.$cssName||this.name);\n\n\t\tthis._destroy_with_me = [];\n\t\tthis._set_default_css(config);\n\n\t\tthis.data = this._settings;\n\t\tthis._dataobj = this._viewobj;\n\n\t\tthis.$ready.push(function(){ this._calc_size(this.config); });\n\t},\n\thotkey_setter: function(key){\n\t\tvar control = this;\n\t\tthis._addElementHotKey(key, function(view,ev){\n\t\t\tif(control.isVisible()){\n\t\t\t\tvar elem = control.$view.firstChild;\n\t\t\t\ttriggerEvent(elem, \"MouseEvent\", \"click\");\n\t\t\t\tpreventEvent(ev);\n\t\t\t}\n\t\t});\n\t},\n\t_set_default_css: function(config){\n\t\tif (!config.css || !this._get_class(config.css) || (this.defaults.css && !this._get_class(this.defaults.css))){\n\t\t\tthis._viewobj.className += \" webix_secondary\";\n\t\t}\n\t},\n\t_get_class:function(css){\n\t\tif(typeof css == \"string\"){\n\t\t\tconst classes = { webix_danger:1, webix_transparent:1, webix_primary:1 };\n\t\t\tfor(let i in classes){\n\t\t\t\tif(css.indexOf(i)!==-1)\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_addElementHotKey: function(key, func, view){\n\t\tvar keyCode = UIManager.addHotKey(key, func, view);\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tUIManager.removeHotKey(keyCode, func, view);\n\t\t});\n\t},\n\ttype_setter:function(value){\n\t\tif (this._types[value])\n\t\t\tthis.$renderInput = template(this._types[value]);\n\t\treturn value;\n\t},\n\t_set_inner_size:false,\n\t_types:{\n\t\timage:\"<button type='button' class='webix_button webix_img_btn' style='line-height:#cheight#px;'><img class='webix_image' style='max-width:#cheight#px; max-height:#cheight#px;' src = '#image#'>#label#</button>\",\n\t\timageTop:\"<button type='button' class='webix_button webix_img_btn_top'><img class='webix_image' style='max-width:#cheight#px; max-height:#cheight#px;' src = '#image#'><div class='webix_img_btn_text'>#label#</div></button>\",\n\n\t\ticon:\"<button type='button' class='webix_button webix_img_btn' style='line-height:#cheight#px;'><span class='webix_icon_btn #icon#' style='max-width:#cheight#px;'></span>#label#</button>\",\n\t\ticonTop:\"<button type='button' class='webix_button webix_img_btn_top' style='width:100%;text-align:center;'><span class='webix_icon #icon#'></span><div class='webix_img_btn_text'>#label#</div></button>\",\n\t},\n\t_findAllInputs: function(){\n\t\tvar result = [];\n\t\tvar tagNames = [\"input\",\"select\",\"textarea\",\"button\"];\n\t\tfor(var i=0; i< tagNames.length; i++){\n\t\t\tvar inputs = this.$view.getElementsByTagName(tagNames[i]);\n\t\t\tfor(var j = 0; j< inputs.length; j++){\n\t\t\t\tresult.push(inputs[j]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\tdisable: function(){\n\t\tvar i, node, elem = this._getBox();\n\t\tbaseview.api.disable.apply(this, arguments);\n\t\tif(elem && elem.className.indexOf(\" webix_disabled_box\")== -1){\n\t\t\telem.className += \" webix_disabled_box\";\n\t\t\tvar inputs = this._findAllInputs();\n\t\t\tfor(i=0; i< inputs.length; i++)\n\t\t\t\tinputs[i].setAttribute(\"disabled\",true);\n\n\t\t\t// richselect and based on it\n\t\t\tnode = this.getInputNode();\n\t\t\tif(node && node.tagName.toLowerCase() == \"div\"){\n\t\t\t\tthis._disabledTabIndex = node.getAttribute(\"tabIndex\");\n\t\t\t\tnode.removeAttribute(\"tabIndex\");\n\t\t\t}\n\n\t\t\tif(this._settings.labelPosition == \"top\"){\n\t\t\t\tvar label = this._dataobj.firstChild;\n\t\t\t\tif(label)\n\t\t\t\t\tlabel.className += \" webix_disabled_top_label\";\n\t\t\t}\n\t\t}\n\t},\n\tenable: function(){\n\t\tbaseview.api.enable.apply(this, arguments);\n\t\tvar node,\n\t\t\telem = this._getBox();\n\t\tif(elem){\n\t\t\telem.className = elem.className.replace(\" webix_disabled_box\",\"\");\n\t\t\tvar inputs = this._findAllInputs();\n\t\t\tfor(var i=0; i< inputs.length; i++)\n\t\t\t\tinputs[i].removeAttribute(\"disabled\");\n\n\t\t\tnode = this.getInputNode();\n\t\t\tif(node && !isUndefined(this._disabledTabIndex))\n\t\t\t\tnode.setAttribute(\"tabIndex\",this._disabledTabIndex);\n\n\t\t\tif(this._settings.labelPosition == \"top\"){\n\t\t\t\tvar label = this._dataobj.firstChild;\n\t\t\t\tif(label)\n\t\t\t\t\tlabel.className = label.className.replace(\" webix_disabled_top_label\",\"\");\n\t\t\t}\n\t\t}\n\t},\n\t$setSize:function(x,y){\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tthis.render();\n\t\t}\n\t},\n\tsetValue:function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (this.$compareValue(oldvalue, value)){\n\t\t\t//controls with post formating, we need to repaint value\n\t\t\tif(this._rendered_input && this._pattern){\n\t\t\t\tvalue = this._pattern(value);\n\t\t\t\tconst input = this.getInputNode();\n\t\t\t\tif(input && !isUndefined(input.value) && input.value != value)\n\t\t\t\t\tthis.$setValue(value);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis._settings.value = value;\n\t\tif (this._rendered_input)\n\t\t\tthis.$setValue(value);\n\n\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t},\n\t$compareValue:function(oldvalue, value){ \n\t\tif (typeof value === \"number\") value = value.toString();\n\t\tif (typeof oldvalue === \"number\") oldvalue = oldvalue.toString();\n\t\treturn oldvalue == value;\n\t},\n\t$prepareValue:function(value){ return value === 0 ? \"0\" : (value || \"\").toString(); },\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\t//visual part of setValue\n\t$setValue:function(value){\n\t\tconst node = this.getInputNode();\n\t\tif (node && !this._types[this._settings.type]){\n\t\t\tvalue = this._settings.label || value;\n\t\t\tif (node.tagName==\"BUTTON\") node.innerHTML = value;\n\t\t\telse node.value = value;\n\t\t}\n\t},\n\tgetValue:function(){\n\t\t//if button was rendered - returning actual value\n\t\t//otherwise - returning last set value\n\t\tvar value = this._rendered_input ? this.$getValue() : this._settings.value;\n\t\treturn (typeof value == \"undefined\") ? \"\" : value;\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value||\"\";\t\n\t},\n\tfocus:function(){\n\t\tif(!UIManager.canFocus(this))\n\t\t\treturn false;\n\t\t\n\t\tvar input = this.getInputNode();\n\t\tif (input && input.focus) input.focus();\n\t},\n\tblur:function() {\n\t\tvar input = this.getInputNode();\n\t\tif (input && input.blur) input.blur();\n\t},\n\t//get input element\n\tgetInputNode: function() {\n\t\treturn this._dataobj.getElementsByTagName(\"input\")[0]||this._dataobj.getElementsByTagName(\"button\")[0];\n\t},\n\t//get top-level sub-container\n\t_getBox:function(){\n\t\tfor(var i=0;i< this._dataobj.childNodes.length;i++){\n\t\t\tif(this._dataobj.childNodes[i].className.indexOf(\"webix_el_box\")>=0)\n\t\t\t\treturn this._dataobj.childNodes[i];\n\t\t}\n\t\treturn null;\n\t},\n\t_get_tooltip_data:function(t,e){\n\t\tlet node = e.target;\n\t\tlet box = this._getBox();\n\n\t\tconst isTopLabel = this._settings.labelPosition == \"top\" && this._dataobj.firstChild.contains(node);\n\n\t\tif (isTopLabel || box && box.contains(node))\n\t\t\treturn this._settings;\n\t\treturn null;\n\t},\n\t_sqrt_2:Math.sqrt(2),\n\t_calc_size:function(config){\n\t\tconfig = config || this._settings;\n\t\tif (config.autowidth){\n\t\t\tlet width = getTextSize((config.value||config.label || \"\"), \"webixbutton\").width +\n\t\t\t\t(config.badge||config.badge===0 ? getTextSize(config.badge, \"webix_badge\").width * 2 - 32 : 0) +\n\t\t\t\t(config.type === \"icon\" ? 24 : 0) +\n\t\t\t\t(config.type === \"image\" ? config.height-$active.inputPadding : 0);\n\n\t\t\twidth = Math.max(config.minWidth || 0, width);\n\t\t\tconfig.width = Math.min(config.maxWidth || Infinity, width);\n\t\t}\n\t},\n\t_calck_input_size:function(){\n\t\t//use width for both width and inputWidth settings in clever way\n\t\t//in form, we can define width for some element smaller than for siblings\n\t\t//it will use inputWidth to render the desired view\n\t\tthis._input_width = this._settings.inputWidth || \n\t\t\t((this._content_width - this._settings.width > 2)?this._settings.width:0) || this._content_width;\n\t\tthis._input_height = this._settings.inputHeight||this._inputHeight||0;\n\t},\n\tresize: function(){\n\t\tthis._calc_size();\n\t\treturn base.api.resize.apply(this,arguments);\n\t},\n\trender:function(){\n\t\tthis._calck_input_size();\n\t\tthis._settings.awidth  = this._input_width||this._content_width;\n\t\tthis._settings.aheight = this._input_height||this._content_height;\n\n\t\t//image button - image width\n\t\tthis._settings.bheight = this._settings.aheight+2;\n\t\tthis._settings.cheight = this._settings.aheight- 2*$active.inputPadding;\n\t\tthis._settings.dheight = this._settings.cheight - 2; // - borders\n\n\t\tif(AtomRender.render.call(this)){\n\t\t\tthis._rendered_input = true;\n\t\t\tif (this._set_inner_size) this._set_inner_size();\n\t\t\tif (this._settings.align){\n\t\t\t\tvar handle = this._dataobj.firstChild;\n\t\t\t\tif (this._settings.labelPosition == \"top\" && handle.nextSibling)\n\t\t\t\t\thandle = handle.nextSibling;\n\n\t\t\t\tswitch(this._settings.align){\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\thandle.style.cssFloat = \"right\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\thandle.style.display = \"inline-block\";\n\t\t\t\t\t\thandle.parentNode.style.textAlign = \"center\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"middle\":\n\t\t\t\t\t\thandle.style.marginTop = Math.round((this._content_height-this._input_height)/2)+\"px\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"bottom\": \n\t\t\t\t\t\thandle.style.marginTop = (this._content_height-this._input_height)+\"px\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"left\":\n\t\t\t\t\t\thandle.style.cssFloat = \"left\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tassert(false, \"Unknown align mode: \"+this._settings.align);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.$render)\n\t\t\t\tthis.$render(this.data);\n\n\t\t\tif (this._settings.disabled)\n\t\t\t\tthis.disable();\n\n\t\t\tif (this._init_once){\n\t\t\t\tthis._init_once(this.data);\n\t\t\t\tthis._init_once = 0;\n\t\t\t}\n\t\t}\n\t},\n\n\trefresh:function(){ this.render(); },\n\n\ton_click:{\n\t\t_handle_tab_click: function(ev){\n\t\t\tconst id = locate(ev, /*@attr*/\"button_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled && this.callEvent(\"onBeforeTabClick\", [id, ev])){\n\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\tthis.focus();\n\t\t\t\tthis.callEvent(\"onAfterTabClick\", [id, ev]);\n\t\t\t}\n\t\t},\n\t\twebix_all_segments:function(ev, button){\n\t\t\tthis.on_click._handle_tab_click.call(this, ev, button);\n\t\t},\n\t\twebix_all_tabs:function(ev, button){\n\t\t\tthis.on_click._handle_tab_click.call(this, ev, button);\n\t\t},\n\t\twebix_inp_counter_next:function(){\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.next(this._settings.step, \"user\");\n\t\t},\n\t\twebix_inp_counter_prev:function(){\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.prev(this._settings.step, \"user\");\n\t\t},\n\t\twebix_input_icon:function(){\n\t\t\tthis.getInputNode().focus();\n\t\t},\n\t\twebix_clear_icon:function(){\n\t\t\tif (this.$allowsClear) this.setValue(\"\", \"user\");\n\t\t\treturn false;\n\t\t},\n\t\twebix_inp_checkbox_border: function(e) {\n\t\t\tif (!this._settings.disabled && e.target.tagName != \"DIV\" && !this._settings.readonly)\n\t\t\t\tthis.toggle(\"user\");\n\t\t},\n\t\twebix_inp_checkbox_label: function() {\n\t\t\tif (!this._settings.readonly)\n\t\t\t\tthis.toggle(\"user\");\n\t\t},\n\t\twebix_inp_radio_border: function(e) {\n\t\t\tconst id = locate(e, /*@attr*/\"radio_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled){\n\t\t\t\tthis.setValue(id, \"user\");\n\t\t\t\tthis.focus();\n\t\t\t}\n\t\t},\n\t\twebix_tab_more_icon: function(ev,obj,node){\n\t\t\tconst popup = this.getPopup();\n\t\t\tif (!popup.isVisible()){\n\t\t\t\tpopup.resize();\n\t\t\t\tpopup.show(node, null, true);\n\t\t\t} else\n\t\t\t\tpopup.hide();\n\t\t},\n\t\twebix_tab_close:function(e){\n\t\t\tconst id = locate(e, /*@attr*/\"button_id\");\n\t\t\tconst opt = this.getOption(id);\n\n\t\t\tif (opt && !opt.disabled && this.callEvent(\"onBeforeTabClose\", [id, e]))\n\t\t\t\tthis.removeOption(id);\n\t\t\treturn false;\n\t\t}\n\t},\n\n\t//method do not used by button, but  used by other child-views\n\t_check_options:function(opts){\n\t\tassert(!!opts, this.name+\": options not defined\");\n\t\tassert(isArray(opts), this.name+\": options must be an array\");\n\n\t\tfor(var i=0;i<opts.length;i++){\n\t\t\t// asserts need to be removed in final version\t\t\t\n\t\t\tassert(!opts[i].text, \"Please replace .text with .value in control config\");\n\t\t\tassert(!opts[i].label, \"Please replace .label with .value in control config\");\n\n\t\t\tif(typeof opts[i]==\"string\"){\n\t\t\t\topts[i] = {id:opts[i], value:opts[i]};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(isUndefined(opts[i].id))\n\t\t\t\t\topts[i].id = opts[i].value;\n\n\t\t\t\tif(isUndefined(opts[i].value))\n\t\t\t\t\topts[i].value = opts[i].id;\n\t\t\t}\n\t\t}\n\t\treturn opts;\n\t},\n\t_get_div_placeholder: function(obj){\n\t\tvar placeholder = (obj?obj.placeholder:this._settings.placeholder);\n\t\treturn (placeholder?\"<span class='webix_placeholder'>\"+placeholder+\"</span>\":\"\");\n\t}\n};\n\nconst view = protoUI(api, base.view, AutoTooltip, AtomRender, Settings, EventSystem);\nexport default {api, view};","import {protoUI, ui, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray, extend, uid, delay} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\nimport {getSelectionRange, setSelectionRange, getTextSize} from \"../webix/html\";\nimport {assert} from \"../webix/debug\";\nimport template from \"../webix/template\";\n\nimport rules from \"../webix/rules\";\nimport button from \"./button\";\nimport base from \"../views/view\";\n\nimport TextPattern from \"../core/textpattern\";\n\nconst api = {\n\tname:\"text\",\n\t$allowsClear:true,\n\t_init_onchange:function(){\n\t\tif (this.$allowsClear){\n\t\t\tconst c = this._settings;\n\t\t\tconst node = this.getInputNode();\n\t\t\t//attach onChange handler only for controls which do not manage blur on their own\n\t\t\t//for example - combo\n\t\t\tif (!this.$onBlur)\n\t\t\t\t_event(node, \"change\", () => this._applyChanges(\"user\"));\n\t\t\tif (c.suggest)\n\t\t\t\t$$(c.suggest).linkInput(this);\n\t\t\tif (c.clear && !this.addSection){\n\t\t\t\tthis._clear_icon = this.$view.querySelector(\".webix_input_icon:last-child\");\n\t\t\t\tif (node.tagName == \"INPUT\" || node.tagName == \"SELECT\")\n\t\t\t\t\t_event(node, \"input\", (e) => this._toggleClearIcon(e.target.value));\n\n\t\t\t\tconst text = this.getText ? this.getText() : c.text||c.value;\n\t\t\t\tthis._toggleClearIcon(text);\n\t\t\t}\n\t\t}\n\t},\n\t_applyChanges: function(c){\n\t\tconst value = this.getValue();\n\t\tthis.setValue(value, c);\n\t},\n\t_toggleClearIcon:function(value){\n\t\tconst c = this._settings;\n\t\tif (c.readonly || !c.clear || !this._clear_icon) return;\n\n\t\tif (c.clear == \"hover\" || c.clear == \"replace\"){\n\t\t\tconst css = value ? \"webix_clear_icon \"+(c.clear == \"hover\" ? c.icon : \"wxi-close\") : c.icon;\n\t\t\tthis._clear_icon.className = \"webix_input_icon \" + css;\n\t\t} else {\n\t\t\tconst state = value ? \"\" : \"hidden\";\n\t\t\tif (this._clear_icon.style.visibility !== state)\n\t\t\t\tthis._clear_icon.style.visibility = state;\n\t\t}\n\t},\n\t$skin:function(){\n\t\tbutton.api.$skin.call(this);\n\n\t\tthis.defaults.height = $active.inputHeight;\n\t\tthis.defaults.inputPadding = $active.inputPadding;\n\t\tthis._inputSpacing = $active.inputSpacing;\n\t\tthis._labelTopHeight = $active.labelTopHeight;\n\t},\n\t$init:function(config){\n\t\tif (config.labelPosition == \"top\" && isUndefined(config.height) && this.defaults.height) // textarea\n\t\t\tconfig.height = this.defaults.height + (config.label?this._labelTopHeight:0);\n\n\t\t// used in clear_setter\n\t\tif (!isUndefined(config.icon))\n\t\t\tthis._settings.icon = config.icon;\n\n\t\tif (this.$onBlur)\n\t\t\tthis.attachEvent(\"onBlur\", function(){\n\t\t\t\tif (this._rendered_input) this.$onBlur();\n\t\t\t});\n\t\tthis.attachEvent(\"onAfterRender\", this._init_onchange);\n\t\tthis.attachEvent(\"onDestruct\", function(){\n\t\t\tthis._clear_icon = null;\n\t\t});\n\t},\n\tclear_setter:function(value){\n\t\tif (value){\n\t\t\tif (!this._settings.icon) value = true;\n\n\t\t\tif (value !== \"hover\" && value !== \"replace\")\n\t\t\t\tvalue = !!value;\n\t\t}\n\t\treturn value;\n\t},\n\t$renderIcon:function(c){\n\t\tconst height = c.aheight - 2*c.inputPadding;\n\t\tconst padding = (height - 18)/2 -1;\n\t\tlet right = this._inputSpacing/2 - 24;\n\t\tlet html = \"\";\n\n\t\tif (c.icon){\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon \"+c.icon+\"'></span>\";\n\t\t}\n\n\t\tif (!c.readonly && c.clear === true){\n\t\t\tright += 24;\n\t\t\thtml += \"<span style='right:\"+right+\"px;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon webix_clear_icon webix_icon_transparent wxi-close'></span>\";\n\t\t}\n\n\t\treturn html;\n\t},\n\trelatedView_setter:function(value){\n\t\tthis.attachEvent(\"onChange\", function(){\n\t\t\tconst value = this.getValue();\n\t\t\tconst mode = this._settings.relatedAction;\n\t\t\tconst viewid = this._settings.relatedView;\n\t\t\tlet view = $$(viewid);\n\t\t\tif (!view){\n\t\t\t\tconst top = this.getTopParentView();\n\t\t\t\tif (top && top.$$)\n\t\t\t\t\tview = top.$$(viewid);\n\t\t\t}\n\n\t\t\tassert(view, \"Invalid relatedView: \"+viewid);\n\n\t\t\tif (mode == \"enable\"){\n\t\t\t\tif (value) view.enable(); else view.disable();\n\t\t\t} else {\n\t\t\t\tif (value) view.show(); else view.hide();\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t},\n\tvalidateEvent_setter:function(value){\n\t\tif (value == \"blur\")\n\t\t\tthis.attachEvent(\"onBlur\", this.validate);\n\n\t\tif (value == \"key\")\n\t\t\tthis.attachEvent(\"onTimedKeyPress\", this.validate);\n\n\t\treturn value;\n\t},\n\tvalidate:function(){\n\t\tlet rule = this._settings.validate;\n\t\tif (!rule && this._settings.required)\n\t\t\trule = rules.isNotEmpty;\n\n\t\tconst form =this.getFormView();\n\t\tconst name = this._settings.name;\n\t\tconst value = this.getValue();\n\t\tconst data = {}; data[name] = value;\n\n\t\tassert(form, \"Validation works only for fields in the form\");\n\t\tassert(name, \"Validation works only for fields with name\");\n\n\t\tif (rule && !form._validate(rule, value, data, name))\n\t\t\treturn false;\n\t\treturn true;\n\t},\n\t_getInvalidText: function(){\n\t\tconst text = this._settings.invalidMessage;\n\t\tif(typeof text == \"function\"){\n\t\t\ttext.call(this);\n\t\t}\n\t\treturn text;\n\t},\n\tbottomLabel_setter: function(text){\n\t\t// this._get_input_width returns 0\n\t\t// use delay to wait for the end of the render\n\t\tdelay(() => {\n\t\t\tif(!this.$destructed)\n\t\t\t\tthis.setBottomText(text);\n\t\t});\n\t},\n\tsetBottomText: function(text){\n\t\tconst config = this._settings;\n\t\tif (!isUndefined(text)){\n\t\t\tif (config.bottomLabel == text) return;\n\t\t\tconfig.bottomLabel = text;\n\t\t}\n\n\t\tlet sel;\n\t\tconst input = this.getInputNode();\n\t\tif (input && !isUndefined(input.value)){\n\t\t\tif (input == document.activeElement) sel = getSelectionRange(input);\n\t\t\t// save input value before rendering\n\t\t\tthis._applyChanges(\"auto\");\n\t\t}\n\n\t\tconst message = (config.invalid ? config.invalidMessage : \"\") || config.bottomLabel;\n\t\tif (!message && !config.bottomPadding)\n\t\t\tconfig.inputHeight = 0;\n\n\t\tif (message && (!config.bottomPadding || this._restorePadding)){\n\t\t\tthis._restorePadding = 1;\n\t\t\tconfig.bottomPadding = getTextSize(message, \"webix_inp_bottom_label\", this._get_input_width(config)).height;\n\n\t\t\tthis.render();\n\t\t\tthis.adjust();\n\t\t\tthis.resize();\n\t\t} else if (!message && this._restorePadding){\n\t\t\tconfig.bottomPadding = this._restorePadding = 0;\n\t\t\t//textarea\n\t\t\tif (!config.height) this.render();\n\t\t\tthis.adjust();\n\t\t\tthis.resize();\n\t\t} else\n\t\t\tthis.render();\n\n\t\tif (sel)\n\t\t\tsetSelectionRange(this.getInputNode(), sel.start, sel.end);\n\t},\n\t$getSize: function(){\n\t\tconst sizes = base.api.$getSize.apply(this,arguments);\n\t\tconst heightInc = this.config.bottomPadding;\n\t\tif(heightInc){\n\t\t\tsizes[2] += heightInc;\n\t\t\tsizes[3] += heightInc;\n\t\t}\n\t\treturn sizes;\n\t},\n\t$setSize:function(x,y){\n\t\tconst config = this._settings;\n\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tif (!x || !y) return;\n\n\t\t\tif (config.labelPosition == \"top\"){\n\t\t\t\tconfig.labelWidth = 0;\n\t\t\t\t// textarea\n\t\t\t\tif (!config.inputHeight)\n\t\t\t\t\tthis._inputHeight = this._content_height - (config.label?this._labelTopHeight:0) - (this.config.bottomPadding||0);\n\t\t\t} else {\n\t\t\t\tif(config.label)\n\t\t\t\t\tconfig.labelWidth = this._getLabelWidth(config.labelWidth, config.label, config.required);\n\t\t\t\tif (config.bottomPadding)\n\t\t\t\t\tconfig.inputHeight = this._content_height - this.config.bottomPadding;\n\t\t\t}\n\t\t\tthis.render();\n\t\t}\n\t},\n\t_get_input_width: function(config){\n\t\tconst width = (this._input_width||0) - (config.label?config.labelWidth:0) - this._inputSpacing - (config.iconWidth || 0);\n\n\t\t//prevent js error in IE\n\t\treturn (width < 0)?0:width;\n\t},\n\t_render_div_block:function(obj, common){\n\t\tconst id = \"x\"+uid();\n\t\tconst width = common._get_input_width(obj);\n\t\tconst inputAlign = obj.inputAlign || \"left\";\n\t\tconst height = obj.aheight - 2*$active.inputPadding - 2*$active.borderWidth;\n\t\tconst rightPadding = obj.clear === true ? \"padding-right:51px;\" : \"\";\n\t\tconst text = (obj.text||obj.value||this._get_div_placeholder(obj));\n\t\tconst html = \"<div class='webix_inp_static' role='combobox' aria-label='\"+template.escape(obj.label)+\"' tabindex='0'\"+(obj.readonly?\" aria-readonly='true'\":\"\")+(obj.invalid?\"aria-invalid='true'\":\"\")+\" onclick='' style='line-height:\"+height+\"px;width:\"+width+\"px;text-align:\"+inputAlign+\";\"+rightPadding+\"'>\"+text+\"</div>\";\n\t\treturn common.$renderInput(obj, html, id);\n\t},\n\t_baseInputHTML:function(tag){\n\t\tlet html = \"<\"+tag+(this._settings.placeholder?\" placeholder='\"+template.escape(this._settings.placeholder)+\"' \":\" \");\n\t\tif (this._settings.readonly)\n\t\t\thtml += \"readonly='true' aria-readonly=''\";\n\t\tif(this._settings.required)\n\t\t\thtml += \"aria-required='true'\";\n\t\tif(this._settings.invalid)\n\t\t\thtml += \"aria-invalid='true'\";\n\n\t\tconst attrs = this._settings.attributes;\n\t\tif (attrs)\n\t\t\tfor(const prop in attrs)\n\t\t\t\thtml += prop+\"='\"+attrs[prop]+\"' \";\n\t\treturn html;\n\t},\n\t$renderLabel: function(config, id){\n\t\tlet label = \"\";\n\n\t\tif (config.label){\n\t\t\tlet top = this._settings.labelPosition == \"top\";\n\t\t\tlet style = `text-align:${config.labelAlign||\"left\"}; line-height:${this._getLabelHeight(top)}px; `;\n\n\t\t\tif (top)\n\t\t\t\tstyle += \"display:block;\";\n\t\t\telse\n\t\t\t\tstyle += config.labelWidth ? `width:${config.labelWidth}px;` : \"display:none;\";\n\n\t\t\tlabel = \"<label style='\"+style+\"' onclick='' for='\"+id+\"' class='webix_inp_\"+(top?\"top_\":\"\")+\"label \"+(config.required?\"webix_required\":\"\")+\"'>\" + (config.label||\"\") + \"</label>\";\n\t\t}\n\t\treturn label;\n\t},\n\t_getLabelHeight:function(top){\n\t\treturn top ? this._labelTopHeight-this._settings.inputPadding : (this._settings.aheight - 2*this._settings.inputPadding);\n\t},\n\t$renderInput: function(config, div_start, id) {\n\t\tconst inputAlign = (config.inputAlign||\"left\");\n\t\tconst top = (config.labelPosition == \"top\");\n\t\tconst inputWidth = this._get_input_width(config);\n\n\t\tid = id||uid();\n\n\t\tconst label = this.$renderLabel(config,id);\n\t\tlet html = \"\";\n\t\tif(div_start){\n\t\t\thtml += div_start;\n\t\t} else {\n\t\t\tconst value =  template.escape(config.text || this._pattern(config.value));\n\t\t\tlet rightPadding = (config.icon || config.clear ? 27 : 0) + (config.icon && config.clear === true ? 24 : 0);\n\t\t\trightPadding = rightPadding && !this.addSection ? \"padding-right:\"+rightPadding+\"px;\" : \"\";\n\n\t\t\thtml += this._baseInputHTML(\"input\")+\"id='\"+id+\"' type='\"+(config.type||this.name)+\"'\"+(config.editable?\" role='combobox'\":\"\")+\n\t\t\t\t\" value='\"+value+\"' style='width:\"+inputWidth+\"px;text-align:\"+inputAlign+\";\"+rightPadding+\"'\";\n\n\t\t\tconst attrs = config.attributes;\n\t\t\tif (attrs)\n\t\t\t\tfor(let prop in attrs)\n\t\t\t\t\thtml += \" \"+prop+\"='\"+attrs[prop]+\"'\";\n\t\t\thtml += \" />\";\n\t\t}\n\t\thtml += this.$renderIcon ? this.$renderIcon(config) : \"\";\n\n\t\tlet result = \"\";\n\t\t//label position, top or left\n\t\tif (top)\n\t\t\tresult = label+\"<div class='webix_el_box' style='width:\"+config.awidth+\"px; height:\"+config.aheight+\"px'>\"+html+\"</div>\";\n\t\telse\n\t\t\tresult = \"<div class='webix_el_box' style='width:\"+config.awidth+\"px; height:\"+config.aheight+\"px'>\"+label+html+\"</div>\";\n\n\t\t//bottom message text\n\t\tconst message = (config.invalid ? config.invalidMessage : \"\") || config.bottomLabel;\n\t\tif (message){\n\t\t\tconst padding = config.awidth - inputWidth - $active.inputPadding;\n\t\t\tresult += \"<div class='webix_inp_bottom_label'\"+(config.invalid?\"role='alert' aria-relevant='all'\":\"\")+\" style='width:\"+(inputWidth||config.awidth)+\"px;margin-left:\"+Math.max(padding, $active.inputPadding)+\"px;'>\"+message+\"</div>\";\n\t\t}\n\n\t\treturn result;\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\treturn common.$renderInput(obj);\n\t\t},\n\t\tlabel:\"\",\n\t\tlabelWidth:80\n\t},\n\t_getLabelWidth: function(width, label, required){\n\t\tif(width == \"auto\")\n\t\t\twidth = getTextSize(label, \"webix_inp_label\"+(required ? \" webix_required\" : \"\")).width;\n\t\treturn width ? Math.max(width, $active.dataPadding) : 0;\n\t},\n\ttype_setter:function(value){ return value; },\n\t_set_inner_size:false,\n\t_set_default_css:function(){},\n\t_pattern:function(value){ return value; },\n\t$setValue:function(value){\n\t\tvalue = this._pattern(value);\n\n\t\tif(this.getInputNode())\n\t\t\tthis.getInputNode().value = value;\n\n\t\tthis._toggleClearIcon(value);\n\t},\n\t$getValue:function(){\n\t\treturn this._pattern(this.getInputNode().value, false);\n\t},\n\tsetValueHere:function(v, data, details){\n\t\tif (details && details.symbol){\n\t\t\tconst s = details.symbol;\n\t\t\tlet value = this.getValue();\n\t\t\tlet last = value.substring(details.pos);\n\n\t\t\tvalue = value.substring(0, details.pos);\n\t\t\tvalue = value.substring(0, value.lastIndexOf(s)+s.length) + v;\n\n\t\t\tthis.setValue(value + last, details.config);\n\t\t\tsetSelectionRange(this.getInputNode(), value.length);\n\t\t} else\n\t\t\tthis.setValue(v, details && details.config);\n\t},\n\tsuggest_setter:function(value){\n\t\tif (value){\n\t\t\tassert(value !== true, \"suggest options can't be set as true, data need to be provided instead\");\n\n\t\t\tif (typeof value == \"string\"){\n\t\t\t\tconst attempt = $$(value);\n\t\t\t\tif (attempt) \n\t\t\t\t\treturn $$(value)._settings.id;\n\n\t\t\t\tvalue = { body: { url:value , dataFeed:value }};\n\t\t\t}\n\t\t\telse if (value.getItem)\n\t\t\t\tvalue = { body: { data:value }};\n\t\t\telse if (isArray(value))\n\t\t\t\tvalue = { body: { data: this._check_options(value) }};\n\t\t\telse if (!value.body)\n\t\t\t\tvalue.body = { };\n\n\t\t\textend(value, { view:\"suggest\" });\n\n\t\t\tconst view = ui(value);\n\t\t\tthis._destroy_with_me.push(view);\n\n\t\t\tthis.$ready.push(() => view._settings.master = this._settings.id);\n\t\t\treturn view._settings.id;\n\t\t}\n\t\treturn false;\n\t}\n};\n\nconst view = protoUI(api, TextPattern, button.view);\nexport default {api, view};","import Number from \"../core/number\";\n\nimport patterns from \"../webix/patterns\";\n\nimport {getSelectionRange, setSelectionRange} from \"../webix/html\";\nimport {bind, isUndefined} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\n\nconst nav_controls = {\n\t9:\"tab\",\n\t38:\"up\",\n\t40:\"down\",\n\t37:\"left\",\n\t39:\"right\"\n};\n\nconst TextPattern = {\n\t$init:function(config){\n\t\tconst pattern =  this.defaults.pattern || config.pattern;\n\t\tlet format = this.defaults.format || config.format;\n\t\tconfig.value = isUndefined(config.value) ? \"\" :config.value;\n\n\t\tif (pattern || (format && !this.format_setter)){\n\t\t\tthis.attachEvent(\"onKeyPress\", function(code, e){\n\t\t\t\tif(e.ctrlKey || e.altKey || this._settings.readonly || this._custom_format)\n\t\t\t\t\treturn;\n\n\t\t\t\tif(code>105 && code<112) //numpad operators\n\t\t\t\t\tcode -=64;\n\n\t\t\t\tif(nav_controls[code] && code !== 8 && code !==46){  //del && bsp\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._on_key_pressed(e, code);\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tthis.attachEvent(\"onAfterRender\", this._after_render);\n\t\t\tthis.getText = function(){ return this.getInputNode().value; };\n\t\t\tthis.$prepareValue = function(value){ return this._pattern(value, false); };\n\t\t\tthis._pattern = function(value, mode){\n\t\t\t\tif (mode === false)\n\t\t\t\t\treturn this._getRawValue(value);\n\t\t\t\telse\n\t\t\t\t\treturn this._matchPattern(value);\n\t\t\t};\n\n\t\t\tif (format){\n\t\t\t\tif (typeof format === \"object\"){\n\t\t\t\t\tthis._custom_format = format;\n\t\t\t\t} else {\n\t\t\t\t\tformat = Number.getConfig(format);\n\t\t\t\t\tthis._custom_format = {\n\t\t\t\t\t\tparse : function(value){ return Number.parse(value, format); },\n\t\t\t\t\t\tedit : function(value){ return Number.format(value, format); },\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// initialize pattern before value_setter\n\t\tif (pattern){\n\t\t\tthis._settings.pattern = this.pattern_setter(pattern);\n\t\t\tdelete config.pattern;\n\t\t}\n\t},\n\tpattern_setter:function(value){\n\t\tlet pattern = patterns[value] || value;\n\n\t\tif (typeof pattern == \"string\") pattern = { mask: pattern };\n\t\tpattern.allow = pattern.allow || /[A-Za-z0-9]/g;\n\n\t\tthis._patternScheme(pattern);\n\t\treturn pattern;\n\t},\n\t_init_validation:function(){\n\t\tthis.config.validate = this.config.validate || bind(function(){\n\t\t\tconst value = this.getText();\n\t\t\tconst raw = value.replace(this._pattern_chars, \"\");\n\t\t\tconst matches = (value.toString().match(this._pattern_allows) || []).join(\"\");\n\t\t\treturn (matches.length == raw.length && value.length == this._settings.pattern.mask.length);\n\t\t}, this);\n\t},\n\t_after_render:function(){\n\t\tif (!this._custom_format) \n\t\t\t_event(this.getInputNode(), \"input\", function(){\n\t\t\t\tconst stamp = (new Date()).valueOf();\n\t\t\t\tif(!this._property_stamp || stamp-this._property_stamp>100){\n\t\t\t\t\tthis._property_stamp = stamp;\n\t\t\t\t\tthis.$setValue(this.getText());\n\t\t\t\t}\n\t\t\t}, {bind:this});\n\n\t\t_event(this.getInputNode(), \"blur\", () => this._applyChanges(\"user\"));\n\t},\n\t_patternScheme:function(pattern){\n\t\tlet mask = pattern.mask, scheme = {}, chars = \"\", count = 0;\n\t\t\n\t\tfor(let i = 0; i<mask.length; i++){\n\t\t\tif(mask[i] === \"#\"){\n\t\t\t\tscheme[i] = count; count++;\n\t\t\t} else {\n\t\t\t\tscheme[i] = false;\n\t\t\t\tif(chars.indexOf(mask[i]) === -1) chars+=\"\\\\\"+mask[i];\n\t\t\t}\n\t\t}\n\n\t\tthis._pattern_allows = pattern.allow;\n\t\tthis._pattern_chars = new RegExp(\"[\"+chars+\"]\", \"g\");\n\t\tthis._pattern_scheme = scheme;\n\n\t\tthis._init_validation();\n\t},\n\t_on_key_pressed:function(e, code){\n\t\tconst node = this.getInputNode();\n\t\tlet value = node.value;\n\t\tlet pos = getSelectionRange(node);\n\t\tlet chr = \"\";\n\t\t\n\t\tif(code){\n\t\t\tif (code == 8 || code == 46){\n\t\t\t\tif(pos.start == pos.end){\n\t\t\t\t\tif(code == 8) pos.start--;\n\t\t\t\t\telse pos.end++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tchr = String.fromCharCode(code);\n\t\t\t\tconst isCapsLock = e.getModifierState(\"CapsLock\");\n\t\t\t\tif (!e.shiftKey && !isCapsLock || e.shiftKey && isCapsLock) chr = chr.toLowerCase();\n\t\t\t}\n\t\t}\n\n\t\tvalue = value.substr(0, pos.start) + chr +value.substr(pos.end);\n\t\tpos = this._getCaretPos(chr, value.length, pos.start, code);\n\n\t\tthis._input_code = code;\n\t\tthis.$setValue(value);\n\n\t\tsetSelectionRange(node, pos);\n\t},\n\t_getCaretPos:function(chr, len, pos, code){\n\t\tif((chr && chr.match(this._pattern_allows)) || (code ==8 || code ==46)){\n\t\t\tpos = chr ? pos+1 : pos;\n\t\t\tpos = this._fixCaretPos(pos, code);\n\t\t}\n\t\telse if(len-1 == pos && code !==8 && code !==46){\n\t\t\tconst rest = this._settings.pattern.mask.indexOf(\"#\", pos);\n\t\t\tif(rest>0) pos += rest;\n\t\t}\n\t\treturn pos;\n\t},\n\t_fixCaretPos:function(pos, code){\n\t\tconst prev = pos-(code !== 46)*1;\n\n\t\tif(this._pattern_scheme[prev] === false){\n\t\t\tpos = pos+(code ==8 ? -1: 1);\n\t\t\treturn this._fixCaretPos(pos, code);\n\t\t}\n\t\tif(this._pattern_scheme[pos] === false && code !==8)\n\t\t\treturn this._fixCaretPos(pos+1, code)-1;\n\t\treturn pos;\n\t},\n\t_getRawValue:function(value){\n\t\tif (this._custom_format)\n\t\t\treturn this._custom_format.parse(value);\n\n\t\tvalue = value || value === 0 ? value : \"\";\n\t\tconst matches = value.toString().match(this._pattern_allows) || [];\n\t\treturn matches.join(\"\").replace(this._pattern_chars, \"\");\n\t},\n\t_matchPattern:function(value){\n\t\tif (this._custom_format)\n\t\t\treturn this._custom_format.edit(this._custom_format.parse(value));\n\n\t\tlet raw = this._getRawValue(value),\n\t\t\tpattern = this._settings.pattern.mask,\n\t\t\tmask = this._settings.pattern.mask,\n\t\t\tscheme = this._pattern_scheme,\n\t\t\tend = false,\n\t\t\tindex = 0,\n\t\t\trawIndex = 0,\n\t\t\trawLength = 0;\n\n\t\tfor(let i in scheme){\n\t\t\tif(scheme[i]!==false){\n\t\t\t\tif(!end){\n\t\t\t\t\tindex = i*1;\n\t\t\t\t\trawIndex = scheme[i];\n\t\t\t\t\tconst rchar = raw[rawIndex]||\"\";\n\t\t\t\t\tconst next = raw[rawIndex+1];\n\n\t\t\t\t\tpattern = (rchar?pattern.substr(0, index):\"\") + rchar +(rchar && next?pattern.substr(index + 1):\"\");\n\t\t\t\t\tif(!next) end = true;\n\t\t\t\t}\n\t\t\t\trawLength++;\n\t\t\t}\n\t\t}\n\n\t\t//finalize value with subsequent mask chars \n\t\tconst icode = this._input_code;\n\t\tif((icode && icode !== 8) || (!icode && rawLength-1 === rawIndex && pattern.length < mask.length)){\n\t\t\tif(raw){\n\t\t\t\tconst nind = index+1;\n\t\t\t\tif(mask.charAt(nind)!==\"#\" && pattern.length < mask.length){\n\t\t\t\t\tlet lind = mask.indexOf(\"#\", nind);\n\t\t\t\t\tif(lind<0) lind = mask.length;\n\t\t\t\t\tpattern += mask.substr(nind, lind-nind);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(icode !==46){\n\t\t\t\tpattern += mask.substr(0, mask.indexOf(\"#\"));\n\t\t\t}\n\t\t}\n\t\tthis._input_code = null;\n\t\treturn pattern;\n\t}\n};\n\nexport default TextPattern;\n","import {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {uid} from \"../webix/helpers\";\nimport template from \"../webix/template\";\n\nimport text from \"./text\";\n\n\nconst api = {\n\tname:\"checkbox\",\n\tdefaults:{\n\t\tcheckValue:1,\n\t\tuncheckValue:0,\n\t\ttemplate:function(config, common) {\n\t\t\tvar id = \"x\"+uid();\n\t\t\tvar rightlabel = \"\";\n\t\t\tif (config.labelRight){\n\t\t\t\trightlabel = \"<label class='webix_label_right'>\"+config.labelRight+\"</label>\";\n\t\t\t\t//user clearly attempts to hide the label, help him\n\t\t\t\tif (config.labelWidth)\n\t\t\t\t\tconfig.label = config.label || \"&nbsp;\";\n\t\t\t}\n\t\t\tvar checked = (config.checkValue == config.value);\n\t\t\tvar margin = Math.floor((common._settings.aheight-16)/2);\n\t\t\tvar ch = common._baseInputHTML(\"input\")+\"style='margin-top:\"+margin+\"px;\"+(config.customCheckbox?\"display:none\":\"\")+\"' id='\"+id+\"' type='checkbox' \"+(checked?\"checked='1'\":\"\")+(config.labelRight?\" aria-label='\"+template.escape(config.labelRight)+\"'\":\"\")+\"/>\";\n\t\t\tvar className = \"webix_inp_checkbox_border webix_el_group webix_checkbox_\"+(checked?\"1\":\"0\");\n\t\t\tvar customCheckbox = config.customCheckbox || \"\";\n\t\t\tif(customCheckbox){\n\t\t\t\tcustomCheckbox = customCheckbox.replace(/(aria-checked=')\\w*(?=')/, \"$1\"+(config.value == config.checkValue?\"true\":\"false\"));\n\t\t\t\tcustomCheckbox = customCheckbox.replace(/(aria-label=')\\w*(?=')/, \"$1\"+template.escape(config.labelRight || config.label));\n\t\t\t\tcustomCheckbox = customCheckbox.replace(/(aria-invalid=')\\w*(?=')/, \"$1\"+(config.invalid?\"true\":\"false\"));\n\t\t\t}\n\t\t\tvar html = \"<div style='line-height:\"+common._settings.cheight+\"px' class='\"+className+\"'>\"+ch+customCheckbox+rightlabel+\"</div>\";\n\t\t\treturn common.$renderInput(config, html, id);\n\t\t}\n\t},\n\tcustomCheckbox_setter: function(value){\n\t\tif( value === true && $active.customCheckbox){\n\t\t\tvalue = \"<a role='presentation' onclick='javascript:void(0)'><button role='checkbox' aria-checked='false' aria-label='' type='button' aria-invalid='' class='webix_custom_checkbox'></button></a>\";\n\t\t}\n\t\treturn value;\n\t},\n\tblur: function(){\n\t\tvar input = this.getInputNode();\n\t\tif(input) input.blur();\n\t},\n\t$prepareValue: function(value){ return value; },\n\t_init_onchange: function(){},\n\t$setValue:function(value){\n\t\tvar isChecked = (value == this._settings.checkValue);\n\t\tvar input = this.$view.getElementsByTagName(\"input\")[0];\n\t\tvar parentNode = input?input.parentNode:null;\n\n\t\tif(parentNode && this._settings.customCheckbox){\n\t\t\tvar button = parentNode.getElementsByTagName(\"BUTTON\");\n\t\t\tif(button[0]) button[0].setAttribute(\"aria-checked\", isChecked?\"true\":\"false\");\n\t\t}\n\t\tif(parentNode){\n\t\t\tparentNode.className = parentNode.className.replace(/(webix_checkbox_)\\d/,\"$1\"+(isChecked?1:0));\n\t\t}\n\t\tinput.checked = isChecked;\n\t},\n\ttoggle:function(config){\n\t\tconst c = this._settings;\n\t\tconst value = (this.getValue() != c.checkValue) ? c.checkValue : c.uncheckValue;\n\t\tthis.setValue(value, config);\n\t},\n\tgetValue:function(){\n\t\tconst c = this._settings;\n\t\treturn (c.value == c.checkValue) ? c.checkValue : c.uncheckValue;\n\t},\n\tgetInputNode: function() {\n\t\treturn this.$view.getElementsByTagName(this._settings.customCheckbox?\"button\":\"input\")[0];\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.customCheckbox = !!$active.customCheckbox;\n\t}\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {delay, uid} from \"../webix/helpers\";\n\nimport template from \"../webix/template\";\nimport HTMLOptions from \"../core/htmloptions\";\n\nimport button from \"../views/button\";\nimport text from \"../views/text\";\nimport {getTextSize} from \"../webix/html\";\n\nconst api = {\n\tname:\"radio\",\n\tdefaults:{\n\t\ttemplate: function(config,common) {\n\t\t\tconst id = common._radioId();\n\t\t\tlet html = common._optionsTemplate(id);\n\t\t\thtml = \"<div class='webix_el_group' role='radiogroup' style='margin-left:\"+(config.label?config.labelWidth:0)+\"px;'>\"+html+\"</div>\";\n\t\t\treturn common.$renderInput(config, html, id);\n\t\t}\n\t},\n\t_radioId: function(){\n\t\treturn \"x\"+uid();\n\t},\n\t_optionsTemplate: function(id){\n\t\tconst config = this._settings;\n\t\tthis._check_options(config.options);\n\n\t\tconst options = this._filterOptions(config.options);\n\t\tconst active = this._getFirstActive();\n\t\tlet eachid, isChecked, isDisabled, label, tooltip, customRadio, optlabel, rd, input, focusable;\n\t\tlet html = [];\n\n\t\tfor (let i=0; i < options.length; i++) {\n\t\t\teachid = i ? this._radioId() : id;\n\n\t\t\tif  (i && (options[i].newline || config.vertical))\n\t\t\t\thtml.push(\"<div class='webix_line_break'></div>\");\n\n\t\t\tisChecked = (options[i].id == config.value);\n\t\t\tfocusable = isChecked || (!config.value && options[i].id === active);\n\t\t\tisDisabled = !!options[i].disabled;\n\t\t\tlabel = options[i].value || \"\";\n\t\t\ttooltip = config.tooltip ? \" webix_t_id='\"+options[i].id+\"'\" : \"\";\n\n\t\t\tcustomRadio = config.customRadio|| \"\";\n\t\t\tif (customRadio){\n\t\t\t\toptlabel = (i === 0 ? config.label+\" \" : \"\")+label;\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-label=')\\w*(?=')/, \"$1\"+template.escape(optlabel));\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-checked=')\\w*(?=')/, \"$1\"+(isChecked?\"true\":\"false\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(tabindex=')\\w*(?=')/, \"$1\"+(!isDisabled && focusable?\"0\":\"-1\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(aria-invalid=')\\w*(?=')/, \"$1\"+(config.invalid?\"true\":\"false\"));\n\t\t\t\tcustomRadio = customRadio.replace(/(button_id=')\\w*(?=')/, \"$1\"+options[i].id);\n\t\t\t\tif (isDisabled)\n\t\t\t\t\tcustomRadio = customRadio.replace(\"role='radio'\", \"role='radio' webix_disabled='true'\");\n\t\t\t}\n\t\t\trd = this._baseInputHTML(\"input\")+\" name='\"+(config.name || config.id)+\"' type='radio' \"+(isChecked?\"checked='1'\":\"\")+\"tabindex=\"+(!isDisabled && focusable?\"0\":\"-1\")+\n\t\t\t\t\" value='\"+options[i].id+\"' id='\"+eachid+\"'\"+(isDisabled?\" disabled='true'\":\"\")+\" style='\"+(customRadio?\"display:none\":\"\")+\"' />\";\n\t\t\tinput = \"<div \"+/*@attr*/\"radio_id\"+\"='\"+options[i].id+\"' class='webix_inp_radio_border webix_radio_\"+(isChecked?\"1\":\"0\")+\"' role='presentation'>\"+rd+customRadio+\"</div>\";\n\n\t\t\tif (label)\n\t\t\t\tlabel = \"<label for='\"+eachid+\"' class='webix_label_right'>\" + label + \"</label>\";\n\n\t\t\thtml.push(`<div style=\"height:${config.optionHeight}px;\" class=\"webix_radio_option${(isDisabled?\" webix_disabled\":\"\")}\" role=\"presentation\"${tooltip}>${input+label}</div>`);\n\t\t}\n\t\treturn html.join(\"\");\n\t},\n\trefresh:function(){\n\t\tthis.render();\n\t\tif (this._last_size && this.$getSize(0,0)[2] != this._last_size[1])\n\t\t\tthis.resize();\n\t},\n\t$getSize:function(dx, dy){\n\t\tvar size = button.api.$getSize.call(this, dx, dy);\n\t\tif(!this._settings.autoheight){\n\t\t\tvar options = this._filterOptions(this._settings.options);\n\t\t\tif (options){\n\t\t\t\tvar count = this._settings.vertical?0:1;\n\t\t\t\tfor (var i=0; i < options.length; i++)\n\t\t\t\t\tif (this._settings.vertical || options[i].newline)\n\t\t\t\t\t\tcount++;\n\t\t\t\tsize[3] = size[2] = Math.max(size[2], (this._settings.optionHeight||25) * count+this._settings.inputPadding*2+ (this._settings.labelPosition == \"top\"?this._labelTopHeight:0));\n\t\t\t}\n\t\t\tvar heightInc = this.config.bottomPadding;\n\t\t\tif(heightInc){\n\t\t\t\tsize[2] += heightInc;\n\t\t\t\tsize[3] += heightInc;\n\t\t\t}\n\t\t}\n\t\treturn size;\n\t},\n\t_getInputNode: function(){\n\t\treturn this._dataobj.getElementsByTagName(this._settings.customRadio ? \"button\" : \"input\");\n\t},\n\t$setValue:function(value){\n\t\tconst inp = this._dataobj.getElementsByTagName(\"input\");\n\t\tconst active = this._getFirstActive();\n\t\tlet id, option, focusable, parentNode, button;\n\n\t\tfor (let i=0; i < inp.length; i++){\n\t\t\tid = inp[i].parentNode.getAttribute(/*@attr*/\"radio_id\");\n\t\t\toption = this.getOption(id);\n\n\t\t\tinp[i].checked = (id == value);\n\t\t\tfocusable = option && !option.disabled && (inp[i].checked || (!value && option.id == active));\n\t\t\tinp[i].setAttribute(\"tabindex\", focusable?\"0\":\"-1\");\n\n\t\t\tparentNode = inp[i]?inp[i].parentNode:null;\n\t\t\tif (parentNode){\n\t\t\t\tparentNode.className = parentNode.className.replace(/(webix_radio_)\\d/,\"$1\"+(inp[i].checked?1:0));\n\t\t\t\tif (this._settings.customRadio){\n\t\t\t\t\tbutton = parentNode.getElementsByTagName(\"BUTTON\");\n\t\t\t\t\tif (button[0]){\n\t\t\t\t\t\tbutton[0].setAttribute(\"aria-checked\", inp[i].checked?\"true\":\"false\");\n\t\t\t\t\t\tbutton[0].setAttribute(\"tabindex\", focusable?\"0\":\"-1\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\tfocus: function(){ return this._focus(); },\n\tblur: function(){ this._blur(); },\n\tcustomRadio_setter: function(value){\n\t\tif(value === true && $active.customRadio)\n\t\t\tvalue = \"<a role='presentation' onclick='javascript:void(0)'><button type='button' class='webix_custom_radio' \"+/*@attr*/\"button_id='' role='radio' aria-checked='false' aria-label='' aria-invalid='' tabindex=''></button></a>\";\n\t\treturn value;\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.customRadio = !!$active.customRadio;\n\t\tif ($active.optionHeight)\n\t\t\tthis.defaults.optionHeight = $active.optionHeight;\n\t},\n\t_set_inner_size: function(){\n\t\tif(this._settings.autoheight){\n\t\t\tlet h = this._getOptionsHeight() + (this._settings.bottomPadding ||0) + 2 * $active.inputPadding;\n\t\t\tif(this._settings.labelPosition == \"top\") h += this._labelTopHeight;\n\t\t\tif(this._last_size[1] != h) {\n\t\t\t\tthis._settings.height = h;\n\t\t\t\tconst topView = this.getTopParentView();\n\t\t\t\tclearTimeout(topView._template_resize_timer);\n\t\t\t\ttopView._template_resize_timer = delay(()=>{\n\t\t\t\t\tif(!this.$destructed)\n\t\t\t\t\t\tthis.resize();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\t_getOptionsHeight: function(){\n\t\tconst w = this.$view.querySelector(\".webix_el_group\").offsetWidth;\n\t\treturn getTextSize(\n\t\t\tthis._optionsTemplate(),\n\t\t\t\"webix_el_radio webix_el_group\",\n\t\t\tw\n\t\t).height;\n\t}\n};\n\nconst view = protoUI(api, text.view, HTMLOptions);\nexport default {api, view};","import {protoUI, $$} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport {isUndefined, isArray, isDate} from \"../webix/helpers\";\n\nimport i18n from \"../webix/i18n\";\nimport wDate from \"../core/date\";\n\nimport text from \"./text\";\n\n\nconst api = {\n\tname:\"datepicker\",\n\t_editable:true,\n\t$init:function(config){\n\t\t// value_setter handling\n\t\tif (config.multiselect) {\n\t\t\tthis._settings.multiselect = config.multiselect;\n\t\t}\n\t\tif (config.type){\n\t\t\tthis._settings.type = config.type;\n\t\t}\n\n\t\tthis.$ready.push(this._init_popup);\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tif(common._settings.type == \"time\"){\n\t\t\t\tcommon._settings.icon = common._settings.timeIcon;\n\t\t\t}\n\t\t\t//temporary remove obj.type [[DIRTY]]\n\t\t\tconst t = obj.type; obj.type = \"\";\n\t\t\tconst res = obj.editable ? common.$renderInput(obj) : common._render_div_block(obj, common);\n\t\t\tobj.type = t;\n\t\t\treturn res;\n\t\t},\n\t\tstringResult:false,\n\t\ttimepicker:false,\n\t\ticon:\"wxi-calendar\",\n\t\ticons: true,\n\t\ttimeIcon: \"wxi-clock\",\n\t\tseparator:\", \"\n\t},\n\t$onBlur:function(){\n\t\tconst text = this.getText();\n\t\tif (this._settings.text == text)\n\t\t\treturn;\n\n\t\tconst value = this._settings.editable ? this.getValue() : this.getPopup().getValue();\n\t\tthis.setValue(value||\"\", \"user\");\n\t},\n\t$skin:function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis.defaults.inputPadding = $active.inputPadding;\n\t\tthis.defaults.point = !$active.popupNoPoint;\n\t},\n\tgetPopup: function(){\n\t\treturn $$(this._settings.popup);\n\t},\n\t_init_popup:function(){ \n\t\tconst obj = this._settings;\n\t\tif (obj.suggest)\n\t\t\tobj.popup = obj.suggest;\n\t\telse if (!obj.popup){\n\t\t\tconst timepicker = this._settings.timepicker;\n\t\t\tobj.popup = obj.suggest = this.suggest_setter({\n\t\t\t\ttype: \"calendar\",\n\t\t\t\tpoint: this._settings.point === false ? false : true,\n\t\t\t\tpadding: 0,\n\t\t\t\tbody: {\n\t\t\t\t\theight: 240 + (timepicker || this._settings.icons ? 30 : 0),\n\t\t\t\t\twidth: 250,\n\t\t\t\t\tmultiselect: this._settings.multiselect, \n\t\t\t\t\ttimepicker: timepicker,\n\t\t\t\t\ttype: this._settings.type,\n\t\t\t\t\ticons: this._settings.icons,\n\t\t\t\t\ttimeIcon: this._settings.timeIcon\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._init_once = function(){};\n\t},\n\t$render:function(obj){\n\t\tthis.$setValue(obj.value);\n\t},\n\t$prepareValue:function(value){\n\t\tif (this._settings.multiselect){\n\t\t\tif (typeof value === \"string\")\n\t\t\t\tvalue = value.split(this._settings.separator);\n\t\t\telse if (isDate(value))\n\t\t\t\tvalue = [value];\n\t\t\telse if (!value)\n\t\t\t\tvalue = [];\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\tvalue[i] = this._prepareSingleValue(value[i]);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn this._prepareSingleValue(value);\n\t},\n\t_prepareSingleValue: function(value) {\n\t\tconst type = this._settings.type;\n\t\tconst timeMode = type == \"time\";\n\n\t\t//setValue(\"1980-12-25\")\n\t\tif (!isNaN(parseFloat(value)))\n\t\t\tvalue = \"\"+value;\n\n\t\tif (typeof value == \"string\" && value){\n\t\t\tlet formatDate = null;\n\t\t\tif ((type == \"month\" || type == \"year\") && this._formatDate)\n\t\t\t\tformatDate = this._formatDate;\n\t\t\telse\n\t\t\t\tformatDate = (timeMode ? i18n.parseTimeFormatDate : i18n.parseFormatDate);\n\t\t\tvalue = formatDate(value);\n\t\t}\n\n\t\tif (value){\n\t\t\t//time mode\n\t\t\tif(timeMode){\n\t\t\t\t//setValue([16,24])\n\t\t\t\tif(isArray(value)){\n\t\t\t\t\tconst time = new Date();\n\t\t\t\t\ttime.setHours(value[0]);\n\t\t\t\t\ttime.setMinutes(value[1]);\n\t\t\t\t\tvalue = time;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//setValue(invalid date)\n\t\t\tif(isNaN(value.getTime()))\n\t\t\t\tvalue = \"\";\n\t\t}\n\n\t\treturn value;\n\t},\n\t_get_visible_text:function(value){\n\t\tif (this._settings.multiselect)\n\t\t\treturn []\n\t\t\t\t.concat(value)\n\t\t\t\t.map(a => this._get_visible_text_single(a))\n\t\t\t\t.join(this.config.separator);\n\t\telse\n\t\t\treturn this._get_visible_text_single(value);\n\t},\n\t_get_visible_text_single:function(value){\n\t\tlet formatStr = this._formatStr;\n\t\tif(!formatStr){\n\t\t\tif(this._settings.type == \"time\")\n\t\t\t\tformatStr = i18n.timeFormatStr;\n\t\t\telse if(this.config.timepicker)\n\t\t\t\tformatStr = i18n.fullDateFormatStr;\n\t\t\telse\n\t\t\t\tformatStr = i18n.dateFormatStr;\n\t\t}\n\t\treturn formatStr(value);\n\t},\n\t_set_visible_text:function(){\n\t\tconst node = this.getInputNode();\n\t\tif(isUndefined(node.value))\n\t\t\tnode.innerHTML = this._settings.text || this._get_div_placeholder();\n\t\telse\n\t\t\tnode.value = this._settings.text || \"\";\n\t},\n\t$compareValue:function(oldvalue, value){\n\t\tif(!oldvalue && !value) return true;\n\t\treturn wDate.equal(oldvalue, value);\n\t},\n\t$setValue:function(value){\n\t\tthis._settings.text = (value?this._get_visible_text(value):\"\");\n\t\tthis._set_visible_text();\n\t\tthis._toggleClearIcon(this._settings.text);\n\t},\n\tformat_setter:function(value){\n\t\tif(value){\n\t\t\tif (typeof value === \"function\")\n\t\t\t\tthis._formatStr = value;\n\t\t\telse {\n\t\t\t\tthis._formatStr = wDate.dateToStr(value);\n\t\t\t\tthis._formatDate = wDate.strToDate(value);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tthis._formatStr = this._formatDate = null;\n\t\treturn value;\n\t},\n\tgetInputNode: function(){\n\t\treturn this._settings.editable ? this._dataobj.getElementsByTagName(\"input\")[0] : this._dataobj.getElementsByTagName(\"DIV\")[1];\n\t},\n\tgetValue:function(){\n\t\tif (this._settings.multiselect){\n\t\t\tconst value = this._settings.value;\n\t\t\tif (!value) return [];\n\n\t\t\tconst result = []\n\t\t\t\t.concat(value)\n\t\t\t\t.map(a => this._get_value_single(a));\n\n\t\t\tif (this._settings.stringResult)\n\t\t\t\treturn result.join(this._settings.separator);\n\n\t\t\treturn result;\n\t\t}\n\n\t\treturn this._get_value_single(this._settings.value);\n\t},\n\t_get_value_single:function(value){\n\t\tconst type = this._settings.type;\n\t\tconst timeMode = type == \"time\";\n\n\t\t//input was not rendered, we need to parse value from setValue method\n\t\tif (!this._rendered_input)\n\t\t\tvalue = this.$prepareValue(value) || null;\n\t\t//rendere and in edit mode\n\t\telse if (this._settings.editable){\n\t\t\tlet formatDate = this._formatDate;\n\t\t\tif (!formatDate){\n\t\t\t\tif(timeMode)\n\t\t\t\t\tformatDate = i18n.timeFormatDate;\n\t\t\t\telse if(this.config.timepicker)\n\t\t\t\t\tformatDate = i18n.fullDateFormatDate;\n\t\t\t\telse\n\t\t\t\t\tformatDate = i18n.dateFormatDate;\n\t\t\t}\n\n\t\t\tconst time = formatDate(this.getInputNode().value);\n\t\t\tif (timeMode && isDate(value) && isDate(time)){\n\t\t\t\tvalue = wDate.copy(value);\n\t\t\t\tvalue.setHours(time.getHours());\n\t\t\t\tvalue.setMinutes(time.getMinutes());\n\t\t\t\tvalue.setSeconds(time.getSeconds());\n\t\t\t\tvalue.setMilliseconds(time.getMilliseconds());\n\t\t\t} else\n\t\t\t\tvalue = time;\n\t\t}\n\n\t\t//return string from getValue\n\t\tif(this._settings.stringResult){\n\t\t\tlet formatStr = i18n.parseFormatStr;\n\t\t\tif(timeMode)\n\t\t\t\tformatStr = i18n.parseTimeFormatStr;\n\t\t\tif(this._formatStr && (type == \"month\" || type == \"year\")){\n\t\t\t\tformatStr = this._formatStr;\n\t\t\t}\n\n\t\t\tif(this._settings.multiselect)\n\t\t\t\treturn [].concat(value).map(a => a ? formatStr(a) : \"\");\n\t\t\treturn (value?formatStr(value):\"\");\n\t\t}\n\n\t\treturn value||null;\n\t},\n\tgetText:function(){\n\t\tconst node = this.getInputNode();\n\t\tif (!node) return \"\";\n\t\tif (isUndefined(node.value)){\n\t\t\tif (node.firstChild && node.firstChild.className === \"webix_placeholder\")\n\t\t\t\treturn \"\";\n\t\t\treturn node.innerHTML;\n\t\t}\n\t\treturn node.value;\n\t}\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};","import {protoUI} from \"../ui/core\";\nimport {isUndefined} from \"../webix/helpers\";\nimport {_event} from \"../webix/htmlevents\";\n\nimport richselect from \"./richselect\";\n\n\nconst api = {\n\tname:\"combo\",\n\tgetInputNode:function(){\n\t\treturn this._dataobj.getElementsByTagName(\"input\")[0];\n\t},\n\t_init_onchange:function(){\n\t\t_event(this.getInputNode(), \"keydown\", e => {\n\t\t\tif (e.keyCode == 13)\n\t\t\t\trichselect.api.$onBlur.apply(this, []);\n\t\t});\n\t\trichselect.api._init_onchange.apply(this, arguments);\n\t},\n\t_revertValue:function(){\n\t\tvar value = this.getValue();\n\t\tthis.$setValue(isUndefined(value)?\"\":value);\n\t},\n\t_applyChanges:function(c){\n\t\tvar input = this.getInputNode(),\n\t\t\tvalue = \"\",\n\t\t\tsuggest =  this.getPopup();\n\n\t\tif (input.value){\n\t\t\tvalue = this._settings.value;\n\t\t\tif(suggest.getItemText(value) != this.getText())\n\t\t\t\tvalue = suggest.getSuggestion()||value;\n\t\t}\n\t\tif (value != this._settings.value)\n\t\t\tthis.setValue(value, c);\n\t\telse\n\t\t\tthis.$setValue(value);\n\t},\n\tdefaults:{\n\t\ttemplate:function(config, common){\n\t\t\treturn common.$renderInput(config).replace(/(<input)\\s*(?=\\w)/, \"$1\"+\" role='combobox'\");\n\t\t},\n\t\ticon: \"wxi-menu-down\"\n\t},\n\ton_click:{\n\t\twebix_clear_icon:function(){\n\t\t\tif (this.$allowsClear) this.setValue(\"\", \"user\");\n\t\t\treturn false;\n\t\t},\n\t\t\"webix_inp_label\": function(e){this._ignoreLabelClick(e);},\n\t\t\"webix_inp_top_label\": function(e){this._ignoreLabelClick(e);}\n\t}\n};\n\nconst view = protoUI(api, richselect.view);\nexport default {api, view};","import {addCss, removeCss} from \"../webix/html\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {once, uid} from \"../webix/helpers\";\nimport template from \"../webix/template\";\nimport {$name} from \"../webix/skin\";\n\nimport HTMLOptions from \"../core/htmloptions\";\n\nimport text from \"./text\";\n\n\nconst api = {\n\tname:\"segmented\",\n\t$allowsClear:false,\n\t$init:function(){\n\t\tthis.attachEvent(\"onChange\", function(value){\n\t\t\tif (this._settings.multiview)\n\t\t\t\tthis._show_view(value);\n\t\t});\n\t\tthis.attachEvent(\"onAfterRender\", once(function(){\n\t\t\tif (this._settings.multiview && this._settings.value)\n\t\t\t\tthis._show_view(this._settings.value);\n\t\t}));\n\t},\n\t_show_view:function(value){\n\t\tvar top = this.getTopParentView();\n\t\tvar view = null;\n\n\t\t//get from local isolate\n\t\tif (top && top.$$)\n\t\t\tview = top.$$(value);\n\t\t//or check globally\n\t\tif (!view)\n\t\t\tview = $$(value);\n\n\t\tif(view && view.show)\n\t\t\tview.show();\n\t},\n\tdefaults:{\n\t\ttemplate:function(obj, common){\n\t\t\tcommon._check_options(obj.options);\n\n\t\t\tconst options = common._filterOptions(obj.options);\n\t\t\tconst width = common._get_input_width(obj);\n\t\t\tconst borders = $name == \"contrast\" ? 0 : options.length - 1;\n\t\t\tconst optionWidth = obj.optionWidth || Math.floor((width-borders)/options.length);\n\t\t\t\n\t\t\tlet html = \"<div style='width:\"+width+\"px' class='webix_all_segments' role='tablist' aria-label='\"+template.escape(obj.label)+\"'>\";\n\t\t\tlet tooltip, isDisabled;\n\n\t\t\tif (!obj.value)\n\t\t\t\tobj.value = common._getFirstActive(true);\n\n\t\t\tfor (var i=0; i<options.length; i++){\n\t\t\t\tisDisabled = !!options[i].disabled;\n\t\t\t\ttooltip = obj.tooltip ? \" webix_t_id='\"+options[i].id+\"'\" : \"\";\n\t\t\t\thtml += \"<button type='button' style='width:\"+(options[i].width || optionWidth)+\"px' role='tab' aria-selected='\"+(obj.value==options[i].id?\"true\":\"false\")+\n\t\t\t\t\t\"' tabindex='\"+(!isDisabled && obj.value==options[i].id?\"0\":\"-1\")+\"' class='\"+\"webix_segment_\"+((i==options.length-1)?\"N\":(i>0?1:0))+((obj.value==options[i].id)?\" webix_selected\":\"\")+\n\t\t\t\t\t(isDisabled?\" webix_disabled\":\"\")+\"' \"+(isDisabled?\"webix_disabled='true' \":\"\")+/*@attr*/\"button_id='\"+options[i].id+\"'\"+tooltip+\">\"+options[i].value+\"</button>\";\n\t\t\t}\n\t\t\t\n\t\t\treturn common.$renderInput(obj, html+\"</div>\", uid());\n\t\t}\n\t},\n\t_getInputNode:function(){\n\t\treturn this.$view.getElementsByTagName(\"BUTTON\");\n\t},\n\tfocus: function(){ return this._focus(); },\n\tblur: function(){ this._blur(); },\n\t$setValue:function(value){\n\t\t//refresh tabbar if the option is in the popup list\n\t\tconst popup = this.config.tabbarPopup;\n\t\tif (popup && $$(popup) && $$(popup).getBody().exists(value))\n\t\t\treturn this.refresh();\n\n\t\tconst inputs = this._getInputNode();\n\t\tlet id, option;\n\n\t\tfor (let i=0; i<inputs.length; i++){\n\t\t\tid = inputs[i].getAttribute(/*@attr*/\"button_id\");\n\t\t\toption = this.getOption(id);\n\n\t\t\tinputs[i].setAttribute(\"aria-selected\", (value==id?\"true\":\"false\"));\n\t\t\tinputs[i].setAttribute(\"tabindex\", (option && !option.disabled && value==id?\"0\":\"-1\"));\n\t\t\tif (value == id)\n\t\t\t\taddCss(inputs[i], \"webix_selected\");\n\t\t\telse\n\t\t\t\tremoveCss(inputs[i], \"webix_selected\");\n\t\t}\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value||\"\";\n\t},\n\tgetValue:function(){\n\t\treturn this._settings.value;\n\t},\n\tgetInputNode:function(){\n\t\treturn null;\n\t},\n\t_set_inner_size:false\n};\n\nconst view = protoUI(api, text.view, HTMLOptions);\nexport default {api, view};","import text from \"../views/text\";\nimport {protoUI, $$} from \"../ui/core\";\nimport {extend, _to_array} from \"../webix/helpers\";\n\nimport i18n from \"../webix/i18n\";\n\nconst api = {\n\tname:\"multitext\",\n\t$cssName:\"text\",\n\tdefaults:{\n\t\ticon:\"wxi-plus-circle\",\n\t\ticonWidth:25,\n\t\tseparator:\", \"\n\t},\n\tgetValueHere:function(){\n\t\treturn text.api.getValue.call(this);\n\t},\n\tsetValueHere:function(value){\n\t\treturn text.api.$setValue.call(this, value);\n\t},\n\tgetValue:function(){\n\t\tif (this.config.mode == \"extra\") return this.getValueHere();\n\n\t\tif (this._full_value) \n\t\t\treturn this._full_value;\n\n\t\tvar values = [ this.getValueHere(this) ];\n\t\tfor (var i=0; i<this._subs.length; i++){\n\t\t\tvar seg = $$(this._subs[i]).getValueHere();\n\t\t\tif (seg) values.push(seg);\n\t\t}\n\t\treturn values.join(this.config.separator);\n\t},\n\t$setValue:function(value){\n\t\tvalue = value || \"\";\n\n\t\tif (this.config.mode == \"extra\") return this.setValueHere(value);\n\n\t\tthis._full_value = value;\n\t\tvar parts = value.split(this.config.separator);\n\t\tif (parts.length == this._subs.length+1){\n\t\t\tthis.setValueHere(parts[0]);\n\t\t\tfor (let i = 0; i < this._subs.length; i++)\n\t\t\t\t$$(this._subs[i]).setValueHere(parts[i+1]);\n\n\t\t\tthis._full_value = \"\";\n\t\t\treturn;\n\t\t}\n\n\t\tthis.removeSection();\n\t\tthis.setValueHere.call(this, parts[0]);\n\t\tfor (let i = 1; i<parts.length; i++){\n\t\t\tthis.addSection(parts[i]);\n\t\t}\n\t\tthis._full_value = \"\";\n\t},\n\t$renderIcon:function(c){\n\t\tif (c.icon){\n\t\t\tconst height = c.aheight - 2*c.inputPadding;\n\t\t\tconst padding = (height - 18)/2 -1;\n\t\t\tconst aria = \"role='button' tabindex='0' aria-label='\"+(i18n.aria[\"multitext\"+(c.mode || \"\")+\"Section\"])+\"'\";\n\t\t\treturn \"<span style='right:0;height:\"+(height-padding)+\"px;padding-top:\"+padding+\"px;' class='webix_input_icon webix_multitext_icon \"+c.icon+\"' \"+aria+\"></span>\";\n\t\t}\n\t\treturn \"\";\n\t},\n\t_subOnChange:function(v, o, config){\n\t\tconst parent = this.config.master ? $$(this.config.master) : this;\n\t\tconst value = parent.getValue();\n\t\tconst oldvalue = parent._settings.value;\n\n\t\tif (value != oldvalue){\n\t\t\tparent._settings.value = value;\n\t\t\tparent.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\taddSection:function(text){\n\t\tvar config = this.config,\n\t\t\tnewConfig = {\n\t\t\t\tlabelWidth: config.labelWidth,\n\t\t\t\tinputWidth: config.inputWidth,\n\t\t\t\twidth: config.width,\n\t\t\t\tlabel: config.label ? \"&nbsp;\" : \"\",\n\t\t\t\tview: this.name,\n\t\t\t\tmode: \"extra\",\n\t\t\t\tvalue: text || \"\",\n\t\t\t\ticon: \"wxi-minus-circle\",\n\t\t\t\ttooltip: config.tooltip,\n\t\t\t\tsuggest: config.suggest || null,\n\t\t\t\tmaster: config.id\n\t\t\t};\n\n\t\textend(newConfig, config.subConfig||{},true);\n\n\t\tvar newone = this.getParentView().addView(newConfig);\n\t\t$$(newone).attachEvent(\"onChange\", this._subOnChange);\n\n\t\tthis._subs.push(newone);\n\t\tthis.callEvent(\"onSectionAdd\", [newone, this._subs.length]);\n\t\treturn newone;\n\t},\n\tremoveSection:function(id){\n\t\tvar parent = this.config.master ? $$(this.config.master) : this;\n\t\tfor (var i = parent._subs.length - 1; i >= 0; i--){\n\t\t\tvar section = parent._subs[i];\n\t\t\tif (!id || section == id){\n\t\t\t\tparent._subs.removeAt(i);\n\t\t\t\tthis.getParentView().removeView(section);\n\t\t\t\tparent.callEvent(\"onSectionRemove\", [section, i+1]);\n\t\t\t}\n\t\t}\n\t},\n\ton_click:{\n\t\t\"webix_input_icon\":function(){\n\t\t\tif (this.config.mode == \"extra\"){\n\t\t\t\tconst parent = this.getParentView();\n\t\t\t\tthis.removeSection(this.config.id);\n\n\t\t\t\tconst childs = parent.getChildViews();\n\t\t\t\tchilds[childs.length - 1].focus();\n\t\t\t\t\n\t\t\t\tthis._subOnChange(null,null,\"user\");\n\t\t\t} else\n\t\t\t\t$$(this.addSection()).focus();\n\n\t\t\treturn false;\n\t\t}\n\t},\n\t$init:function(){\n\t\tthis._subs = _to_array([]);\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t$render:function(obj){\n\t\tthis.$setValue(obj.value);\n\t},\n};\n\n\nconst view = protoUI(api,  text.view);\nexport default {api, view};","import richselect from \"../views/richselect\";\nimport button from \"../views/button\";\nimport {protoUI, ui, $$} from \"../ui/core\";\nimport UIManager from \"../core/uimanager\";\nimport {$active} from \"../webix/skin\";\nimport {_to_array, copy, isArray, extend, uid, delay, isUndefined} from \"../webix/helpers\";\nimport popup from \"../views/popup\";\nimport base from \"../views/view\";\nimport i18n from \"../webix/i18n\";\nimport {create, offset} from \"../webix/html\";\nimport {_event} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\n\nconst api = {\n\tname:\"multicombo\",\n\t$cssName:\"text\",\n\tdefaults:{\n\t\tkeepText: false,\n\t\tseparator: \",\",\n\t\tstringResult: true,\n\t\ticon: false,\n\t\ticonWidth: 0,\n\t\ttagMode: true,\n\t\ttagTemplate: function(values){\n\t\t\treturn (values.length?values.length+\" item(s)\":\"\");\n\t\t},\n\t\ttemplate:function(obj,common){\n\t\t\treturn common._render_value_block(obj, common);\n\t\t}\n\t},\n\t$init:function(){\n\t\tthis.$view.className += \" webix_multicombo\";\n\n\t\tthis.attachEvent(\"onAfterRender\", function(){\n\t\t\tthis._last_size = null;\n\t\t});\n\t\t// prevent scroll to input\n\t\t_event(this.$view, \"scroll\", () => { this.$view[\"scrollTop\"] = 0; });\n\t},\n\t$skin:function(){\n\t\trichselect.api.$skin.call(this);\n\n\t\tthis._inputHeight = $active.inputHeight;\n\t},\n\ton_click: {\n\t\t\"webix_multicombo_delete\": function(e,view,node){\n\t\t\tif(!this._settings.readonly && node)\n\t\t\t\tthis._removeValue(node.parentNode.getAttribute(\"optvalue\"));\n\t\t\treturn false;\n\t\t},\n\t\t\"webix_inp_label\": function(e){this._ignoreLabelClick(e);},\n\t\t\"webix_inp_top_label\": function(e){this._ignoreLabelClick(e);}\n\t},\n\t$onBlur:function(){\n\t\tconst input = this.getInputNode();\n\t\tlet value = input.value;\n\n\t\t//blurring caused by clicks in the suggest list cannot affect new values\n\t\tif (value && this._settings.newValues && new Date()-(this.getPopup()._click_stamp||0)>100){\n\t\t\tvalue = value.trim();\n\t\t\tthis._addNewValue(value, \"user\");\n\t\t}\n\n\t\tthis._inputValue = input.value = (this._settings.keepText) ? value : \"\";\n\t\tthis.$setValue();\n\t},\n\t_removeValue: function(value){\n\t\tconst values = _to_array(copy(this._settings.value||[]));\n\n\t\tlet index;\n\t\tif (value && (index = values.find(value)) !== -1){\n\t\t\tvalues.removeAt(index);\n\t\t\tthis.setValue(values, \"user\");\n\n\t\t\tconst suggest = $$(this.config.suggest);\n\t\t\tif (suggest && suggest._settings.selectAll)\n\t\t\t\tsuggest.getBody()._cells[0].setValue(0, \"auto\");\n\t\t}\n\t},\n\t_addValue: function(newValue, config){\n\t\tvar suggest = $$(this.config.suggest);\n\t\tvar list = suggest.getList();\n\t\tvar item = list.getItem(newValue);\n\n\t\tif(item){\n\t\t\tvar values = suggest.getValue();\n\t\t\tif(values && typeof values == \"string\")\n\t\t\t\tvalues = values.split(suggest.config.separator);\n\t\t\tvalues = _to_array(values||[]);\n\t\t\tif(values.find(newValue)<0){\n\t\t\t\tvalues.push(newValue);\n\t\t\t\tsuggest.setValue(values, config);\n\t\t\t\tthis.setValue(suggest.getValue(), config);\n\t\t\t}\n\t\t}\n\t},\n\t_addNewValue: function(value, config){\n\t\tconst suggest = $$(this.config.suggest);\n\t\tconst list = suggest.getList();\n\n\t\tvalue = template.escape( value.trim() );\n\n\t\tlet id;\n\t\tif (value){\n\t\t\tfor (let i in list.data.pull)\n\t\t\t\tif (suggest.getItemText(i) == value) id = i;\n\n\t\t\tif (!id) id = list.add({value: value});\n\t\t\tthis._addValue(id, config);\n\t\t}\n\t},\n\t_suggest_config:function(value){\n\t\tvar isObj = !isArray(value) && typeof value == \"object\" && !value.name,\n\t\t\tsuggest = { view:\"checksuggest\", separator:this.config.separator, buttonText: this.config.buttonText, button: this.config.button },\n\t\t\tcombo = this;\n\t\t\n\t\tif (isObj){\n\t\t\textend(suggest, value, true);\n\t\t}\n\t\tif (!suggest.width && this._settings.optionWidth){\n\t\t\textend(suggest, {width:this._settings.optionWidth, fitMaster: false}, true);\n\t\t}\n\t\tsuggest.width = suggest.fitMaster || isUndefined(suggest.fitMaster) ? 0 : suggest.width;\n\n\t\tvar view = ui(suggest);\n\t\tif(!suggest.width)\n\t\t\tview.$customWidth = function(){\n\t\t\t\tthis.config.width = combo._get_input_width(combo._settings);\n\t\t\t};\n\t\tview.attachEvent(\"onBeforeShow\",function(node,mode, point){\n\t\t\tif(this._settings.master){\n\t\t\t\tthis.setValue($$(this._settings.master).config.value, \"auto\");\n\n\t\t\t\tif($$(this._settings.master).getInputNode().value || this.isVisible()){\n\t\t\t\t\tthis.getList().refresh();\n\t\t\t\t\tthis._dont_unfilter = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.getList().filter();\n\n\t\t\t\tif(node.tagName && node.tagName.toLowerCase() == \"input\"){\n\t\t\t\t\tpopup.api.show.apply(this, [node.parentNode,mode, point]);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t\tvar list = view.getList();\n\t\tif (typeof value == \"string\")\n\t\t\tlist.load(value);\n\t\telse if (!isObj)\n\t\t\tlist.parse(value);\n\n\t\t//prevent default show-hide logic\n\t\tview._suggest_after_filter = function(){\n\t\t\tif (!this._resolve_popup) return true;\n\t\t\tthis._resolve_popup = false;\n\n\t\t\tthis.show(combo._getInputDiv());\n\t\t};\n\n\t\treturn view;\n\t},\n\t_render_value_block:function(obj, common){\n\t\tvar id, input, inputAlign,inputStyle, inputValue, inputWidth,\n\t\t\theight, html, label, list, message, padding, readOnly,  width,\n\t\t\tbottomLabel = \"\",\n\t\t\ttop =  this._settings.labelPosition == \"top\";\n\n\t\tid = \"x\"+uid();\n\t\twidth = common._get_input_width(obj);\n\t\tinputAlign = obj.inputAlign || \"left\";\n\n\t\theight = this._input_height - 2*$active.inputPadding -2;\n\n\t\tinputValue = (this._inputValue||\"\");\n\t\tlist = \"<ul class='webix_multicombo_listbox' style='line-height:\"+height+\"px'></ul>\";\n\n\t\tinputWidth = Math.min(width,(common._inputWidth||7));\n\n\t\tinputStyle = \"width:\"+inputWidth+\"px;height:\"+height+\"px;max-width:\"+(width-20)+\"px\";\n\n\t\treadOnly = obj.readonly?\" readonly \":\"\";\n\t\tinput = \"<input id='\"+id+\"' role='combobox' aria-multiline='true' aria-label='\"+template.escape(obj.label)+\"' tabindex='0' type='text' class='webix_multicombo_input' \"+readOnly+\" style='\"+inputStyle+\"' value='\"+inputValue+\"'/>\";\n\t\thtml = \"<div class='webix_inp_static' onclick='' style='line-height:\"+height+\"px;width:\"+width+\"px;text-align:\"+inputAlign+\";height:auto' >\"+list+input +\"</div>\";\n\n\t\tlabel = common.$renderLabel(obj,id);\n\n\t\tpadding = this._settings.awidth - width - $active.inputPadding*2;\n\t\tmessage = (obj.invalid ? obj.invalidMessage : \"\") || obj.bottomLabel;\n\t\tif (message)\n\t\t\tbottomLabel =  \"<div class='webix_inp_bottom_label' style='width:\"+width+\"px;margin-left:\"+Math.max(padding,$active.inputPadding)+\"px;'>\"+message+\"</div>\";\n\n\t\tif (top)\n\t\t\treturn label+\"<div class='webix_el_box' style='width:\"+this._settings.awidth+\"px; height:auto;'>\"+html+bottomLabel+\"</div>\";\n\t\telse\n\t\t\treturn \"<div class='webix_el_box' style='width:\"+this._settings.awidth+\"px; height:auto; min-height:\"+this._settings.aheight+\"px;'>\"+label+html+bottomLabel+\"</div>\";\n\t},\n\t_getValueListBox: function(){\n\t\treturn this._getBox().getElementsByTagName(\"UL\")[0];\n\t},\n\t_set_inner_size: function(){\n\t\tconst popup = this.getPopup();\n\t\tif (popup) {\n\t\t\tconst textArr = (popup ? popup.setValue(this._settings.value, \"auto\") : null);\n\t\t\tif (popup._toMultiValue)\n\t\t\t\tthis._settings.value = popup._toMultiValue(this._settings.value);\n\t\t\tlet html = \"\";\n\t\t\tconst listbox = this._getValueListBox();\n\t\t\tconst text = textArr && textArr.length;\n\t\t\tif (text){\n\t\t\t\t// 2px border; 6px margin\n\t\t\t\tconst width = this._get_input_width(this._settings) - 2 - 6;\n\t\t\t\tconst height = this._input_height - 2*$active.inputPadding - 2 - 6;\n\t\t\t\tconst values = this._settings.value || [];\n\n\t\t\t\tif (this._settings.tagMode) {\n\t\t\t\t\tfor (let i = 0; i < textArr.length; i++){\n\t\t\t\t\t\thtml += this.$renderTag(textArr[i], width, height, values[i]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thtml += \"<li class='webix_multicombo_tag' style='line-height:\"+height+\"px;max-width:\"+width+\"px;'><span class='webix_multicombo_text'>\"+this._settings.tagTemplate(values)+\"</span></li>\";\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tlistbox.innerHTML = html;\n\t\t\t// reset placeholder\n\t\t\tconst inp = this.getInputNode();\n\t\t\tif (this._settings.placeholder) {\n\t\t\t\tif (text) {\n\t\t\t\t\tinp.placeholder = \"\";\n\t\t\t\t\tif (!inp.value && inp.offsetWidth > 20)\n\t\t\t\t\t\tinp.style.width = \"20px\";\n\t\t\t\t} else if (!inp.value) {\n\t\t\t\t\tinp.placeholder = this._settings.placeholder;\n\t\t\t\t\tinp.style.width = this._get_input_width(this._settings)+\"px\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this._settings.tagMode && listbox.firstChild)\n\t\t\t\tinp.style.width = this._getMultiComboInputWidth() +\"px\";\n\t\t}\n\t\tif(this._resizedToContent)\n\t\t\tdelete this._resizedToContent;\n\t\telse\n\t\t\tthis._resizeToContent();\n\t},\n\t$renderTag(text, width, height, value){\n\t\tconst c = this._settings;\n\t\tconst content = \"<span class='webix_multicombo_text'>\"+text+\"</span>\";\n\t\tconst remove = c.readonly ? \"\" : \"<span class='webix_multicombo_delete' role='button' aria-label='\"+i18n.aria.removeItem+\"'></span>\";\n\t\treturn \"<li class='webix_multicombo_value\"+(c.readonly?\" webix_readonly\":\"\")+\"' style='line-height:\"+height+\"px;max-width:\"+width+\"px;' optvalue='\"+template.escape(value)+\"'>\"+content+remove+\"</li>\";\n\t},\n\t_focusAtEnd: function(input){\n\t\tinput = input||this.getInputNode();\n\t\tif (input){\n\t\t\tconst length = input.value.length;\n\t\t\tinput.selectionStart = length;\n\t\t\tinput.selectionEnd = length;\n\t\t\tinput.focus();\n\t\t}\n\t},\n\t_resizeToContent: function(enter){\n\t\tconst top = this._settings.labelPosition == \"top\";\n\t\tconst inputDiv = this._getInputDiv();\n\t\tlet inputHeight = Math.max(inputDiv.offsetHeight + 2*$active.inputPadding, this._input_height);\n\n\t\tif (top) inputHeight += this._labelTopHeight;\n\t\tinputHeight += this._settings.bottomPadding ||0;\n\n\t\tconst sizes = this.$getSize(0,0);\n\t\tif(inputHeight != sizes[2]){\n\t\t\tconst calcHeight = inputDiv.offsetHeight + (top?this._labelTopHeight:0) + 2*$active.inputPadding;\n\t\t\tconst topView = this.getTopParentView();\n\n\t\t\tclearTimeout(topView._template_resize_timer);\n\t\t\ttopView._template_resize_timer = delay(function(){\n\t\t\t\tif (this.config.height != calcHeight){\n\t\t\t\t\tthis.config.height = calcHeight;\n\t\t\t\t\tthis._resizedToContent = true;\n\t\t\t\t\tthis.resize();\n\t\t\t\t}\n\n\t\t\t\tif (UIManager.getFocus() === this){\n\t\t\t\t\tif (enter)\n\t\t\t\t\t\tthis.getInputNode().select();\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._focusAtEnd(this.getInputNode());\n\t\t\t\t}\n\n\t\t\t\tconst suggest = this.getPopup();\n\t\t\t\tif (suggest.isVisible()){\n\t\t\t\t\tconst inputDiv = this._getInputDiv();\n\n\t\t\t\t\tlet pos;\n\t\t\t\t\tconst scroll = this.queryView(view => view.config.scroll && view.config.scroll.indexOf(\"y\") != -1, \"parent\");\n\n\t\t\t\t\tif(scroll){\n\t\t\t\t\t\tconst inputPos = offset(inputDiv);\n\t\t\t\t\t\tconst scrollPos = offset(scroll.$view);\n\n\t\t\t\t\t\tif(inputPos.y + inputPos.height > scrollPos.y + scrollPos.height)\n\t\t\t\t\t\t\tpos = {pos:\"top\"};\n\t\t\t\t\t}\n\n\t\t\t\t\tsuggest.show(inputDiv, pos);\n\t\t\t\t}\n\n\t\t\t}, this);\n\t\t}\n\t\tif (enter)\n\t\t\tthis.getInputNode().select();\n\t},\n\t_getInputDiv: function(){\n\t\tvar parentNode = this._getBox();\n\t\tvar nodes = parentNode.childNodes;\n\t\tfor(var i=0; i < nodes.length; i++){\n\t\t\tif(nodes[i].className && nodes[i].className.indexOf(\"webix_inp_static\")!=-1)\n\t\t\t\treturn nodes[i];\n\t\t}\n\t\treturn parentNode;\n\t},\n\tgetInputNode: function(){\n\t\treturn this._dataobj.getElementsByTagName(\"INPUT\")[0];\n\t},\n\t$compareValue:function(oldvalue, value){\n\t\treturn oldvalue.toString() == value.toString();\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = value || [];\n\t\tif (typeof value === \"string\")\n\t\t\treturn value.split(this._settings.separator);\n\t\treturn isArray(value) ? value : [ button.api.$prepareValue.call(this, value) ];\n\t},\n\t$setValue:function(){\n\t\tif (this._rendered_input)\n\t\t\tthis._set_inner_size();\n\t},\n\tgetValue:function(config){\n\t\tif(typeof config == \"object\" && config.options)\n\t\t\treturn this._getSelectedOptions();\n\n\t\tconst value = this._settings.value||[];\n\n\t\tif (this._settings.stringResult)\n\t\t\treturn value.join(this._settings.separator);\n\t\treturn value;\n\t},\n\tgetText:function(){\n\t\tvar value = this._settings.value||[];\n\t\tif(!value.length) return \"\";\n\n\t\tvar text = [];\n\t\tfor(var i = 0; i<value.length; i++)\n\t\t\ttext.push(this.getPopup().getItemText(value[i]));\n\t\treturn text.join(this._settings.separator);\n\t},\n\t_getSelectedOptions: function(){\n\t\tvar i, item, popup,\n\t\t\toptions = [],\n\t\t\tvalue = this._settings.value||[];\n\n\t\tif (!value.length) return value;\n\n\t\tpopup = this.getPopup();\n\n\t\tfor(i = 0; i < value.length; i++){\n\t\t\titem = popup.getList().getItem(value[i]) || (popup._valueHistory?popup._valueHistory[value[i]]:null);\n\t\t\tif(item)\n\t\t\t\toptions.push(item);\n\t\t}\n\n\t\treturn options;\n\t},\n\t$setSize:function(x,y){\n\t\tvar config = this._settings;\n\t\tif(base.api.$setSize.call(this,x,y)){\n\t\t\tif (!x || !y) return;\n\t\t\tif (config.labelPosition == \"top\"){\n\t\t\t\tconfig.labelWidth = 0;\n\t\t\t}\n\t\t\tthis.render();\n\t\t}\n\t},\n\t$render:function(){},\n\t_calcInputWidth: function(value){\n\t\tconst tmp = create(\"span\", {type:\"text\", style:\"visibility:visible; white-space:pre-wrap; position:absolute; top:-9999px;\"});\n\t\ttmp.className = \"webix_el_text\";\n\t\ttmp.innerHTML = `<span class=\"webix_multicombo_input\" style=\"margin:0;\">${value.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\")}</span>`;\n\n\t\tdocument.body.appendChild(tmp);\n\t\tconst width = tmp.offsetWidth+1;\n\n\t\tdocument.body.removeChild(tmp);\n\t\treturn width;\n\t},\n\t_getMultiComboInputWidth: function(){\n\t\tconst listbox = this._getValueListBox();\n\t\tconst width = listbox.offsetWidth - (listbox.firstChild.offsetWidth + 1);\n\t\treturn (width <= 25)? listbox.offsetWidth-12: width-15;\n\t},\n\t_getLastInputValue:function(value, config){\n\t\tconst newValues = value.split(this._settings.separator);\n\t\tconst suggest = this.getPopup();\n\t\tlet last = \"\";\n\n\t\tfor (let i=0; i<newValues.length; i++){\n\t\t\tlet nValue = newValues[i].trim();\n\t\t\tif (nValue){\n\t\t\t\tlast = nValue;\n\t\t\t\t// add new values\n\t\t\t\tif (this._settings.newValues){\n\t\t\t\t\tthis._addNewValue(nValue, config);\n\t\t\t\t}\n\t\t\t\t// or select existing\n\t\t\t\telse {\n\t\t\t\t\tconst id = suggest.getItemId(nValue);\n\t\t\t\t\tif (id) this._addValue(id, config);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn last;\n\t},\n\t_init_onchange:function(){\n\t\t// input focus and focus styling\n\t\t_event(this._getBox(),\"click\",function(e){\n\t\t\tconst input = this.getInputNode();\n\t\t\tif (input.contains(e.target))\n\t\t\t\tinput.focus();\n\t\t\telse\n\t\t\t\tthis._focusAtEnd(input);\n\t\t},{bind:this});\n\n\t\t_event(this.getInputNode(),\"focus\",function(){\n\t\t\tif(this._getBox().className.indexOf(\"webix_focused\") == -1)\n\t\t\t\tthis._getBox().className += \" webix_focused\";\n\n\t\t},{bind:this});\n\n\t\t_event(this.getInputNode(),\"blur\",function(){\n\t\t\tthis._getBox().className = this._getBox().className.replace(\" webix_focused\",\"\");\n\t\t},{bind:this});\n\n\t\t_event(this.getInputNode(),\"input\",function(){\n\t\t\tconst input = this.getInputNode();\n\t\t\tlet enter = false;\n\n\t\t\t// update input value\n\t\t\tif ((this._settings.tagMode &&  input.value.indexOf(this._settings.separator) > -1)){\n\t\t\t\tconst nValue = this._getLastInputValue(input.value, \"user\");\n\t\t\t\tthis._inputValue = input.value = (this._settings.keepText) ? nValue : \"\";\n\t\t\t\tenter = this._settings.keepText;\n\t\t\t}\n\n\t\t\t// to show placeholder\n\t\t\tlet calcWidth, width;\n\t\t\tconst value = this._settings.value||[];\n\t\t\tif (this._settings.placeholder && !input.value && !value.length)\n\t\t\t\twidth = this._get_input_width(this._settings);\n\t\t\telse {\n\t\t\t\twidth = calcWidth = this._calcInputWidth(input.value);\n\t\t\t\tif(!this._settings.tagMode && this._getValueListBox().firstChild)\n\t\t\t\t\twidth = this._getMultiComboInputWidth();\n\t\t\t}\n\n\t\t\t// resize\n\t\t\tinput.style.width = width + \"px\";\n\n\t\t\tif (enter || calcWidth != this._inputWidth){\n\t\t\t\tthis._inputWidth = calcWidth||width;\n\n\t\t\t\t// save value before possible rendering\n\t\t\t\tthis._inputValue = input.value;\n\t\t\t\tthis._resizeToContent(enter);\n\t\t\t}\n\n\t\t},{bind:this});\n\n\t\t_event(this.getInputNode(), \"keydown\", function(e){\n\t\t\tconst input = this.getInputNode();\n\t\t\tconst suggest = this.getPopup();\n\n\t\t\tconst code = e.which || e.keyCode;\n\n\t\t\t// remove the last value on Backspace click\n\t\t\tconst node = this._getValueListBox().lastChild;\n\t\t\tif (code == 8 && !this._settings.readonly && node){\n\t\t\t\tif(!input.value && ((new Date()).valueOf() - (this._backspaceTime||0) > 100)){\n\t\t\t\t\tthis._removeValue(node.getAttribute(\"optvalue\"));\n\t\t\t\t} else {\n\t\t\t\t\tthis._backspaceTime = (new Date()).valueOf();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (code == 13 || code == 9){\n\t\t\t\tlet nValue = input.value;\n\t\t\t\tif (!suggest.getList().getSelectedId()){\n\t\t\t\t\tnValue = this._getLastInputValue(input.value, \"user\");\n\t\t\t\t}\n\t\t\t\tthis._inputValue = input.value = (this._settings.keepText) ? nValue : \"\";\n\n\t\t\t\tconst value = this._settings.value||[];\n\t\t\t\tif (code == 13 && !input.value && !value.length){\n\t\t\t\t\tsuggest.getList().filter();\n\n\t\t\t\t\t// correct input width to show placeholder\n\t\t\t\t\tif (this._settings.placeholder)\n\t\t\t\t\t\tinput.style.width = this._get_input_width(this._settings) + \"px\";\n\t\t\t\t}\n\t\t\t\tthis._resizeToContent(code == 13);\n\t\t\t}\n\t\t},{bind:this});\n\n\t\t$$(this._settings.suggest).linkInput(this);\n\t}\n};\n\n\nconst view = protoUI(api,  richselect.view);\nexport default {api, view};","import text from \"../views/text\";\nimport {preventEvent, addCss, removeCss, pos as getPos, offset} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport env from \"../webix/env\";\nimport {uid, bind, isArray, copy} from \"../webix/helpers\";\nimport {_event, event, eventRemove} from \"../webix/htmlevents\";\nimport template from \"../webix/template\";\n\nconst api = {\n\tname:\"slider\",\n\tdefaults:{\n\t\tmin:0,\n\t\tmax:100,\n\t\tvalue:50,\n\t\tstep:1,\n\t\ttitle:false,\n\t\tmoveTitle:true,\n\t\ttemplate:function(obj, common){\n\t\t\tconst id = common._handle_id = \"x\" +uid();\n\t\t\tlet html = \"\";\n\t\t\tconst title = \"<div class='webix_slider_title\"+(obj.moveTitle?\" webix_slider_move\":\"\")+\"'\"+(!obj.moveTitle && obj.vertical?(\" style='line-height:\"+(obj.aheight-obj.inputPadding*2)+\"px;'\"):\"\")+\">&nbsp;</div>\";\n\t\t\tconst left = \"<div class='webix_slider_left'>&nbsp;</div>\";\n\t\t\tconst right = \"<div class='webix_slider_right'></div>\";\n\t\t\tconst handle = \"<div class='webix_slider_handle' \"+/*@attr*/\"webix_disable_drag\"+\"='true' role='slider' aria-label='\"+obj.label+(obj.title?(\" \"+obj.title(obj)):\"\")+\"' aria-valuemax='\"+obj.max+\"' aria-valuemin='\"+obj.min+\"' aria-valuenow='\"+obj.value+\"' tabindex='0' id='\"+id+\"'>&nbsp;</div>\";\n\n\t\t\tif(obj.vertical) html = \"<div class='webix_slider_box'>\"+right+left+handle+\"</div>\"+title;\n\t\t\telse html = title+\"<div class='webix_slider_box'>\"+left+right+handle+\"</div>\";\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t}\n\t},\n\ttype_setter:function(type){\n\t\tthis._viewobj.className += \" webix_slider_\"+type;\n\t},\n\ttitle_setter:function(value){\n\t\tif (typeof value == \"string\")\n\t\t\treturn template(value);\n\t\treturn value;\n\t},\n\t_get_slider_handle:function(){\n\t\treturn this.$view.querySelector(\".webix_slider_handle\");\n\t},\n\t_set_inner_size:function(){\n\t\tconst handle = this._get_slider_handle();\n\t\tconst config = this._settings;\n\n\t\tif(handle){ //view is rendered for sure\n\t\t\tconst size = config.vertical?this._content_height:this._get_input_width(config); //width or height\n\t\t\tlet value = config.value%config.step?(Math.round(config.value/config.step)*config.step):config.value;\n\t\t\tconst max = config.max - config.min;\n\n\t\t\tvalue = this._safeValue(value);\n\t\t\tvalue = config.vertical?(max-(value-config.min)):(value-config.min);\n\n\t\t\t//top or left\n\t\t\tlet corner1 = Math.ceil((size - 2 * this._sliderPadding) * value / max);\n\t\t\t//bottom or right\n\t\t\tlet corner2 = size - 2 * this._sliderPadding - corner1;\n\n\t\t\tconst cornerStr = config.vertical?\"top\":\"left\";\n\t\t\tconst sizeStr = config.vertical?\"height\":\"width\";\n\n\t\t\thandle.style[cornerStr] = this._sliderPadding + corner1 - this._sliderHandleWidth / 2 + \"px\";\n\t\t\thandle.parentNode.style[sizeStr] = size+\"px\";\n\n\t\t\t//1px border\n\t\t\tcorner2 = this._safeValue(corner2, 2 * this._sliderBorder, size - this._sliderPadding * 2 - 2 * this._sliderBorder);\n\t\t\tcorner1 = this._safeValue(corner1, 2 * this._sliderBorder, size - this._sliderPadding * 2 - 2 * this._sliderBorder);\n\n\t\t\t//width for left/top and right/bottom bars\n\t\t\tconst part = handle.previousSibling;\n\t\t\tpart.style[sizeStr] = corner2 + \"px\";\n\t\t\tconst last = part.previousSibling;\n\t\t\tlast.style[sizeStr] = corner1 + \"px\";\n\n\t\t\tthis._set_title(handle, corner1, corner2, cornerStr);\n\t\t}\n\t},\n\t_set_title:function(handle, corner1, corner2, cornerStr){\n\t\tconst config = this._settings;\n\t\tif (this._settings.title){\n\t\t\tconst title = handle.parentNode[config.vertical?\"nextSibling\":\"previousSibling\"];\n\t\t\ttitle.innerHTML = this._settings.title(this._settings, this);\n\n\t\t\tif(this._settings.moveTitle){\n\t\t\t\tlet pos = 0;\n\t\t\t\tif(config.vertical) pos = corner1+2 * this._sliderBorder-this._sliderHandleWidth/2;\n\t\t\t\telse{\n\t\t\t\t\tconst half = title.clientWidth/2;\n\t\t\t\t\tconst pos1 = half>corner1 ? (half-corner1-2*this._sliderBorder): 0;//left/top text is to large\n\t\t\t\t\tconst pos2 = half>corner2 ? (half-corner2-2*this._sliderBorder-this._sliderHandleWidth/2): 0;//right/bottom text is too large\n\t\t\t\t\tpos = this._sliderPadding + corner1 - half + pos1 - pos2;\n\t\t\t\t}\n\t\t\t\ttitle.style[cornerStr] = pos+ \"px\";\n\t\t\t}\n\t\t}\n\t},\n\t_set_value_now:function(){\n\t\tthis._get_slider_handle().setAttribute(\"aria-valuenow\", this._settings.value);\n\t},\n\t_safeValue: function(value, min, max){\n\t\tmin = min ? min : this._settings.min;\n\t\tmax = max ? max : this._settings.max;\n\t\t\n\t\treturn Math.min(Math.max(value, min), max);\n\t},\n\trefresh:function(){\n\t\tconst handle = this._get_slider_handle();\n\t\tif (handle){\n\t\t\tthis._set_value_now();\n\t\t\tif (this._settings.title)\n\t\t\t\thandle.setAttribute(\"aria-label\", this._settings.label+\" \"+this._settings.title(this._settings, this));\n\n\t\t\tthis._set_inner_size();\n\t\t}\n\t},\n\t$setValue:function(){\n\t\tthis.refresh();\n\t},\n\t$getValue:function(){\n\t\treturn this._settings.value;\n\t},\n\t$prepareValue:function(value){\n\t\tvalue = parseFloat(value);\n\n\t\tif(isNaN(value))\n\t\t\tvalue = this._settings.min;\n\n\t\treturn this._safeValue(value);\n\t},\n\t$init:function(config){\n\t\t_event(this._viewobj, env.mouse.down, e => this._on_mouse_down_start(e, \"mouse\"));\n\t\tif (env.touch)\n\t\t\t_event(this._viewobj, env.touch.down, e => this._on_mouse_down_start(e, \"touch\"));\n\n\t\t_event( this.$view, \"keydown\", bind(this._handle_move_keyboard, this));\n\t\tif (config.vertical){\n\t\t\tconfig.height = config.height || $active.vSliderHeight;\n\t\t\tthis._viewobj.className += \" webix_slider_vertical\";\n\t\t\tthis._sliderPadding = $active.vSliderPadding;\n\t\t}\n\t},\n\t$skin: function(){\n\t\ttext.api.$skin.call(this);\n\n\t\tthis._sliderHandleWidth = $active.sliderHandleWidth; //8 - width of handle / 2\n\t\tthis._sliderPadding = $active.sliderPadding;//10 - padding of webix_slider_box ( 20 = 10*2 )\n\t\tthis._sliderBorder = $active.sliderBorder;//1px border\n\t},\n\t_handle_move_keyboard:function(e){\n\t\tconst code = e.which || e.keyCode;\n\t\tconst c = this._settings;\n\t\tlet value = c.value;\n\n\t\tif(code>32 && code <41){\n\t\t\tpreventEvent(e);\n\n\t\t\tconst trg = e.target;\n\t\t\tconst match = /webix_slider_handle_(\\d)/.exec(trg.className);\n\t\t\tthis._activeIndex = match?parseInt(match[1],10):-1;\n\t\t\tif(match)\n\t\t\t\tvalue = c.value[this._activeIndex];\n\n\t\t\tvalue = value<c.min ? c.min:(value>c.max ? c.max : value);\n\t\t\t\n\t\t\tif(code === 36) value = c.min;\n\t\t\telse if(code === 35) value = c.max;\n\t\t\telse{\n\t\t\t\tlet inc = (code === 37 || code === 40 || code === 34) ? -1 : 1;\n\t\t\t\tif(code === 33 || code === 34 || c.step > 1)\n\t\t\t\t\tinc = inc * c.step;\n\t\t\t\tvalue = value*1 + inc;\n\t\t\t}\n\n\t\t\tif(match){\n\t\t\t\tconst other = c.value[this._activeIndex?0:1];\n\t\t\t\tvalue = ((this._activeIndex && value <= other) || (!this._activeIndex && value >= other )) ? other : value;\n\t\t\t}\n\n\t\t\tif(value >= c.min && value <= c.max){\n\t\t\t\tif(match){\n\t\t\t\t\tconst temp =[];\n\t\t\t\t\tfor(let i = 0; i < c.value.length; i++)\n\t\t\t\t\t\ttemp[i] = i === this._activeIndex ? value : c.value[i];\n\t\t\t\t\tvalue = temp;\n\t\t\t\t}\n\t\t\t\tthis.setValue(value, \"user\");\n\t\t\t\tthis._activeIndex = -1;\n\t\t\t}\n\t\t}\n\t},\n\t_on_mouse_down_start:function(e, pointer){\n\t\tconst config = this._settings;\n\t\tif (config.disabled || config.readonly) return;\n\n\t\tconst trg = e.target;\n\t\tif (this._mouse_down_process)\n\t\t\tthis._mouse_down_process(e);\n\n\t\tlet value = config.value;\n\t\tif (isArray(value)) value = copy(value);\n\n\t\tthis._start_value = value;\n\t\tif (trg.className.indexOf(\"webix_slider\") !== -1)\n\t\t\tconfig.value = this._get_value_from_event(e);\n\n\t\tconst passive = (pointer === \"touch\") ? { passive:false } : null;\n\t\tthis._handle_drag_events = [\n\t\t\tevent(document.body, env[pointer].move, e => this._handle_move_process(e, pointer), passive),\n\t\t\tevent(document, env[pointer].up, () => this._handle_move_stop()),\n\t\t];\n\t\taddCss(document.body,\"webix_noselect\");\n\t},\n\t_handle_move_stop:function(){\n\t\t//detach event handlers\n\t\teventRemove(this._handle_drag_events[0]);\n\t\teventRemove(this._handle_drag_events[1]);\n\t\tthis._handle_drag_events = null;\n\n\t\tlet value = this._settings.value;\n\t\tif (isArray(value)) value = copy(value);\n\n\t\tthis._settings.value = this._start_value;\n\t\tthis.setValue(value, \"user\");\n\n\t\tthis._get_slider_handle(this._activeIndex).focus();\n\t\tthis._activeIndex = -1;\n\n\t\tremoveCss(document.body, \"webix_noselect\");\n\t},\n\t_handle_move_process:function(e, pointer){\n\t\tthis._settings.value = this._get_value_from_event(e);\n\t\tthis.refresh();\n\t\tthis.callEvent(\"onSliderDrag\", []);\n\n\t\tif (pointer === \"touch\") preventEvent(e);\n\t},\n\t_get_value_from_event:function(e){\n\t\tconst ax = this._settings.vertical ? \"y\" : \"x\";\n\t\tconst pos = getPos(e)[ax];\n\t\treturn this._get_value_from_pos(pos);\n\t},\n\t_get_value_from_pos:function(pos){\n\t\tconst config = this._settings;\n\t\tconst max = config.max - config.min;\n\t\tconst ax = config.vertical ? \"y\" : \"x\";\n\n\t\t//top or left depending on slider type\n\t\tconst corner = offset(this._get_slider_handle().parentNode)[ax] + this._sliderPadding;\n\t\t//height or width depending on slider type\n\t\tconst size = (config.vertical?this._content_height:this._get_input_width(config))-2*this._sliderPadding;\n\n\t\tlet newvalue = (size ? (pos-corner) * max / size : 0);\n\t\tif(config.vertical)\n\t\t\tnewvalue = max-newvalue;\n\t\tnewvalue = Math.round((newvalue + 1*config.min) / config.step) * config.step;\n\t\treturn this._safeValue(newvalue);\n\t},\n\t_init_onchange:function(){} //need not ui.text logic\n};\n\nconst view = protoUI(api, text.view);\nexport default {api, view};\n","import slider from \"../views/slider\";\nimport {offset} from \"../webix/html\";\nimport {protoUI} from \"../ui/core\";\nimport {uid, isArray, isUndefined} from \"../webix/helpers\";\n\n\n// #include ui/slider.js\n\nconst api = {\n\tname:\"rangeslider\",\n\t$cssName:\"slider webix_rangeslider\",\n\tdefaults:{\n\t\tseparator: \",\",\n\t\tmin: 0,\n\t\tmax: 100,\n\t\tvalue: [20,80],\n\t\ttemplate:function(obj, common){\n\t\t\tvar id = \"x\" + uid();\n\t\t\tcommon._handle_id = [id+\"_0\",id+\"_1\"];\n\n\t\t\tvar aria = \"role='slider' aria-label='\"+obj.label+(obj.title?(\" \"+obj.title(obj)):\"\")+\"' aria-valuemax='\"+obj.max+\"' aria-valuemin='\"+obj.min+\"' tabindex='0'\";\n\t\t\tvar handles = \"<div class='webix_slider_handle webix_slider_handle_0' \"+/*@attr*/\"webix_disable_drag\"+\"='true' id='\"+common._handle_id[0]+\"' \"+aria+\" aria-valuenow='\"+obj.value[0]+\"'>&nbsp;</div>\";\n\t\t\thandles += \"<div class='webix_slider_handle webix_slider_handle_1' \"+/*@attr*/\"webix_disable_drag\"+\"='true' id='\"+common._handle_id[1]+\"' \"+aria+\" aria-valuenow='\"+obj.value[1]+\"'>&nbsp;</div>\";\n\n\t\t\tvar title = \"<div class='webix_slider_title\"+(obj.moveTitle?\" webix_slider_move\":\"\")+\"'\"+(!obj.moveTitle && obj.vertical?(\" style='line-height:\"+(obj.aheight-common._sliderPadding-obj.inputPadding*2)+\"px;'\"):\"\")+\">&nbsp;</div>\";\n\t\t\tif(obj.moveTitle)\n\t\t\t\ttitle = \"<div class='webix_slider_title_box'>\"+(title+title)+\"</div>\";\n\t\t\t\n\t\t\tvar parts = \"<div class='webix_slider_right'>&nbsp;</div><div class='webix_slider_left'></div>\";\n\t\t\tvar html = \"\";\n\t\t\tif(obj.vertical) html = \"<div class='webix_slider_box'>\"+parts+handles+\"</div>\"+title;\n\t\t\telse html = title+\"<div class='webix_slider_box'>\"+parts+handles+\"</div>\";\n\t\t\treturn common.$renderInput(obj, html, id);\n\t\t}\n\t},\n\t$prepareValue:function(value){\n\t\tconst min = this._settings.min;\n\n\t\tif(!isArray(value)){\n\t\t\tvalue = (value||\"\").toString().split(this._settings.separator);\n\t\t}\n\n\t\tvalue[0] = parseFloat(value[0]);\n\t\tvalue[0] = isNaN(value[0]) ? min : this._safeValue(value[0]);\n\n\t\tif(value.length < 2)\n\t\t\tvalue[1] = value[0];\n\t\telse{\n\t\t\tvalue[1] = parseFloat(value[1]);\n\t\t\tvalue[1] = isNaN(value[1]) ? value[0] : this._safeValue(value[1]);\n\t\t}\n\t\tif(value[0]>value[1]) [value[0], value[1]] = [value[1], value[0]];\n\t\treturn value;\n\t},\n\t_get_slider_handle:function(index){\n\t\tindex = index && index>=0?index:0;\n\t\treturn this.$view.querySelector(\".webix_slider_handle_\"+(index||0));\n\t},\n\t_get_left_pos: function(size,index){\n\t\tvar config, max, value;\n\n\t\tconfig = this._settings;\n\t\tmax = config.max - config.min;\n\t\tvalue = config.value[index]%config.step?(Math.round(config.value[index]/config.step)*config.step):config.value[index];\n\t\tvalue =  this._safeValue(value);\n\t\treturn Math.ceil((size - this._sliderPadding*2) * (value-config.min) / max);\n\t},\n\t_set_left_pos:function(size, left, vertical){\n\t\tvar pos = this._sliderPadding + left - (this._sliderHandleWidth / 2 *(vertical?-1:1));\n\t\tpos = vertical? size-pos:pos;\n\t\treturn pos+\"px\";\n\t},\n\t_set_value_pos:function(size, left, length, vertical){\n\t\tvar pos = left+this._sliderPadding + 2 * this._sliderBorder;\n\t\tif(vertical) pos = size-pos-length;\n\t\treturn pos + \"px\";\n\t},\n\t_set_inner_size:function(){\n\t\tvar config, handle0, handle1,\n\t\t\tleft0, left1, max, length, parentBox,\n\t\t\tsizeStr, size, cornerStr;\n\n\t\thandle0 =this._get_slider_handle(0);\n\t\thandle1 = this._get_slider_handle(1);\n\t\tconfig = this._settings;\n\n\t\tif(!isArray(config.value)){\n\t\t\tthis.define(\"value\", config.value);\n\t\t}\n\n\t\tif (handle0){\n\t\t\tsizeStr = config.vertical?\"height\":\"width\";\n\t\t\tcornerStr = config.vertical?\"top\":\"left\";\n\t\t\t\n\t\t\tsize = config.vertical?this._content_height:this._get_input_width(config);\n\t\t\tmax = size - this._sliderPadding * 2 - 2 * this._sliderBorder;\n\t\t\t\n\t\t\tleft0 = this._get_left_pos(size, 0);\n\t\t\tleft1 = this._get_left_pos(size, 1);\n\t\t\tlength = left1 - left0;\n\n\t\t\thandle0.style[cornerStr] = this._set_left_pos(size, left0, config.vertical);\n\t\t\thandle1.style[cornerStr] = this._set_left_pos(size, left1, config.vertical);\n\t\t\t\n\t\t\tparentBox = handle0.parentNode;\n\t\t\tparentBox.style[sizeStr] = size+\"px\";\n\t\t\tparentBox.firstChild.style[sizeStr] = max + \"px\";\n\t\t\tparentBox.childNodes[1].style[sizeStr] = length + \"px\";\n\t\t\tparentBox.childNodes[1].style[cornerStr] = this._set_value_pos(size, left0, length, config.vertical);\n\n\t\t\tthis._set_title(handle0, [left0, left1], max, cornerStr);\n\t\t}\n\t},\n\t_title_hidden:0,\n\t_hide_title:function(title, index){\n\t\tif(!isUndefined(this._title_hidden))\n\t\t\ttitle[this._title_hidden].style.visibility = \"visible\";\n\t\tif(!isUndefined(index)){\n\t\t\ttitle[index].style.visibility = \"hidden\";\n\t\t\tthis._title_hidden = index;\n\t\t}\n\t},\n\t_set_title:function(handle0, left, max, cornerStr){\n\t\tvar config = this._settings;\n\t\tif (this._settings.title){\n\t\t\tvar box = handle0.parentNode;\n\t\t\tvar sibling = config.vertical?\"nextSibling\":\"previousSibling\";\n\n\t\t\tif(!config.moveTitle)\n\t\t\t\tbox[sibling].innerHTML = this._settings.title(this._settings, this);\n\t\t\telse{ //two independent titles\n\t\t\t\tvar title = box[sibling].childNodes;\n\t\t\t\tvar pos = [];\n\t\t\t\tfor(let i = 0; i<2; i++)\n\t\t\t\t\tpos.push(this._set_title_n(title[i], config.value[i], left[i], max, cornerStr, i));\n\n\t\t\t\t//correct for overlapping titles\n\t\t\t\tvar diff = config.vertical? (pos[0]-pos[1]-this._sliderHandleWidth) : (pos[1]-pos[0]);\n\t\t\t\tvar sizeStr  = config.vertical?\"clientHeight\":\"clientWidth\";\n\n\t\t\t\t\n\n\t\t\t\tif(title[0][sizeStr]/2+title[1][sizeStr]/2 > diff)\n\t\t\t\t\tthis._hide_title(title, isUndefined(this._activeIndex) ? 0 : (this._activeIndex ? 0 : 1));\n\t\t\t\telse\n\t\t\t\t\tthis._hide_title(title);\n\n\t\t\t\t//set position\n\t\t\t\tfor(let i = 0; i<2; i++)\n\t\t\t\t\ttitle[i].style[cornerStr] = pos[i]+ \"px\";\n\t\t\t}\n\t\t}\n\t},\n\t_set_title_n:function(title, value, left, max, cornerStr, index){\n\t\ttitle.innerHTML = this._settings.title({value:value}, this);\n\t\tvar half = title.clientWidth/2;\n\t\tvar pos = 0;\n\t\t\n\t\tif(this._settings.vertical)\n\t\t\tpos = max-left-this._sliderHandleWidth/2-(index?this._sliderPadding:0)+2 * this._sliderBorder;\n\t\telse{\n\t\t\tpos = left + this._sliderHandleWidth/2 + 2*this._sliderBorder - half;\n\t\t\tpos = (half>left) ? (half-left+pos): pos;//left/top text is to small\n\t\t\tpos = (index && half+left>max)?(pos-half+(max-left)):pos;//right/bottom text is too large\n\t\t}\n\t\treturn pos;\n\t},\n\t_set_value_now:function(){\n\t\tfor(var i=0; i<2; i++){\n\t\t\tthis._get_slider_handle(i).setAttribute(\"aria-valuenow\", this._settings.value[i]);\n\t\t}\n\t},\n\t_mouse_down_process: function(e){\n\t\tvar trg = e.target;\n\t\tvar match =  /webix_slider_handle_(\\d)/.exec(trg.className);\n\t\tthis._activeIndex = match?parseInt(match[1],10):-1;\n\n\t\tif(match)\n\t\t\tthis._set_handle_active(this._activeIndex);\n\t},\n\t$compareValue:function(oldvalue, value){\n\t\tvalue = this.$prepareValue(value);\n\t\treturn oldvalue[0] === value[0] && oldvalue[1] === value[1];\n\t},\n\t$getValue:function(){\n\t\tvar value = this._settings.value;\n\t\treturn this._settings.stringResult?value.join(this._settings.separator):value;\n\t},\n\t_set_handle_active: function(index){\n\t\tvar hActive = this._get_slider_handle(index);\n\t\tvar h = this._get_slider_handle(1-index);\n\t\tif(hActive.className.indexOf(\"webix_slider_active\") == -1)\n\t\t\thActive.className += \" webix_slider_active\";\n\t\th.className = h.className.replace(\" webix_slider_active\",\"\");\n\t\thActive.focus();\n\t},\n\t_get_value_from_pos:function(pos){\n\t\tvar config = this._settings;\n\t\tvar value = config.value;\n\t\t//10 - padding of slider box\n\t\tvar max = config.max - config.min;\n\t\tvar ax = config.vertical?\"y\":\"x\";\n\n\t\tvar left = offset(this._get_slider_handle().parentNode)[ax];\n\t\tvar newvalue = Math.ceil((pos-left) * max / (config.vertical?this._content_height:this._get_input_width(config)));\n\t\tnewvalue = Math.round((newvalue + 1*config.min)/config.step) * config.step;\n\t\tif(config.vertical)\n\t\t\tnewvalue = max-newvalue;\n\n\t\tvar index = null;\n\t\tvar pos0 = offset(this._get_slider_handle(0))[ax];\n\t\tvar pos1 = offset(this._get_slider_handle(1))[ax];\n\n\t\tif(pos0==pos1 && (config.value[0] == config.min || config.value[0] == config.max) ){\n\t\t\tthis._activeIndex = index = (config.value[0] == config.min?1:0);\n\t\t\tthis._set_handle_active(index);\n\t\t}\n\t\telse{\n\t\t\tif(this._activeIndex >=0){\n\t\t\t\tindex = this._activeIndex;\n\t\t\t}else{\n\t\t\t\tif(pos0==pos1){\n\t\t\t\t\tindex = (pos < pos0?0:1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tvar dist0 = Math.abs(pos0-pos);\n\t\t\t\t\tvar dist1 = Math.abs(pos1-pos);\n\t\t\t\t\tindex = dist0<dist1?0:1;\n\t\t\t\t\tthis._activeIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif(index){\n\t\t\tvalue[index] = this._safeValue(newvalue, value[0], config.max);\n\t\t}\n\t\telse{\n\t\t\tvalue[index] = this._safeValue(newvalue, config.min, value[1]);\n\t\t}\n\n\t\treturn value;\n\t}\n};\n\n\nconst view = protoUI(api,  slider.view);\nexport default {api, view};","import {protoUI, ui, $$} from \"../ui/core\";\nimport UIManager from \"../core/uimanager\";\nimport {$active} from \"../webix/skin\";\nimport {extend} from \"../webix/helpers\";\nimport i18n from \"../webix/i18n\";\nimport template from \"../webix/template\";\n\nimport segmented from \"../views/segmented\";\n\nconst api = {\n\tname:\"tabbar\",\n\t$init:function(){\n\t\tthis.attachEvent(\"onKeyPress\", this._onKeyPress);\n\t},\n\t$skin:function(){\n\t\tvar skin = $active;\n\t\tvar defaults = this.defaults;\n\n\t\tdefaults.topOffset = skin.tabTopOffset||0;\n\t\tdefaults.tabOffset = (typeof skin.tabOffset != \"undefined\"?skin.tabOffset:10);\n\t\tdefaults.bottomOffset = skin.tabBottomOffset||0;\n\t\tdefaults.height = skin.tabbarHeight;\n\n\t\tdefaults.tabMargin = skin.tabMargin;\n\t\tdefaults.inputPadding = skin.inputPadding;\n\t\tdefaults.tabMinWidth = skin.tabMinWidth||100;\n\t\tdefaults.tabMoreWidth = skin.tabMoreWidth||40;\n\t\tdefaults.borderless = !skin.tabBorder;\n\t},\n\t_getTabbarSizes: function(selected){\n\t\tconst config = this._settings;\n\t\tconst inputWidth = this._input_width - config.tabOffset * 2;\n\t\tconst tabs = this._filterOptions(config.options);\n\n\t\tconst width = config.optionWidth || config.tabMinWidth;\n\n\t\t//the selected tab will be rendered anyway\n\t\tlet totalWidth = tabs.find(tab => tab.id == selected).width || width;\n\t\tlet max = 1;\n\n\t\tfor(let i = 0; i < tabs.length; i++){\n\t\t\tif(tabs[i].id == selected)\n\t\t\t\tcontinue;\n\t\t\tif((totalWidth += (tabs[i].width || width)) > inputWidth)\n\t\t\t\treturn { max };\n\t\t\tmax++;\n\t\t}\n\n\t\treturn { width: inputWidth / tabs.length };\n\t},\n\t_init_popup: function () {\n\t\tconst obj = this._settings;\n\n\t\t// if tabbar popup is set as plain object with config\n\t\tif (!obj.tabbarPopup || !$$(obj.tabbarPopup)) {\n\t\t\tconst popupConfig = extend(\n\t\t\t\t{\n\t\t\t\t\tview: \"popup\",\n\t\t\t\t\tautofocus: false,\n\t\t\t\t\twidth: 200,\n\t\t\t\t},\n\t\t\t\tobj.tabbarPopup || {}\n\t\t\t);\n\n\t\t\tconst body = extend(\n\t\t\t\t{\n\t\t\t\t\tview: \"list\",\n\t\t\t\t\tborderless: true,\n\t\t\t\t\tselect: true,\n\t\t\t\t\tautoheight: true,\n\t\t\t\t\tyCount: 7,\n\t\t\t\t\ttemplate: template(\"#value#\"),\n\t\t\t\t},\n\t\t\t\tobj.tabbarPopup ? obj.tabbarPopup.body || {} : {},\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tbody.css = `webix_tab_list ${body.css || \"\"}`;\n\t\t\tpopupConfig.body = body;\n\n\t\t\tconst view = ui(popupConfig);\n\t\t\tconst list = view.getBody();\n\n\t\t\tview.attachEvent(\"onShow\", () => {\n\t\t\t\tlist.unselect();\n\t\t\t\tUIManager.setFocus(list);\n\n\t\t\t\tconst node = list.getItemNode(list.getFirstId());\n\t\t\t\tif (node) node.focus();\n\t\t\t});\n\t\t\tlist.attachEvent(\"onItemClick\", id => this._popupInnerClick(id));\n\t\t\tlist.attachEvent(\"onEnter\", () => this._popupInnerClick());\n\n\t\t\tobj.tabbarPopup = view._settings.id;\n\t\t\tthis._destroy_with_me.push(view);\n\t\t}\n\n\t\tthis._init_popup = function () {};\n\t},\n\t_popupInnerClick(id){\n\t\tconst popup = $$(this._settings.tabbarPopup);\n\t\tid = id || popup.getBody().getSelectedId();\n\n\t\tif (id && this.callEvent(\"onBeforeTabClick\", [id])){\n\t\t\tthis.setValue(id, \"user\");\n\t\t\tpopup.hide();\n\t\t\tthis.callEvent(\"onAfterTabClick\", [id]);\n\t\t\tthis.refresh();\n\t\t\tthis.focus();\n\t\t}\n\t\treturn false;\n\t},\n\tgetPopup: function(){\n\t\tthis._init_popup();\n\t\treturn $$(this._settings.tabbarPopup);\n\t},\n\tmoreTemplate_setter: template,\n\tdefaults:{\n\t\tmoreTemplate: \"<span class=\\\"webix_icon wxi-dots\\\"></span>\",\n\t\ttemplate:function(obj,common) {\n\t\t\tcommon._check_options(obj.options);\n\n\t\t\tlet tabs = common._filterOptions(obj.options);\n\t\t\tlet contentWidth, html, leafWidth, resultHTML, style, sum, verticalOffset, width;\n\n\t\t\tif (!tabs.length){\n\t\t\t\thtml = \"<div class='webix_tab_filler' style='width:\"+common._input_width+\"px; border-right:0px;'></div>\";\n\t\t\t} else {\n\t\t\t\tif (!obj.value)\n\t\t\t\t\tobj.value = common._getFirstActive(true);\n\n\t\t\t\thtml = \"\";\n\t\t\t\tif (obj.tabOffset)\n\t\t\t\t\thtml += \"<div class='webix_tab_filler' style='width:\"+obj.tabOffset+\"px;'>&nbsp;</div>\";\n\t\t\t\tcontentWidth = common._input_width - obj.tabOffset*2-(!obj.type?(obj.tabMargin)*(tabs.length-1):0);\n\t\t\t\tverticalOffset = obj.topOffset+obj.bottomOffset;\n\n\t\t\t\tvar sizes = common._getTabbarSizes(obj.value);\n\n\t\t\t\tif (sizes.max && sizes.max < tabs.length){\n\t\t\t\t\t//we need popup\n\t\t\t\t\tconst popup = common.getPopup();\n\t\t\t\t\tpopup.hide();\n\n\t\t\t\t\tconst body = (popup.getBody()||null);\n\t\t\t\t\tif(body){\n\t\t\t\t\t\tif (sizes.max){\n\t\t\t\t\t\t\tfor (let i=0, found=false; i < tabs.length && !found; i++)\n\t\t\t\t\t\t\t\tif(tabs[i].id== obj.value){\n\t\t\t\t\t\t\t\t\tfound = true;\n\t\t\t\t\t\t\t\t\tif((i+1) > sizes.max){\n\t\t\t\t\t\t\t\t\t\tlet selectedTab =  tabs.splice(i, 1);\n\t\t\t\t\t\t\t\t\t\tlet displayTabs = tabs.splice(0, sizes.max-1).concat(selectedTab);\n\t\t\t\t\t\t\t\t\t\ttabs = displayTabs.concat(tabs);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbody.clearAll();\n\t\t\t\t\t\t\tbody.parse(tabs.slice(sizes.max));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbody.clearAll();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (common._settings.tabbarPopup) {\n\t\t\t\t\tconst popup = $$(common._settings.tabbarPopup);\n\t\t\t\t\tif (popup) popup.hide();\n\t\t\t\t}\n\n\t\t\t\tsum = obj.tabOffset;\n\t\t\t\tfor (let i=0, lastTab=false; (i<tabs.length) && !lastTab; i++) {\n\n\t\t\t\t\t// tab width\n\t\t\t\t\tif(sizes && sizes.max){\n\t\t\t\t\t\tif(sizes.max == (i + 1)){\n\t\t\t\t\t\t\tlastTab = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontentWidth = common._input_width - obj.tabOffset*2-(!obj.type&&(sizes.max>1)?(obj.tabMargin)*(sizes.max-1):0);\n\t\t\t\t\t\twidth = (contentWidth - obj.tabMoreWidth)/sizes.max ;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\twidth = sizes.width;\n\n\t\t\t\t\twidth = (tabs[i].width||obj.optionWidth||width);\n\n\t\t\t\t\tsum += width + (i&&!obj.type?obj.tabMargin:0);\n\n\t\t\t\t\tif(obj.tabMargin>0&&i&&!obj.type)\n\t\t\t\t\t\thtml += \"<div class='webix_tab_filler' style='width:\"+obj.tabMargin+\"px;'></div>\";\n\n\t\t\t\t\t// tab innerHTML\n\t\t\t\t\thtml += common._getTabHTML(tabs[i], width);\n\n\n\t\t\t\t\tif(lastTab){\n\t\t\t\t\t\thtml += \"<div role=\\\"button\\\" tabindex=\\\"0\\\" aria-label=\\\"\"+i18n.aria.showTabs+\"\\\" class=\\\"webix_tab_more_icon\\\" style=\\\"width:\"+obj.tabMoreWidth+\"px;\\\">\"+obj.moreTemplate(obj,common)+\"</div>\";\n\t\t\t\t\t\tsum += obj.tabMoreWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tleafWidth = common._content_width - sum;\n\n\t\t\t\tif (leafWidth>0 && !obj.type)\n\t\t\t\t\thtml += \"<div class='webix_tab_filler' style='width:\"+leafWidth+\"px;'>&nbsp;</div>\";\n\t\t\t}\n\n\t\t\tresultHTML = \"\";\n\n\t\t\t// consider top and bottom offset in tabs height (top tabbar)\n\t\t\tstyle = (verticalOffset&& !obj.type)?\"height:\"+(common._content_height-verticalOffset)+\"px\":\"\";\n\n\t\t\t//space above tabs (top tabbar)\n\t\t\tif(obj.topOffset && !obj.type)\n\t\t\t\tresultHTML += \"<div class='webix_before_all_tabs' style='width:100%;height:\"+obj.topOffset+\"px'></div>\";\n\n\t\t\t// tabs html\n\t\t\tresultHTML +=  \"<div style='\"+style+\"' role='tablist' class='webix_all_tabs \"+(obj.type?(\"webixtype_\"+obj.type):\"\")+\"'>\"+html+\"</div>\";\n\n\t\t\t//space below to tabs (top tabbar)\n\t\t\tif(obj.bottomOffset && !obj.type)\n\t\t\t\tresultHTML += \"<div class='webix_after_all_tabs' style='width:100%;height:\"+obj.bottomOffset+\"px'></div>\";\n\n\t\t\treturn resultHTML;\n\t\t}\n\t},\n\t_getInputNode:function(){\n\t\treturn this.$view.querySelectorAll(\".webix_item_tab\");\n\t},\n\t_getTabHTML: function(tab, width){\n\t\tvar\thtml,\n\t\t\tclassName = \"\",\n\t\t\ttooltip = \"\",\n\t\t\tisDisabled = !!tab.disabled,\n\t\t\tconfig = this.config;\n\n\t\tif (tab.id == config.value)\n\t\t\tclassName += \" webix_selected\";\n\n\t\tif (isDisabled)\n\t\t\tclassName += \" webix_disabled\";\n\n\t\tif (tab.css)\n\t\t\tclassName+=\" \"+tab.css;\n\n\t\tif (config.tooltip)\n\t\t\ttooltip = \" webix_t_id='\"+tab.id+\"'\";\n\n\t\twidth = (tab.width||width);\n\t\thtml = \"<div class=\\\"webix_item_tab\"+className+\"\\\" \"+/*@attr*/\"button_id=\\\"\"+tab.id+\"\\\" role=\\\"tab\\\" \"+\n\t\t\t\"aria-selected=\\\"\"+(tab.id== config.value?\"true\":\"false\")+\"\\\" tabindex=\\\"\"+(!isDisabled && tab.id==config.value?\"0\":\"-1\")+\n\t\t\t\"\\\" style=\\\"width:\"+width+\"px;\\\"\"+(isDisabled?\" webix_disabled=\\\"true\\\"\":\"\")+tooltip+\">\";\n\n\t\t// a tab title\n\t\tif(this._tabTemplate){\n\t\t\tvar calcHeight = this._content_height- config.inputPadding*2 - 2;\n\t\t\tvar height = this._content_height - 2;\n\t\t\tvar temp = extend({ cheight: calcHeight, aheight:height }, tab);\n\t\t\thtml+= this._tabTemplate(temp);\n\t\t}\n\t\telse {\n\t\t\tvar icon = tab.icon?(\"<span class='webix_icon \"+tab.icon+\"'></span> \"):\"\";\n\t\t\thtml+=icon + tab.value;\n\t\t}\n\n\t\tif (!isDisabled && (tab.close || config.close))\n\t\t\thtml+=\"<span role='button' tabindex='0' aria-label='\"+i18n.aria.closeTab+\"' class='webix_tab_close webix_icon wxi-close'></span>\";\n\n\t\thtml+=\"</div>\";\n\t\treturn html;\n\t},\n\t_getBox:function(){\n\t\treturn this._dataobj.firstChild;\n\t},\n\t_types:{\n\t\timage:\"<div class='webix_img_btn_top' style='height:#cheight#px;background-image:url(#image#);'><div class='webix_img_btn_text'>#value#</div></div>\",\n\t\ticon:\"<div class='webix_img_btn' style='line-height:#cheight#px;height:#cheight#px;'><span class='webix_icon_btn #icon#' style='max-width:#cheight#px;max-height:#cheight#px;'></span>#value#</div>\",\n\t\ticonTop:\"<div class='webix_img_btn_top' style='height:#cheight#px;width:100%;top:0px;text-align:center;'><span class='webix_icon #icon#'></span><div class='webix_img_btn_text'>#value#</div></div>\"\n\t},\n\ttype_setter:function(value){\n\t\tthis._settings.tabOffset = 0;\n\t\tif (this._types[value])\n\t\t\tthis._tabTemplate = template(this._types[value]);\n\t\treturn value;\n\t}\n};\n\n\nconst view = protoUI(api,  segmented.view);\nexport default {api, view};","import layout from \"../views/layout\";\nimport IdSpace from \"../core/idspace\";\nimport UIManager from \"../core/uimanager\";\nimport {protoUI} from \"../ui/core\";\nimport {$active} from \"../webix/skin\";\nimport i18n from \"../webix/i18n\";\nimport {_event} from \"../webix/htmlevents\";\nimport {getTextSize} from \"../webix/html\";\n\nconst api = {\n\tname: \"richtext\",\n\tdefaults:{\n\t\tlabel:\"\",\n\t\tlabelWidth:80,\n\t\tlabelPosition:\"left\"\n\t},\n\t$init: function() {\n\t\tthis._viewobj.className += \" webix_richtext\";\n\t\tthis.$ready.unshift(this._setLayout);\n\t},\n\t$skin:function(){\n\t\tlayout.api.$skin.call(this);\n\n\t\tthis.defaults.paddingX = $active.inputSpacing/2;\n\t\tthis.defaults.paddingY = $active.inputPadding;\n\t},\n\tgetInputNode:function(){\n\t\treturn this.$view.querySelector(\".webix_richtext_editor\"); \n\t},\n\t_button:function(name){\n\t\treturn {\n\t\t\tview: \"toggle\",\n\t\t\ttype: \"icon\",\n\t\t\ticon: \"wxi-\"+name, name: name, id:name,\n\t\t\tlabel: i18n.richtext[name],\n\t\t\tautowidth: true, \n\t\t\taction:name,\n\t\t\tclick: this._add_data\n\t\t};\n\t},\n\t_setLayout: function() {\n\t\tconst top = this;\n\n\t\tconst editField = {\n\t\t\tview: \"template\",\n\t\t\tcss: \"webix_richtext_container\",\n\t\t\tborderless: true,\n\t\t\ttemplate: \"<div class='webix_richtext_editor' contenteditable='true'>\"+this.getValue()+\"</div>\",\n\t\t\ton: {\n\t\t\t\tonAfterRender: function() {\n\t\t\t\t\ttop._rendered_input = true;\n\t\t\t\t\ttop.refresh();\n\t\t\t\t\t_event(top.getInputNode(), \"blur\", function(){\n\t\t\t\t\t\ttop._updateValue(this.innerHTML, \"user\");\n\t\t\t\t\t});\n\t\t\t\t\t_event(top.getInputNode(), \"keyup\", function(){\n\t\t\t\t\t\ttop._getselection(\"auto\");\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonClick: {\n\t\t\t\twebix_richtext_editor: function() {\n\t\t\t\t\ttop._getselection(\"auto\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst controls = [\n\t\t\tthis._button(\"underline\"),\n\t\t\tthis._button(\"bold\"),\n\t\t\tthis._button(\"italic\"),\n\t\t\t{ }\n\t\t];\n\n\t\tconst editorToolbar = {\n\t\t\tview: \"toolbar\",\n\t\t\tid:\"toolbar\",\n\t\t\telements: controls\n\t\t};\n\n\t\tconst rows = [\n\t\t\teditorToolbar,\n\t\t\teditField\n\t\t];\n\n\t\tconst config = this.config;\n\n\t\tif (config.labelPosition == \"top\"){\n\t\t\teditorToolbar.elements = controls.concat([\n\t\t\t\t{ view:\"label\", label: config.label, align:\"right\"},\n\t\t\t\t{ width:4 }\n\t\t\t]);\n\t\t\tthis.rows_setter(rows);\n\t\t} \n\t\telse{\n\t\t\tconfig.labelWidth = config.label ? this._getLabelWidth(config.labelWidth, config.label, config.required) : 0;\n\t\t\tif(config.labelWidth){\n\t\t\t\tconfig.margin = 0;\n\t\t\t\tthis.cols_setter([{ \n\t\t\t\t\ttemplate: config.label,\n\t\t\t\t\tcss: \"webix_richtext_inp_label\"+(config.required?\" webix_required\":\"\"),\n\t\t\t\t\tborderless: true,\n\t\t\t\t\twidth: config.labelWidth\n\t\t\t\t}, {\n\t\t\t\t\trows\n\t\t\t\t}]);\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.rows_setter(rows);\n\t\t}\n\t},\n\t_getLabelWidth: function(width, label, required){\n\t\tif(width == \"auto\")\n\t\t\twidth = getTextSize(label, \"webix_inp_label\"+(required ? \" webix_required\" : \"\")).width;\n\t\treturn width ? Math.max(width, $active.dataPadding) : 0;\n\t},\n\t_getselection: function(config) {\n\t\tconst top = this;\n\t\tconst bar = top.$$(\"toolbar\");\n\t\tlet sel;\n\n\t\tbar.setValues({\n\t\t\titalic:false, underline:false, bold:false\n\t\t}, false, config);\n\n\t\tif(window.getSelection) {\n\t\t\tsel = window.getSelection();\n\t\t} else {\n\t\t\tsel = document.selection.createRange();\n\t\t}\n\n\t\tfor (let i = 0; i < sel.rangeCount; ++i) {\n\t\t\tif (top.$view.contains(this.getInputNode())){\n\t\t\t\tif (document.queryCommandState(\"bold\")) {\n\t\t\t\t\ttop.$$(\"bold\").setValue(true,config);\n\t\t\t\t} \n\t\t\t\tif (document.queryCommandState(\"underline\")) {\n\t\t\t\t\ttop.$$(\"underline\").setValue(true,config);\n\t\t\t\t}\n\t\t\t\tif (document.queryCommandState(\"italic\")) {\n\t\t\t\t\ttop.$$(\"italic\").setValue(true,config);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\trefresh: function() {\n\t\tif(this._rendered_input)\n\t\t\tthis.getInputNode().innerHTML = this._settings.value;\n\t},\n\t_execCommandOnElement:function(commandName) {\n\t\tlet sel, selText;\n\n\t\tsel = window.getSelection();\n\t\tselText = sel.toString().length;\n\n\t\tconst input = this.getInputNode();\n\t\tif (!input.contains(sel.anchorNode) || !input.contains(sel.focusNode)) return;\n\n\t\tif(selText > 0) {\n\t\t\tfor (let i = 0; i < sel.rangeCount; ++i) {\n\t\t\t\tconst range = sel.getRangeAt(i);\n\t\t\t\tif (!sel.isCollapsed) {\n\t\t\t\t\tdocument.execCommand(commandName, false, \"\");\n\t\t\t\t} else {\n\t\t\t\t\tconst textValue = sel.focusNode.textContent;\n\t\t\t\t\tconst focusEl = sel.focusNode;\n\t\t\t\t\tconst focustext = sel.anchorOffset;\n\t\t\t\t\tconst wordBegining = textValue.substring(0, focustext).match(/[A-Za-z]*$/)[0];\n\t\t\t\t\tconst wordEnd = textValue.substring(focustext).match(/^[A-Za-z]*/)[0];\n\n\t\t\t\t\tconst startWord = focustext - wordBegining.length;\n\t\t\t\t\tconst endWord = focustext + wordEnd.length;\n\n\t\t\t\t\trange.setStart(focusEl, startWord);\n\t\t\t\t\trange.setEnd(focusEl, endWord);\n\t\t\t\t\tsel.removeAllRanges();\n\n\t\t\t\t\tsel.addRange(range);\n\t\t\t\t\tdocument.execCommand(commandName, false, \"\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t_add_data:function() {\n\t\tconst top = this.getTopParentView();\n\t\ttop._execCommandOnElement(this.config.action);\n\t},\n\tfocus: function() {\n\t\tif(!UIManager.canFocus(this))\n\t\t\treturn false;\n\n\t\tconst editableElement = this.getInputNode();\n\t\teditableElement.focus();\n\t},\n\t_updateValue: function(value, config){\n\t\tvalue = this.$prepareValue(value);\n\t\tconst oldvalue = this._settings.value;\n\n\t\tif (oldvalue != value){\n\t\t\tthis._settings.value = value;\n\t\t\tthis.callEvent(\"onChange\", [value, oldvalue, config]);\n\t\t}\n\t},\n\tsetValue: function(value, config) {\n\t\tthis._updateValue(value, config);\n\t\tthis.refresh();\n\t},\n\t$prepareValue:function(value){ return value === 0 ? \"0\" : (value || \"\").toString(); },\n\tvalue_setter:function(value){\n\t\treturn this.$prepareValue(value);\n\t},\n\tgetValue: function() {\n\t\tconst input = this.getInputNode();\n\t\tif (input)\n\t\t\treturn input.innerHTML;\n\n\t\treturn this._settings.value;\n\t}\n};\n\n\nconst view = protoUI(api,  IdSpace, layout.view);\nexport default {api, view};","import {addCss, addStyle, removeCss, removeStyle, remove, insertBefore, create} from \"../webix/html\";\nimport env from \"../webix/env\";\nimport {$$} from \"../ui/core\";\nimport {assert} from \"../webix/debug\";\n\n\nenv.printPPI = 96;\nenv.printMargin = 0.75*env.printPPI;\n\n//inches, real size is value*ppi\nenv.printSizes = [\n\t{ id:\"a3\", preset:\"A3\", width: 11.7, height: 16.5 },\n\t{ id:\"a4\", preset:\"A4\", width: 8.27, height: 11.7 },\n\t{ id: \"letter\", preset:\"letter\", width: 8.5, height:11 }\n];\n\nvar fits = { page:true, data:true};\nvar modes = { portrait:true, landscape:true};\n\nconst print = function(id, options){\n\tlet view = $$(id);\n\tif (view && view.$printView)\n\t\tview = view.$printView();\n\n\tassert(view, \"non-existing view for printing\");\n\tif(!view) return;\n\n\tif(view.callEvent)\n\t\tview.callEvent(\"onBeforePrint\", [options]);\n\n\toptions = _checkOptions(options);\n\t_beforePrint(options);\n\n\t//try widget's custom logic first, sometimes it may deny\n\tlet customPrint;\n\tif(view.$customPrint){\n\t\tcustomPrint = view.$customPrint(options);\n\t\tif(customPrint){\n\t\t\tif(customPrint.then)\n\t\t\t\treturn customPrint.then(()=>_afterPrint(options));\n\t\t\t_print(view, options);\n\t\t}\n\t}\n\telse\n\t\t_print(view, options);\n\n\t_afterPrint(options);\n};\n\n/*processing print options*/\nfunction _checkOptions(options){\n\toptions = options || {};\n\n\toptions.paper = options.paper || \"a4\";\n\toptions.size = env.printSizes.find(size => size.id == options.paper);\n\tif(!options.size){\n\t\toptions.size = env.printSizes[0];\n\t\toptions.paper = options.size.id;\n\t}\n\n\toptions.mode = modes[options.mode] ? options.mode : \"portrait\";\n\toptions.fit = fits[options.fit] ? options.fit: \"page\";\n\toptions.scroll = options.scroll || false;\n\n\toptions.margin = (options.margin || options.margin === 0) ? options.margin : {};\n\n\tconst margin = isNaN(options.margin*1) ? env.printMargin : options.margin;\n\toptions.margin = {\n\t\ttop:(options.margin.top || options.margin.top === 0) ? options.margin.top: margin, \n\t\tbottom:(options.margin.bottom || options.margin.bottom === 0) ? options.margin.bottom: margin, \n\t\tright:(options.margin.right || options.margin.right === 0) ? options.margin.right: margin, \n\t\tleft:(options.margin.left || options.margin.left === 0) ? options.margin.left: margin\n\t};\n\n\treturn options;\n}\n\n/*preparing printing environment*/\nfunction _beforePrint(options){\n\taddCss(document.body,\"webix_print\");\n\n\tif(options.docHeader) _getHeaderFooter(\"Header\", options);\n\tif(options.docFooter) _getHeaderFooter(\"Footer\", options);\n\n\t/* static print styles are located at 'css/print.less'*/\n\n\tconst size = options.size;\n\tconst pageSize =\n\t\tsize.preset ?\n\t\t\tsize.preset + \" \" + options.mode :\n\t\t\toptions.mode == \"portrait\" ? `${size.width}in ${size.height}in` : `${size.height}in ${size.width}in`;\n\n\tconst cssString = \"@media print { \"+\n\t\t\"@page{ size:\"+pageSize+\";\"+\n\t\t\t\"margin-top:\"+options.margin.top+\"px;margin-bottom:\"+options.margin.bottom+\n\t\t\t\"px;margin-right:\"+options.margin.right+\"px;margin-left:\"+options.margin.left+\n\t\t\"px;}\"+\n\t\"}\";\n\n\taddStyle(cssString, \"print\");\n}\n\n/*cleaning environment*/\nfunction _afterPrint(options){\n\tremoveCss(document.body, \"webix_print\");\n\tremoveStyle(\"print\");\n\n\tif(options.docHeader) remove(options.docHeader);\n\tif(options.docFooter) remove(options.docFooter);\n}\n\n/*common print actions */\nfunction _print(view, options){\n\tvar doc = view.$view.cloneNode(true);\n\n\t//copy data from all canvases\n\tvar canvases = view.$view.getElementsByTagName(\"canvas\");\n\tif(canvases.length)\n\t\tfor(var i = canvases.length-1; i >=0; i--){\n\t\t\tvar destCtx = doc.getElementsByTagName(\"canvas\")[i].getContext(\"2d\");\n\t\t\tdestCtx.drawImage(canvases[i], 0, 0);\n\t\t}\n\n\tinsertBefore(doc, options.docFooter, document.body);\n\n\taddCss(doc,\"webix_ui_print\");\n\tif(!options.scroll && ((view._dataobj && view.data && view.data.pull) || view.getBody))\n\t\taddCss(doc, \"webix_print_noscroll\");\n\n\twindow.print();\n\n\tremove(doc);\n}\n/*custom header nad footer*/\nfunction _getHeaderFooter(group, options){\n\tvar header =  create(\"div\", { \n\t\t\"class\":\"webix_view webix_print_\"+group.toLowerCase(),\n\t\t\"style\":\"height:0px;visibility:hidden;\"\n\t}, options[\"doc\"+group]);\n\n\tif(group ===\"Header\")\n\t\tinsertBefore(header, document.body.firstChild);\n\telse\n\t\tdocument.body.appendChild(header);\n\n\toptions[\"doc\"+group] = header;\n}\n\nexport default print;","export const version=\"VERSION\";\nexport const name = \"core\";","import {assert} from \"./debug\";\n\nlet level = 0;\nexport function level_in(){\n\tlevel++;\n\tassert(level !== 100, \"Attempt to copy object with self reference\");\n}\nexport function level_out(){\n\tlevel--;\n}\n\n//coding helpers\nexport function clone(source){\n\tvar f = clone._function;\n\tf.prototype = source;\n\treturn new f();\n}\nclone._function = function(){};\n\n//copies methods and properties from source to the target\nlet extend = function(base, source, force){\n\tassert(base,\"Invalid mixing target\");\n\tassert(source,\"Invalid mixing source\");\n\n\tif (base.$protoWait){\n\t\t_power_array.insertAt.call(base.$protoWait, source,1);\n\t\treturn base;\n\t}\n\n\t//copy methods, overwrite existing ones in case of conflict\n\tfor (var method in source)\n\t\tif ((!(method in base)) || force)\n\t\t\tbase[method] = source[method];\n\n\t//in case of defaults - preffer top one\n\tif (source.defaults)\n\t\textend(base.defaults, source.defaults);\n\t\n\t//if source object has init code - call init against target\n\tif (source.$init)\t\n\t\tsource.$init.call(base);\n\n\treturn base;\t\n};\n\n//copies methods and properties from source to the target from all levels\nexport function copy(source){\n\tassert(source,\"Invalid mixing target\");\n\tif (DEBUG) level_in();\n\n\tvar esModern = !!window.Map && !!window.Set && !!window.WeakMap && !!window.WeakSet;\n\tvar target;\n\tif(arguments.length>1){\n\t\ttarget = arguments[0];\n\t\tsource = arguments[1];\n\t} else \n\t\ttarget = (isArray(source)?[]:{});\n\n\tfor (var method in source){\n\t\tvar from = source[method];\n\t\tif(from && typeof from == \"object\" && !(from instanceof RegExp)){\n\t\t\tif (isDate(from))\n\t\t\t\ttarget[method] = new Date(from);\n\t\t\t/* jshint ignore:start */\n\t\t\telse if (esModern && (from instanceof Map || from instanceof Set || from instanceof WeakMap || from instanceof WeakSet))\n\t\t\t\ttarget[method] = from;\n\t\t\t/* jshint ignore:end */\n\t\t\telse {\n\t\t\t\ttarget[method] = (isArray(from)?[]:{});\n\t\t\t\tcopy(target[method],from);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget[method] = from;\n\t\t}\n\t}\n\n\tif (DEBUG) level_out();\n\treturn target;\t\n}\n\nexport function single(source){ \n\tvar instance = null;\n\tvar t = function(){\n\t\tif (!instance)\n\t\t\tinstance = new source({});\n\t\t\t\n\t\tif (instance._reinit)\n\t\t\tinstance._reinit.apply(instance, arguments);\n\t\treturn instance;\n\t};\n\treturn t;\n}\n\n\n//creates function with specified \"this\" pointer\nexport function bind(functor, object){ \n\treturn function(){ return functor.apply(object,arguments); };  \n}\n\n\n//evaluate javascript code in the global scope\nexport function exec(code){\n\treturn window.eval(code);\n}\n\nexport function wrap(code, wrap){\n\tif (!code) return wrap;\n\treturn function(){\n\t\tvar result = code.apply(this, arguments);\n\t\twrap.apply(this,arguments);\n\t\treturn result;\n\t};\n}\n\n//check === undefined\nexport function isUndefined(a){\n\treturn typeof a == \"undefined\";\n}\n//delay call to after-render time\nexport function delay(method, obj, params, delay){\n\treturn window.setTimeout(function(){\n\t\tif(!(obj&&obj.$destructed)){\n\t\t\tvar ret = method.apply(obj,(params||[]));\n\t\t\tmethod = obj = params = null;\n\t\t\treturn ret;\n\t\t}\n\t},delay||1);\n}\n\nexport function once(method){\n\tvar flag = true;\n\treturn function(){\n\t\tif (flag){\n\t\t\tflag = false;\n\t\t\tmethod.apply(this, arguments);\n\t\t}\n\t};\n}\n\n//common helpers\n\n//generates unique ID (unique per window, nog GUID)\nlet _seed = (new Date()).valueOf();\nexport function uid(){\n\t_seed++;\n\treturn _seed;\n}\n//resolve ID as html object\nexport function toNode(node){\n\tif (typeof node == \"string\") return document.getElementById(node);\n\treturn node;\n}\n//resolve function name\nexport function toFunctor(str, scope){ \n\tif (typeof(str)==\"string\"){\n\t\tvar method = str.replace(\"()\",\"\");\n\t\tif (scope && scope[method]) return scope[method];\n\t\treturn window[method] || exec(str);\n\t}\n\treturn str;\n}\n/*checks where an object is instance of Array*/\nexport function isArray(obj) {\n\treturn Array.isArray(obj);\n}\nexport function isDate(obj){\n\treturn obj instanceof Date;\n}\n\n//adds extra methods for the array\nexport function _to_array(array){ \n\treturn extend((array||[]),_power_array, true);\n}\n//can be used by _to_array()\nexport const _power_array={\n\t//remove element at specified position\n\tremoveAt:function(pos,len){\n\t\tif (pos>=0) this.splice(pos,(len||1));\n\t},\n\t//find element in collection and remove it \n\tremove:function(value){\n\t\tthis.removeAt(this.find(value));\n\t},\t\n\t//add element to collection at specific position\n\tinsertAt:function(data,pos){\n\t\tif (!pos && pos!==0)\t//add to the end by default\n\t\t\tthis.push(data);\n\t\telse {\n\t\t\tthis.splice(pos, 0, data); \n\t\t}\n\t},\n\t//return index of element, -1 if it doesn't exists\n\tfind:function(data){ \n\t\tfor (var i=0; i<this.length; i++) \n\t\t\tif (data==this[i]) return i;\n\t\treturn -1; \n\t},\n\t//execute some method for each element of array\n\teach:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tfunctor.call((master||this),this[i]);\n\t},\n\t//create new array from source, by using results of functor \n\tmap:function(functor,master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tthis[i]=functor.call((master||this),this[i]);\n\t\treturn this;\n\t}, \n\tfilter:function(functor, master){\n\t\tfor (var i=0; i < this.length; i++)\n\t\t\tif (!functor.call((master||this),this[i])){\n\t\t\t\tthis.splice(i,1);\n\t\t\t\ti--;\n\t\t\t}\n\t\treturn this;\n\t}\n};\n\n//hook for documentation generator\nif (DEBUG){\n\tif (window.webix_on_core_ready){\n\t\textend = window.webix_on_core_ready({ extend }).extend;\n\t}\n}\n\nexport { extend };","import {extend} from \"./helpers\";\nimport EventSystem from \"../core/eventsystem\";\n\nvar evs = {};\nextend(evs, EventSystem, true);\n\nexport const callEvent = (a,b) => evs.callEvent(a, b);\nexport const attachEvent = (a,b,c,d) => evs.attachEvent(a, b, c, d);\nexport const detachEvent = (a) => evs.detachEvent(a);\nexport const blockEvent = () => evs.blockEvent();\nexport const unblockEvent = () => evs.unblockEvent();\nexport const mapEvent = map => evs.mapEvent(map);\nexport const hasEvent = type => evs.hasEvent(type);\n","import {errorMessage, getFileName} from \"./common\";\n\nimport promise from \"../../thirdparty/promiz\";\nimport require from \"../../load/require\";\nimport env from \"../../webix/env\";\n\nimport {assert} from \"../../webix/debug\";\nimport {toNode} from \"../../webix/helpers\";\nimport {download} from \"../../webix/html\";\nimport {$$} from \"../../ui/core\";\n\nexport const toPNG = function(id, options){\n\tconst defer = promise.defer();\n\n\treturn require(env.cdn + \"/extras/html2canvas-1.0.min.js\").then(function(){\n\t\t//backward compatibility\n\t\tif (typeof options === \"string\") options = { filename: options };\n\t\toptions = options || {};\n\n\t\toptions.export_mode = \"png\";\n\n\t\tlet view = $$(id);\n\t\tif (view && view.$exportView)\n\t\t\tview = view.$exportView(options);\n\t\tassert(view, errorMessage);\n\t\tif(!view) return defer.reject(errorMessage);\n\n\t\tconst node = view ? view.$view : toNode(id);\n\t\tconst filename = getFileName(options.filename, \"png\");\n\n\t\twindow.html2canvas(node, {background:\"#fff\", logging:false, useCORS:true}).then(function(canvas) {\n\t\t\tconst callback = function(data){\n\t\t\t\tif(options.download !== false)\n\t\t\t\t\tdownload(data, filename);\n\t\t\t\tdefer.resolve(data);\n\t\t\t};\n\t\t\tif(canvas.msToBlob)\n\t\t\t\tcallback(canvas.msToBlob());\n\t\t\telse\n\t\t\t\tcanvas.toBlob(callback, \"image/png\");\n\t\t});\n\t\treturn defer;\n\t});\n};","import {errorMessage, getExportScheme, getExportData, getFileName} from \"./common\";\n\nimport csv from \"../../webix/csv\";\nimport promise from \"../../thirdparty/promiz\";\n\nimport {download} from \"../../webix/html\";\nimport {$$} from \"../../ui/core\";\nimport {assert} from \"../../webix/debug\";\nimport {extend} from \"../../webix/helpers\";\n\nexport const toCSV = function(id, options){\n\toptions = options || {};\n\n\tlet view = $$(id);\n\tif (view && view.$exportView)\n\t\tview = view.$exportView(options);\n\tassert(view, errorMessage);\n\tif(!view) return promise.reject(errorMessage);\n\n\toptions.export_mode = \"csv\";\n\n\textend(options, {\n\t\tfilterHTML: true\n\t});\n\n\tconst scheme = getExportScheme(view, options);\n\tconst result = getExportData(view, options, scheme);\n\n\tconst data = getCsvData(result, scheme);\n\tconst filename = getFileName(options.filename, \"csv\");\n\n\tconst blob = new Blob([\"\\uFEFF\" + data], { type: \"text/csv\" });\n\tif(options.download !== false)\n\t\tdownload(blob, filename);\n\n\treturn promise.resolve(blob);\n};\n\nfunction getCsvData(data) {\n\treturn csv.stringify(data);\n}","import {callEvent} from \"./customevents\";\n\nexport function editStop(){\n\tcallEvent(\"onEditEnd\", []);\n}\n","import {create} from \"../webix/html\";\n\n/*submits values*/\nexport default function send(url, values, method, target){\n\tvar form = create(\"FORM\",{\n\t\t\"target\":(target||\"_self\"),\n\t\t\"action\":url,\n\t\t\"method\":(method||\"POST\")\n\t},\"\");\n\tfor (var k in values) {\n\t\tvar field = create(\"INPUT\",{\"type\":\"hidden\",\"name\": k,\"value\": values[k]},\"\");\n\t\tform.appendChild(field);\n\t}\n\tform.style.display = \"none\";\n\tdocument.body.appendChild(form);\n\tform.submit();\n\tdocument.body.removeChild(form);\n}"],"names":["v","d","resolve","getInfo","x","responseText","node","parentNode","removeChild","test","types","_event","css","toString","config","_promise","reject","callback","right","this","getPrev","attachEvent","_inner","size","toolbarHeight","Touch","_axis_x","delta","_x","document","body","className","indexOf","DragControl","_skipDropH","eventRemove","padding","_area","createElement","tableArray","push","sizes","_custom_scroll_size","id","tosave","pull","original_index","Math","min","isArray","result","then","promise","callEvent","getItem","_this3","getInputNode","max","Infinity","code","e","which","keyCode","map","_viewobj","firstChild","_dataobj","scrollTop","y","height","y0","ratio","exists","branch","cont","parentId","getParentId","_filter_branch","state","getScrollState","child","style","width","options","math","item","header","isUndefined","r","R","nextTab","format","name","window","JSON","localStorage","removeItem","_process","select","_freeze_resize","_layout_sizes","_cleanlayout","value","wDate","copy","fixed","filter","increaseValue","lessOrEqual","closeGroup","aria","_contentobj","innerHTML","define","i","_desired_size","_body_cell","$getSize","baseview","api","$setSize","call","_scroll_y","_settings","el","selectedIndex","render","defaults","headerHeight","$active","calendar","heights","length","mode","selected","keys","Object","colors","rgb","obj","label","required","customCheckbox","customRadio","_ignoreLabelClick","inputs","_getInputNode","getValueHere","remove","c","readonly","i18n","suggest","getList","_activeIndex","hActive","html","tabOffset","left","margin","addCss","docHeader","_getHeaderFooter","docFooter","addStyle","preset","top","bottom","view","$customPrint","customPrint","_afterPrint","_print","level","source","instance","_reinit","apply","arguments","wrap","evs","blockEvent","unblockEvent","mapEvent","type","hasEvent","defer","require","env","cdn","filename","export_mode","$$","$exportView","$view","toNode","getFileName","html2canvas","background","logging","useCORS","canvas","data","download","msToBlob","toBlob","errorMessage","extend","filterHTML","scheme","getExportScheme","getExportData","csv","stringify","blob","Blob","text","box_params","alertPopup","input","promptPopup","url","values","method","target","k","form","create","action","field","appendChild","display","submit"],"mappings":";;;;;;;;;AAgHE,OAAIA,EACIC,EAAEC;AC1EXC,QAAQ;AC8HW,OAAOC,EAAEC;AC1EpB,OACCC,GAAQA,EAAKC,YACrBD,EAAKC,WAAWC;AC1Dd,mBAAmBC;ACiHoBC,MAAAA;AC7GzC;ACzBK,SAASC;AC4UN,IADLC,EAAMA,EAAIC;CC1UZC,EAAOC,GAASC;AAwRaC,SAASA;AC9QvCC,MAAS;AAmTT,OAAOC,KAAKC;AClUZD,KAAKE;;ACgBHP,EAAOQ,GAAS;AC4BlB,IAEKC;ACjDNC,cAAc;;AC4DN,CAACC,EAAMC,IAAoC,EAAzBC,EAAMC;AAoW8B,CAAC,IAA1DC,SAASC,KAAKC,UAAUC;AC3G3BC,EAAYC,GAAaC;ACrRsBjB,MAAM,CAAA;AAqV7BkB,QAAQ;ACvWjCjB,KAAKkB,GAAQR,SAASS;ACuCnBC,EAAWC;ACsMd,IAAMC,EAAQnC,EAAKoC;AC7OnB;ACuQyCC,GAAIC,EAAOD;AClHpD,OAAOxB,KAAK0B;AA6UVC,EAAiBC,KAAKC;AA4WvB,OAAIC;ACznBDC,EADIA,EAAOC,KAGZD,EAFUE,EAAQlD;AC9HrBiB,KAAKkC;ACvFiClC,KAAKmC;;ACmY1CC,EAAKC;AC/IQ;ACpOd,OAAOC,IAAQ,CAACC,SAAW,EAAID,CAAAA;ACJ/B,IAAME,EAAOC,EAAEC,OAASD,EAAEE;ACzBmB;ECoDR,IAA1BC,EAAI/B;;ACjBeb,KAAK6C,GAASC;ACwB5C9C,KAAK+C,GAAS3D,WAAW4D,UAAYC;ACTrB;AC4BdC,GAAU;AC5CEC,EAAKD,EAAO;ACcA,EAAIE;CC+DxBpD,KAAKqD;ACxDJC,EAASC,EAAKnE;ACUlB,IAAIoE,EAAWxD,KAAKyD;AA+TAzD,KAAK0D;AC5OC;ACpHzBC,EAAQ3D,KAAK4D;ACwFQC,EAAMC,MAAMC,MAAQ;ACiIvCC,EAAQC,MAAQC;ACXvBF,EAAQG,OAAUC;AC9I6BC,EAAEC;AC9BhDC,QAAQ;ACyD2C,wFAAwFC,EAAO;AA4MjJ;ACzSEC,GAAQC,OAAOC,MAAQD,OAAOE,cAChCF,OAAOE,aAAaC;AChBnB7E,KAAK8E;AC2FFC;AC2FDpB,CAAAA,EAAMqB,IAENhF,KAAKiF;AAqWE;ACpVXjF,KAAKkF,GAAuB,YAAPC,GAA4B,SAAPA;ACUdC,EAAMC;ACnIlC,MAAO;ACtET,IAAIC,GAAQ,CAAA;ACqEXC,OAAO;AC1DNC,cAAc;AC4DdC,YAAa;ACpCbC,WAAW;ACnBZC,KAAK;ACoDLJ,OAAO;AC5FNvF,KAAK4F,GAAYC,UAAY;ACiK7B7F,KAAK8F;ACpGA,IAAIC,EAAE,EAAGA,EAAE,EAAGA,CAAC;ACoBpB,IAAI3F,EAAOJ,KAAKgG,GAAgBhG,KAAKiG,GAAWC;ACnFjDzB,KAAK;;ACyCJ0B,GAASC,IAAIC,SAASC;EC6PSrD;ACnShCwB,KAAK;ACUAzE,KAAKuG,IAAa,CAACvG,KAAKwG,EAAUzC;ACoDd,CAAC,IAAtB0C,EAAGC;AC8HL1G,KAAK2G;ACXJ3G,KAAK4G,SAASC,aAAeC,EAAQC,SAASF;AAgNvC5D,EAAE,EAAGA,EAAE+D,EAAQC,OAAQhE,CAAC;AAuOS,WAAPiE,EAAgB,EAAE,CAAC;AAmOhD,EACHzH,EAAM,0BAEC0H,GAAYpB;AAuNhBqB,EAAOC,OAAOD;ACvzBnBE,EAAOjG;ACzIckG;AC7E0EC,EAAIC,OAAOD,EAAIrC;AAkMzEhG;ACxMQ;AAoO3Ca,KAAKwG,EAAUkB;AClKkB;ACtDpC,OAFCvC,EADa,CAAA,IAAVA,GAAkB2B,EAAQa,eACrB,2LAEFxC;ACwFP,OADCA,EADY,CAAA,IAAVA,GAAkB2B,EAAQc,YACpB,8MACFzC;ACiIQ,EACVhG,EAAK2D,YAA4C,sBAA9B3D,EAAK2D,WAAWlC,UAC/B,GACDzB,EAAK0G,UAEN1G,EAAKgG,MANM;AC/ManF,KAAK6H;AC0B9BC,EAAS9H,KAAK+H;ACjDL/H,KAAKgI;;ACQpBhI,KAAKE;AA0NC+H,EAASC,EAAEC,SAAW,GAAK,mEAAmEC,EAAKzC,KAAKd,WAAW;AAsPlHwD,EAAQC;ACjRStI,KAAKuI;AClC0B,CAAC,GAArDC,EAAQ5H,UAAUC;AC3DlB4H,GAAQ,8CAA8CjB,EAAIkB,UAAU;AChEzD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGdC,KAAM3E,EAAQ4E,OAAOD,MAAgC,IAAxB3E,EAAQ4E,OAAOD,KAAc3E,EAAQ4E,OAAOD,KAAMC,GAGzE5E,CACP,EA7CwBA,CAAD,EAwDjB5D,GAPNyI,EAAOnI,SAASC,KAAK,aAAf,EAEHqD,EAAQ8E,WAAWC,GAAiB,SAAU/E,CAAX,EACnCA,EAAQgF,WAAWD,GAAiB,SAAU/E,CAAX,EAIzBA,EAAQ5D,MAnDrB,GAgEA6I,GAPkB,+BAJjB7I,EAAK8I,OACJ9I,EAAK8I,OAAS,IAAMlF,EAAQkD,KACZ,YAAhBlD,EAAQkD,eAAwB9G,EAAK2D,oBAAW3D,EAAK8C,uBAAgB9C,EAAK8C,qBAAY9C,EAAK2D,aAI3F,eAAcC,EAAQ4E,OAAOO,IAAI,oBAAoBnF,EAAQ4E,OAAOQ,OACpE,mBAAmBpF,EAAQ4E,OAAO7I,MAAM,kBAAkBiE,EAAQ4E,OAAOD,KAE3E,QAEoB,OAAZ,EAhELU,EAAKC,cAEP,GADAC,EAAcF,EAAKC,aAAatF,CAAlB,EACC,CACd,GAAGuF,EAAYvH,KACd,OAAOuH,EAAYvH,KAAK,WAAA,OAAIwH,GAAYxF,CAAD,EAAhC,EACRyF,GAAOJ,EAAMrF,CAAP,QAIPyF,GAAOJ,EAAMrF,CAAP,EAEPwF,GAAYxF,CAAD,EACX,kEC/CoB,gBACD,kBCEb,WACN0F,CAEA,cACM,WACNA,CACA,8BAuEM,SAAgBC,GACtB,IAAIC,EAAW,KASf,OARQ,WAMP,OAJCA,EADIA,GACO,IAAID,EAAO,EAAX,GAECE,IACZD,EAASC,GAAQC,MAAMF,EAAUG,SAAjC,EACMH,EAGR,2BAcM,SAAcpH,EAAMwH,GAC1B,OAAKxH,EACE,WACN,IAAIT,EAASS,EAAKsH,MAAM9J,KAAM+J,SAAjB,EAEb,OADAC,EAAKF,MAAM9J,KAAK+J,SAAhB,EACOhI,GAJUiI,CAMlB,oNCvGyB,WAAA,OAAMC,GAAIC,YAAV,iBACE,WAAA,OAAMD,GAAIE,cAAV,aACJ,SAAAvH,GAAG,OAAIqH,GAAIG,SAASxH,CAAb,CAAJ,aACH,SAAAyH,GAAI,OAAIJ,GAAIK,SAASD,CAAb,CAAJ,yBCDP,SAAS7I,EAAIwC,GACjC,IAAMuG,EAAQtI,EAAQsI,QAEtB,OAAOC,GAAQC,EAAIC,IAAM,gCAAX,EAA6C1I,KAAK,YAG/DgC,GADiCA,EAAV,UAAnB,OAAOA,EAAgC,CAAE2G,SAAU3G,GAC7CA,IAAW,IAEb4G,YAAc,MAEtB,IAOMD,EAPFtB,EAAOwB,EAAGrJ,CAAD,EAIb,OAFC6H,EADGA,GAAQA,EAAKyB,YACTzB,EAAKyB,YAAY9G,CAAjB,EAEJqF,IAEElK,EAAOkK,EAAOA,EAAK0B,MAAQC,EAAOxJ,CAAD,EACjCmJ,EAAWM,GAAYjH,EAAQ2G,SAAU,KAAnB,EAE5BjG,OAAOwG,YAAY/L,EAAM,CAACgM,WAAW,OAAQC,QAAQ,CAAA,EAAOC,QAAQ,CAAA,EAApE,EAA2ErJ,KAAK,SAASsJ,GACxF,IAAMxL,EAAW,SAASyL,GACD,CAAA,IAArBvH,EAAQwH,UACVA,GAASD,EAAMZ,CAAP,EACTJ,EAAMxL,QAAQwM,CAAd,GAEED,EAAOG,SACT3L,EAASwL,EAAOG,UAAR,EAERH,EAAOI,OAAO5L,EAAU,WAAxB,EATF,EAWOyK,GAhBUA,EAAM1K,OAAO8L,EAAb,EAXX,CA6BP,UCjCoB,SAASnK,EAAIwC,GACjCA,EAAUA,GAAW,GAEjBqF,EAAOwB,EAAGrJ,CAAD,EAIb,GAAG,EAFF6H,EADGA,GAAQA,EAAKyB,YACTzB,EAAKyB,YAAY9G,CAAjB,EAEJqF,GAAM,OAAOpH,EAAQpC,OAAO8L,EAAf,EAEjB3H,EAAQ4G,YAAc,MAEtBgB,SAAO5H,EAAS,CACf6H,WAAY,CAAA,EADP,EAIN,IAAMC,EAASC,GAAgB1C,EAAMrF,CAAP,EACxBjC,EAASiK,GAAc3C,EAAMrF,EAAS8H,CAAhB,EAEtBP,EAWCU,GAAIC,UAXanK,CAWjB,EAVD4I,EAAWM,GAAYjH,EAAQ2G,SAAU,KAAnB,EAEtBwB,EAAO,IAAIC,KAAK,CAAC,SAAWb,GAAO,CAAElB,KAAM,WAApC,EAIb,MAHwB,CAAA,IAArBrG,EAAQwH,UACVA,GAASW,EAAMxB,CAAP,EAEF1I,EAAQlD,QAAQoN,CAAhB,CACP,kCxF8QM,WACN,IAAIE,EAAOC,GAAWxC,MAAM9J,KAAM+J,SAAvB,EAEX,OADAsC,EAAKhC,KAAOgC,EAAKhC,MAAQ,QAClBkC,GAAWF,CAAD,CACjB,sCAaM,WACN,IAAIA,EAAOC,GAAWxC,MAAM9J,KAAM+J,SAAvB,EAGX,OAFAsC,EAAKhC,KAAOgC,EAAKhC,MAAQ,SACzBgC,EAAKG,MAAQH,EAAKG,OAAS,GACpBC,GAAYJ,CAAD,CAClB,qCyFrUAnK,EAAU,YAAa,EAAd,CACT,kGCDc,SAAcwK,EAAKC,EAAQC,EAAQC,GACjD,IAKSC,EALLC,EAAOC,EAAO,OAAO,CACxBH,OAAUA,GAAQ,QAClBI,OAASP,EACTE,OAAUA,GAAQ,QACjB,EAJe,EAKjB,IAASE,KAAKH,EAAQ,CACrB,IAAIO,EAAQF,EAAO,QAAQ,CAAC3C,KAAO,SAAS5F,KAAQqI,EAAE3H,MAASwH,EAAOG,IAAI,EAAxD,EAClBC,EAAKI,YAAYD,CAAjB,EAEDH,EAAKjJ,MAAMsJ,QAAU,OACrB1M,SAASC,KAAKwM,YAAYJ,CAA1B,EACAA,EAAKM,SACL3M,SAASC,KAAKtB,YAAY0N,CAA1B,CACA"}